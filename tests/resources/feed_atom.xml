<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?>
<?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:blogger="http://schemas.google.com/blogger/2008" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" xmlns:gd="http://schemas.google.com/g/2005" xmlns:georss="http://www.georss.org/georss" xmlns:openSearch="http://a9.com/-/spec/opensearchrss/1.0/" xmlns:thr="http://purl.org/syndication/thread/1.0">
  <id>tag:blogger.com,1999:blog-6755709643044947179</id>
  <updated>2020-08-27T11:19:55.162-07:00</updated>
  <category term="Featured" />
  <category term="Android" />
  <category term="Google Play" />
  <category term="Develop" />
  <category term="Android Developer" />
  <category term="Games" />
  <category term="android developers" />
  <category term="Android Studio" />
  <category term="Security" />
  <category term="archive" />
  <category term="latest" />
  <category term="Apps" />
  <category term="Announcements" />
  <category term="Google Play services" />
  <category term="Android Wear" />
  <category term="Distribute" />
  <category term="Developer Preview" />
  <category term="NDK" />
  <category term="Google Services" />
  <category term="#11WeeksOfAndroid" />
  <category term="User Interface" />
  <category term="android security" />
  <category term="GooglePlay" />
  <category term="Android N" />
  <category term="Design" />
  <category term="Play Console" />
  <category term="Developer Console" />
  <category term="SDK updates" />
  <category term="Google Play game services" />
  <category term="Android Developer Challenge" />
  <category term="Google Play Console" />
  <category term="How-to" />
  <category term="Kotlin" />
  <category term="Android TV" />
  <category term="App" />
  <category term="Game" />
  <category term="Google Play Games" />
  <category term="Android Market" />
  <category term="AndroidDevStory" />
  <category term="Material Design" />
  <category term="Story" />
  <category term="Tools" />
  <category term="Android Things" />
  <category term="Privacy" />
  <category term="Android 1.5" />
  <category term="Google I/O" />
  <category term="developer" />
  <category term="developers" />
  <category term="Android Auto" />
  <category term="Best Practices" />
  <category term="Location" />
  <category term="android11" />
  <category term="Jetpack" />
  <category term="android p" />
  <category term="compatibility" />
  <category term="Android Design" />
  <category term="Android Dev Summit" />
  <category term="Performance" />
  <category term="UI" />
  <category term="Udacity" />
  <category term="wear" />
  <category term="Android O" />
  <category term="Marshmallow" />
  <category term="Optimization" />
  <category term="Support Library" />
  <category term="androidq" />
  <category term="machine learning" />
  <category term="Android 1.6" />
  <category term="Google Analytics" />
  <category term="permissions" />
  <category term="Google" />
  <category term="Localization" />
  <category term="London" />
  <category term="Android 5.0" />
  <category term="Android Development" />
  <category term="AndroidO" />
  <category term="Audio" />
  <category term="C++" />
  <category term="Europe" />
  <category term="Google Cloud Platform" />
  <category term="IoT" />
  <category term="Tablets" />
  <category term="appstory" />
  <category term="business" />
  <category term="competition" />
  <category term="engagement" />
  <category term="grow" />
  <category term="monetization" />
  <category term="notifications" />
  <category term="prizes" />
  <category term="subscriptions" />
  <category term="win" />
  <category term="API" />
  <category term="Android 11" />
  <category term="Android Instant Apps" />
  <category term="Android Jetpack" />
  <category term="Android Pie" />
  <category term="GDC" />
  <category term="Game Development" />
  <category term="Google Cloud Messaging" />
  <category term="Graphics" />
  <category term="Layout" />
  <category term="News" />
  <category term="Play Store" />
  <category term="Project Treble" />
  <category term="Testing" />
  <category term="UI toolkit" />
  <category term="Wear OS" />
  <category term="admob" />
  <category term="analytics" />
  <category term="developerstory" />
  <category term="indie" />
  <category term="indies" />
  <category term="showcase" />
  <category term="‘Google Play" />
  <category term="#Android" />
  <category term="Android M" />
  <category term="Android Q" />
  <category term="Android Vitals" />
  <category term="App quality" />
  <category term="Google Cast" />
  <category term="Google Play Store" />
  <category term="IO2013" />
  <category term="Open source" />
  <category term="Renderscript" />
  <category term="Saatchi" />
  <category term="androidstudio" />
  <category term="battery" />
  <category term="google play protect" />
  <category term="users" />
  <category term="#androiddevsummit" />
  <category term="#io19" />
  <category term="Android 2.0" />
  <category term="Android Emulator" />
  <category term="App Resources" />
  <category term="Bluetooth" />
  <category term="Firebase" />
  <category term="Game Developers Conference" />
  <category term="Google Assistant" />
  <category term="Google Fit" />
  <category term="Google Play Devs" />
  <category term="Google Play games services" />
  <category term="HTTPS" />
  <category term="In-app Billing" />
  <category term="Indie Games" />
  <category term="Media and Camera" />
  <category term="OpenGL ES" />
  <category term="Pixel" />
  <category term="Policy" />
  <category term="Power series" />
  <category term="Quality" />
  <category term="TensorFlow" />
  <category term="WebView" />
  <category term="androidn" />
  <category term="aosp" />
  <category term="contest" />
  <category term="gamestory" />
  <category term="io15" />
  <category term="nearby" />
  <category term="Actions on Google" />
  <category term="Android 4.2" />
  <category term="Android 6.0" />
  <category term="Android 9" />
  <category term="Android Open Source Project" />
  <category term="Android SDK" />
  <category term="Android for Work" />
  <category term="AndroidWear" />
  <category term="AndroidX" />
  <category term="Animation" />
  <category term="App Components" />
  <category term="Authentication" />
  <category term="Code Day" />
  <category term="Courses" />
  <category term="Developer profiles" />
  <category term="Education" />
  <category term="GCM" />
  <category term="Google Drive" />
  <category term="Google Mobile Ads" />
  <category term="IO2014" />
  <category term="Indie Games Accelerator" />
  <category term="Intents" />
  <category term="Launch" />
  <category term="Launchpad Accelerator" />
  <category term="Licensing" />
  <category term="ML" />
  <category term="ML Kit" />
  <category term="Navigation" />
  <category term="Sample code" />
  <category term="Samples" />
  <category term="Treble" />
  <category term="androidp" />
  <category term="growth" />
  <category term="iOS" />
  <category term="signing" />
  <category term="update" />
  <category term="wifi" />
  <category term="#Android11" />
  <category term="#io17" />
  <category term="#io18" />
  <category term="AI" />
  <category term="APIs" />
  <category term="Activity Recognition" />
  <category term="Ads" />
  <category term="Android 10" />
  <category term="Android 3.0" />
  <category term="Android 3.2" />
  <category term="Android 4.4" />
  <category term="Android Automotive OS" />
  <category term="App Indexing" />
  <category term="Architecture Components" />
  <category term="Beta" />
  <category term="Chromebooks" />
  <category term="Commerce" />
  <category term="Custom Model" />
  <category term="Developer Labs" />
  <category term="Developing Media Apps" />
  <category term="Development Tools" />
  <category term="Early Access" />
  <category term="Firebase Cloud Messaging" />
  <category term="Fragments" />
  <category term="Google For Games" />
  <category term="Google Maps" />
  <category term="Google Play Indie Games Festival" />
  <category term="Google Play for Work" />
  <category term="Google client API" />
  <category term="Google+" />
  <category term="Indie Contest" />
  <category term="Indie Games Festival" />
  <category term="Indie games contest" />
  <category term="Indie games showcase" />
  <category term="Indie showcase" />
  <category term="Input methods" />
  <category term="Instant Apps" />
  <category term="LiquidFun" />
  <category term="Maps" />
  <category term="Maps API" />
  <category term="MaterialDesign" />
  <category term="Media" />
  <category term="Mobile Games" />
  <category term="Notification" />
  <category term="Preview" />
  <category term="Requirements" />
  <category term="SDK Tools" />
  <category term="Screens" />
  <category term="Subscription" />
  <category term="TLS" />
  <category term="TensorFlow Lite" />
  <category term="Text and Input" />
  <category term="UX" />
  <category term="VR" />
  <category term="Virtual Reality" />
  <category term="android oreo" />
  <category term="apk" />
  <category term="chrome" />
  <category term="connection encryption" />
  <category term="developer story" />
  <category term="developergamestory" />
  <category term="event" />
  <category term="events" />
  <category term="fcm" />
  <category term="google play for families" />
  <category term="indie developers" />
  <category term="kernel" />
  <category term="mobile vision APIs" />
  <category term="network security" />
  <category term="oreo" />
  <category term="store listing experiments" />
  <category term="ubicomp" />
  <category term="updates" />
  <category term="workmanager" />
  <category term="#GDC20" />
  <category term="64bit" />
  <category term="Action Bar" />
  <category term="Actions" />
  <category term="Android 2.1" />
  <category term="Android 2.2" />
  <category term="Android 2.3" />
  <category term="Android 7.0" />
  <category term="Android 71" />
  <category term="Android App" />
  <category term="Android App Bundles" />
  <category term="Android Architecture" />
  <category term="Android Architecture Components" />
  <category term="Android Dev" />
  <category term="Android Developer Phone" />
  <category term="Android Game SDK" />
  <category term="Android Go" />
  <category term="Android Pay API" />
  <category term="Android Studio 3.0" />
  <category term="Android Wear 2.0" />
  <category term="Android app development" />
  <category term="Android codelabs" />
  <category term="Android courses" />
  <category term="Android training" />
  <category term="Animation and Graphics" />
  <category term="App Bundle" />
  <category term="AppCompat" />
  <category term="BLE" />
  <category term="Biometrics" />
  <category term="Boston" />
  <category term="C" />
  <category term="Canary" />
  <category term="Compose" />
  <category term="Connectivity" />
  <category term="Conversation API" />
  <category term="Coroutines" />
  <category term="Dashboard" />
  <category term="Daydream" />
  <category term="Debugging" />
  <category term="Developer Console Store Listing Experiments" />
  <category term="Efficient Apps" />
  <category term="Fundamentals" />
  <category term="GDC 2020" />
  <category term="GLSL" />
  <category term="Global" />
  <category term="Google Developer" />
  <category term="Google Play Billing" />
  <category term="Google Play Instant" />
  <category term="Google Wallet" />
  <category term="Google codelabs" />
  <category term="GoogleAPIClient" />
  <category term="Guidelines" />
  <category term="I/O2014" />
  <category term="IME" />
  <category term="Identity" />
  <category term="Internet of Things" />
  <category term="JNI" />
  <category term="Java" />
  <category term="Java 8" />
  <category term="Jetpack Compose" />
  <category term="Kotlin Everywhere" />
  <category term="LVL" />
  <category term="LaunchShow" />
  <category term="Linux" />
  <category term="LondonEng" />
  <category term="Memory Management" />
  <category term="Model Maker" />
  <category term="Nougat" />
  <category term="OpenGL" />
  <category term="Places" />
  <category term="Play Academy" />
  <category term="PlayStore" />
  <category term="Profiling" />
  <category term="Pure" />
  <category term="SEA" />
  <category term="Safe Browsing" />
  <category term="SafetyNet" />
  <category term="Scoped Storage" />
  <category term="Southeast Asia" />
  <category term="Storage" />
  <category term="TLS by default" />
  <category term="TV" />
  <category term="Text-to-Speech" />
  <category term="Translation" />
  <category term="Unity" />
  <category term="User Support" />
  <category term="Web" />
  <category term="Widgets" />
  <category term="androidjetpack" />
  <category term="app signing" />
  <category term="beacons" />
  <category term="beta testing" />
  <category term="billing" />
  <category term="buildingforbillions" />
  <category term="chrome os" />
  <category term="constraintlayout" />
  <category term="conversions" />
  <category term="d8" />
  <category term="dexer" />
  <category term="documentation" />
  <category term="dx" />
  <category term="dynamic delivery" />
  <category term="encryption" />
  <category term="foldable" />
  <category term="foldables" />
  <category term="game design" />
  <category term="google computer science" />
  <category term="hackster" />
  <category term="in-app purchase" />
  <category term="infinite deviation: games" />
  <category term="io2010" />
  <category term="laptops" />
  <category term="library" />
  <category term="malware" />
  <category term="people" />
  <category term="play" />
  <category term="ratings" />
  <category term="release" />
  <category term="reviews" />
  <category term="safety" />
  <category term="social impact" />
  <category term="stable release" />
  <category term="text" />
  <category term="things" />
  <category term="user data" />
  <category term="vulkan" />
  <category term="watch face API" />
  <category term="wearos" />
  <category term="#11WeeksOfAndroid Android TV" />
  <category term="#ADS19" />
  <category term="#Android #Android development # advanced Android #learn Android #build Android apps #Udacity" />
  <category term="#AndroidDev" />
  <category term="#AndroidJetpack" />
  <category term="#AndroidTV #Google Cast #Udacity" />
  <category term="#Androiddevelopment" />
  <category term="#Featured  #android11  #5G" />
  <category term="#GDC17 #GoogleDeveloperDay #GooglePlay #Games #VR #Daydream #Developers #Android #Google Play" />
  <category term="#GPA2017 #GooglePlayAwards #GooglePlay #Games #VR #AR #AndroidWear #Indies #Startup #Apps #Developers #Android #Google Play" />
  <category term="#GPA2018 #GooglePlayAwards #GooglePlay #Games #VR #AR #AndroidWear #Indies #Startup #Apps #Developers #Android #Google Play" />
  <category term="#Game" />
  <category term="#Media" />
  <category term="#advancedAndroid #Udacity" />
  <category term="#codelabcourses" />
  <category term="#codelabs" />
  <category term="#io16" />
  <category term="'Google Play" />
  <category term=".app" />
  <category term="11 Weeks of Android" />
  <category term="11weeksofandroid" />
  <category term="3d" />
  <category term="505 Games" />
  <category term="5G" />
  <category term="8.1" />
  <category term="A/B testing" />
  <category term="AAudio for Android" />
  <category term="ADT-3" />
  <category term="AIY" />
  <category term="AIY Projects" />
  <category term="AMD" />
  <category term="AMP" />
  <category term="APK Expansion Files" />
  <category term="ARM" />
  <category term="ARPU" />
  <category term="ART" />
  <category term="ART profiles" />
  <category term="ASO" />
  <category term="ATSL" />
  <category term="About Fun" />
  <category term="Acquisition" />
  <category term="ActivityResult" />
  <category term="Administration" />
  <category term="Advanced Android course" />
  <category term="Advanced Android training" />
  <category term="Agus Gomez" />
  <category term="Android 11 Compatibility" />
  <category term="Android 2.3.3" />
  <category term="Android 4.0" />
  <category term="Android 4.3" />
  <category term="Android 5.1" />
  <category term="Android 7.1" />
  <category term="Android 8.1" />
  <category term="Android C++" />
  <category term="Android Developers  #GooglePlayAwards #GooglePlay #Games #Indies #Startup #Apps #Developers #Android" />
  <category term="Android Developers Best Practices" />
  <category term="Android Devs" />
  <category term="Android Excellence" />
  <category term="Android Gradle Plugin" />
  <category term="Android IDE" />
  <category term="Android IO" />
  <category term="Android Keystore" />
  <category term="Android O Developer Preview" />
  <category term="Android One" />
  <category term="Android Paging" />
  <category term="Android Pay" />
  <category term="Android Performance Tuner" />
  <category term="Android Q Beta" />
  <category term="Android Q Beta 6" />
  <category term="Android Scudo" />
  <category term="Android Security Rewards" />
  <category term="Android Security Rewards Program" />
  <category term="Android Studio 3.6" />
  <category term="Android Studio 4.0" />
  <category term="Android Testing Support Library" />
  <category term="Android VRP" />
  <category term="Android for cars" />
  <category term="Android graphics" />
  <category term="AndroidDev" />
  <category term="AndroidGameDev" />
  <category term="AnswerLab" />
  <category term="AoG" />
  <category term="App Bundles" />
  <category term="App Startup" />
  <category term="App experience" />
  <category term="App icons" />
  <category term="Application Security Improvement Program" />
  <category term="Architecture" />
  <category term="Assistant" />
  <category term="Assistant SDK" />
  <category term="Auto" />
  <category term="Auto Backup" />
  <category term="Autofill Framework" />
  <category term="BABBQ" />
  <category term="Benchmarking" />
  <category term="Betatesting" />
  <category term="Billions" />
  <category term="Biometric authentication" />
  <category term="BiometricPrompt" />
  <category term="BiometricPrompt API" />
  <category term="Budge Studios" />
  <category term="Bugs" />
  <category term="C++ audio library for Android" />
  <category term="CFI" />
  <category term="Call Log" />
  <category term="CameraX" />
  <category term="Certificates" />
  <category term="Certification" />
  <category term="Channels" />
  <category term="Cloud Speech API" />
  <category term="Compiler Mitigations" />
  <category term="Compiler-based security" />
  <category term="Complications" />
  <category term="Consistency" />
  <category term="Console" />
  <category term="Contacts" />
  <category term="Content Provider" />
  <category term="Control Flow Integrity" />
  <category term="Cool Stuff" />
  <category term="Crostini" />
  <category term="CultureAlley" />
  <category term="DAC/Design" />
  <category term="DAC/Develop" />
  <category term="DNS over TLS" />
  <category term="DP3" />
  <category term="Demographics" />
  <category term="Deprecation" />
  <category term="DevTools" />
  <category term="Developer Accounts" />
  <category term="Developer Days" />
  <category term="DialogFragment" />
  <category term="Disruptor Beam" />
  <category term="Doze" />
  <category term="Driving Do Not Disturb" />
  <category term="EA" />
  <category term="Editors’ Choice" />
  <category term="Electronic Arts" />
  <category term="Engage" />
  <category term="Enterprise" />
  <category term="ExoPlayer" />
  <category term="Facebook" />
  <category term="Fast Pair" />
  <category term="Feedback" />
  <category term="Finance" />
  <category term="Find My Device" />
  <category term="Fit" />
  <category term="Fortify" />
  <category term="Fragment" />
  <category term="GDC17" />
  <category term="GDC19" />
  <category term="GDC20" />
  <category term="GNSS" />
  <category term="GPGS" />
  <category term="GPS" />
  <category term="GSI" />
  <category term="GameDev" />
  <category term="Games and Media" />
  <category term="Gareth Jones" />
  <category term="Gesture Navigation" />
  <category term="Gestures" />
  <category term="Global events" />
  <category term="Gmail" />
  <category term="Golf Clash" />
  <category term="Google APIs" />
  <category term="Google Apps" />
  <category term="Google Awareness API" />
  <category term="Google Developers" />
  <category term="Google Home app" />
  <category term="Google Mobile Developer Day" />
  <category term="Google Now" />
  <category term="Google Play Asset Delivery" />
  <category term="Google Play Developer API" />
  <category term="Google Play Developer API V3" />
  <category term="Google Play Developer API Version 3" />
  <category term="Google Play Points" />
  <category term="Google Play Protect Rewards Program" />
  <category term="Google Sign-In" />
  <category term="Google registry" />
  <category term="GoogleDeveloperDay" />
  <category term="GooglePlay AndroidDev" />
  <category term="Gpfe" />
  <category term="GridLayout" />
  <category term="HAL" />
  <category term="HWASan" />
  <category term="HelloEnglish" />
  <category term="Holo" />
  <category term="HttpsURLConnection" />
  <category term="Hutch" />
  <category term="Hutch Games" />
  <category term="HyperV" />
  <category term="I/O 2018" />
  <category term="ICS" />
  <category term="IO" />
  <category term="IO 2019" />
  <category term="Image Processing" />
  <category term="Indie games developers" />
  <category term="Indonesia" />
  <category term="Indonesia Games Contest" />
  <category term="Intent" />
  <category term="Inzen studio" />
  <category term="Issue Tracker" />
  <category term="Japan" />
  <category term="JetBrains" />
  <category term="Job Scheduler" />
  <category term="Job Service" />
  <category term="KNOX" />
  <category term="Key Attestation" />
  <category term="Keystone" />
  <category term="Klei Entertainment" />
  <category term="Kotlin Event" />
  <category term="Kotlin codelabs" />
  <category term="KotlinConf" />
  <category term="LTV" />
  <category term="LaMatinale" />
  <category term="Large Screens" />
  <category term="LeMonde" />
  <category term="Life of a Bug" />
  <category term="Lifecycle" />
  <category term="Linux on Chrome OS" />
  <category term="Linux on Chromebooks" />
  <category term="LiveData" />
  <category term="Lollipop" />
  <category term="MENA" />
  <category term="Marta Gui" />
  <category term="MediaSession" />
  <category term="Memory Safety" />
  <category term="Messenger" />
  <category term="MotionLayout" />
  <category term="Mountain View" />
  <category term="Multiwindow" />
  <category term="Munich" />
  <category term="Music" />
  <category term="NBU" />
  <category term="NFC" />
  <category term="NLP" />
  <category term="Nav Editor" />
  <category term="Niji Games" />
  <category term="Nix Hydra" />
  <category term="Non-SDK" />
  <category term="Notification bubbles" />
  <category term="Now in Arabic" />
  <category term="O-MG" />
  <category term="OAuth" />
  <category term="OS Updates" />
  <category term="Oboe audio library" />
  <category term="Omnidrone" />
  <category term="On-Device Machine Learning" />
  <category term="Onboarding" />
  <category term="OpenSL ES for Android" />
  <category term="Operating System" />
  <category term="P2P" />
  <category term="PWA" />
  <category term="Paging" />
  <category term="Paul Gouge" />
  <category term="Photo Sphere" />
  <category term="Physics" />
  <category term="Pico" />
  <category term="Pixel 2" />
  <category term="Platform" />
  <category term="Platform Stability" />
  <category term="Play IO19" />
  <category term="Playdemic" />
  <category term="Playtime 2016" />
  <category term="Plugin" />
  <category term="Pocket Gems" />
  <category term="Potentially Harmful Applications" />
  <category term="Pre-Launch Report" />
  <category term="Project Mainline" />
  <category term="Promo Graphics" />
  <category term="Promotions" />
  <category term="Public Tracker" />
  <category term="Q Beta 6" />
  <category term="Quick Search Box" />
  <category term="R8" />
  <category term="RTL" />
  <category term="Ratings and Reviews" />
  <category term="Releases" />
  <category term="Resources" />
  <category term="Robinhood" />
  <category term="SMS" />
  <category term="Sanitizers" />
  <category term="Santa Tracker" />
  <category term="Schell Games" />
  <category term="ScreenCapture" />
  <category term="Sensors" />
  <category term="Seriously" />
  <category term="ShareActionProvider" />
  <category term="Shared Elements" />
  <category term="Sharing" />
  <category term="Shortcuts" />
  <category term="Skyscanner" />
  <category term="Smartlock" />
  <category term="Social Point" />
  <category term="South Korea" />
  <category term="Space" />
  <category term="Space Ape Games" />
  <category term="Speech Input" />
  <category term="Stencils" />
  <category term="Storytoys" />
  <category term="Studio" />
  <category term="Super Evil MegaCorp" />
  <category term="Survey" />
  <category term="System hardening" />
  <category term="TAGS: Google Play" />
  <category term="TEE" />
  <category term="Tel Aviv" />
  <category term="Telephony" />
  <category term="Tips" />
  <category term="Titan Brawl" />
  <category term="Touch" />
  <category term="Trusted User Interface" />
  <category term="Twitter" />
  <category term="UAMP" />
  <category term="Updatability" />
  <category term="User Feedback" />
  <category term="VGames" />
  <category term="Viber" />
  <category term="Video" />
  <category term="Visibility" />
  <category term="Vitals" />
  <category term="Voice" />
  <category term="Voice Kit" />
  <category term="Wear UI Library" />
  <category term="Wearables" />
  <category term="Webdriver" />
  <category term="Wide Color" />
  <category term="Work Manager" />
  <category term="World Food Day" />
  <category term="XmlPullParser" />
  <category term="YouTube" />
  <category term="accessibility" />
  <category term="advanced Android" />
  <category term="android 8.0" />
  <category term="android audio apps" />
  <category term="android c++ games linux open source release osx serialization windows" />
  <category term="android extension pack" />
  <category term="android kotlin" />
  <category term="android o apis" />
  <category term="android privacy" />
  <category term="android sanitizer" />
  <category term="android things 1.0" />
  <category term="android wear 1.0" />
  <category term="android10" />
  <category term="android71" />
  <category term="android81" />
  <category term="android9" />
  <category term="androidoreo" />
  <category term="announcement" />
  <category term="app attribution" />
  <category term="app id" />
  <category term="app install" />
  <category term="app standby buckets" />
  <category term="app updates" />
  <category term="appbundle" />
  <category term="apps games insights" />
  <category term="ar" />
  <category term="arch" />
  <category term="arcore" />
  <category term="attestation" />
  <category term="audio playback capture" />
  <category term="audio recording" />
  <category term="augmented reality" />
  <category term="autofill" />
  <category term="award" />
  <category term="awareness" />
  <category term="background" />
  <category term="background access" />
  <category term="background location" />
  <category term="badge" />
  <category term="bar code" />
  <category term="beacon" />
  <category term="beginner" />
  <category term="betatesting GooglePlayforFamilies" />
  <category term="big data" />
  <category term="blackhat" />
  <category term="bootcamp" />
  <category term="bubbles" />
  <category term="bug swatting" />
  <category term="build Android apps" />
  <category term="bulletins" />
  <category term="business development" />
  <category term="case study" />
  <category term="clang" />
  <category term="class loading" />
  <category term="codelabs" />
  <category term="codesearch" />
  <category term="coding" />
  <category term="color" />
  <category term="companion Action" />
  <category term="context" />
  <category term="conversations" />
  <category term="course" />
  <category term="cross-platform" />
  <category term="cutout" />
  <category term="dalvik" />
  <category term="data storage" />
  <category term="ddms" />
  <category term="deeplocal" />
  <category term="desktop" />
  <category term="desktop apps" />
  <category term="developer profile" />
  <category term="developer stories" />
  <category term="developerappstory" />
  <category term="developerstory developerconsole" />
  <category term="device id" />
  <category term="dynamicdelivery" />
  <category term="eBook" />
  <category term="emojis" />
  <category term="emulator" />
  <category term="face detection" />
  <category term="families" />
  <category term="first app" />
  <category term="fitness" />
  <category term="font updates" />
  <category term="form factors" />
  <category term="free trial" />
  <category term="game-as-a-service" />
  <category term="games business" />
  <category term="gaming industry" />
  <category term="gapid" />
  <category term="gdc18" />
  <category term="getting started" />
  <category term="go edition" />
  <category term="gold" />
  <category term="golf games" />
  <category term="google pay" />
  <category term="google play developers" />
  <category term="google security" />
  <category term="googleservices" />
  <category term="guide" />
  <category term="how to develop audio apps for android" />
  <category term="http" />
  <category term="i18n" />
  <category term="imakeapps" />
  <category term="insider attack resistance" />
  <category term="insights" />
  <category term="install referrer" />
  <category term="install track" />
  <category term="installs" />
  <category term="instant" />
  <category term="instant experience" />
  <category term="instant games" />
  <category term="internationalization" />
  <category term="internet" />
  <category term="intuit" />
  <category term="io16" />
  <category term="io18" />
  <category term="keys" />
  <category term="kids app developers" />
  <category term="kids apps" />
  <category term="ktx" />
  <category term="l10n" />
  <category term="language" />
  <category term="language id" />
  <category term="language identification" />
  <category term="laptop apps" />
  <category term="large screen devices" />
  <category term="latency" />
  <category term="leanback" />
  <category term="learn Android" />
  <category term="learning" />
  <category term="listing" />
  <category term="liveops" />
  <category term="location access" />
  <category term="location data" />
  <category term="long aspect ratio" />
  <category term="machine" />
  <category term="marble" />
  <category term="media controls" />
  <category term="memory" />
  <category term="messaging api" />
  <category term="mobile" />
  <category term="mobile ads" />
  <category term="mobile encryption" />
  <category term="mobile search" />
  <category term="motion." />
  <category term="multi-display support" />
  <category term="multiplayer" />
  <category term="network" />
  <category term="oboe" />
  <category term="of" />
  <category term="official launch" />
  <category term="offline" />
  <category term="ordered broadcast" />
  <category term="oscon" />
  <category term="packaging" />
  <category term="patch level" />
  <category term="patching" />
  <category term="pathway" />
  <category term="peer group" />
  <category term="phone" />
  <category term="play billing" />
  <category term="play billing library" />
  <category term="play core" />
  <category term="playback resumption" />
  <category term="playbook app" />
  <category term="playconsole" />
  <category term="player engagement" />
  <category term="podcast" />
  <category term="pre rotation" />
  <category term="pre-leaunch" />
  <category term="programming" />
  <category term="project marble" />
  <category term="protection" />
  <category term="publishing" />
  <category term="purchase flows" />
  <category term="push messaging" />
  <category term="pwn" />
  <category term="recaptcha" />
  <category term="registration" />
  <category term="regulations" />
  <category term="revenue" />
  <category term="robotics" />
  <category term="runtime permissions" />
  <category term="sandbox" />
  <category term="sanitizer" />
  <category term="sdk" />
  <category term="seamless transfer" />
  <category term="secure hardware" />
  <category term="security infrastructure" />
  <category term="selinux" />
  <category term="smart reply" />
  <category term="smr" />
  <category term="source code" />
  <category term="spam" />
  <category term="spyware" />
  <category term="stability" />
  <category term="storelistingexperime" />
  <category term="strictmode" />
  <category term="success stories" />
  <category term="system UI" />
  <category term="system fonts" />
  <category term="tamper-resistant hardware security" />
  <category term="target API" />
  <category term="targeted spyware" />
  <category term="taxation" />
  <category term="text styling API" />
  <category term="textclassifier" />
  <category term="textview" />
  <category term="threading" />
  <category term="titan" />
  <category term="traceview" />
  <category term="training" />
  <category term="transition api" />
  <category term="transitions" />
  <category term="transparency" />
  <category term="trial period" />
  <category term="user control" />
  <category term="user experience" />
  <category term="user location" />
  <category term="viewpager" />
  <category term="watch faces" />
  <category term="web registry" />
  <title type="text">Android Developers Blog</title>
  <subtitle type="html">An Open Handset Alliance Project.</subtitle>
  <link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/" />
  <link rel="next" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default?start-index=26&amp;max-results=25&amp;redirect=false" />
  <author>
    <name>Jacob Lehrbaum</name>
    <uri>http://www.blogger.com/profile/13732208892143144743</uri>
    <email>noreply@blogger.com</email>
    <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
  </author>
  <generator version="7.00" uri="http://www.blogger.com">Blogger</generator>
  <openSearch:totalResults>1151</openSearch:totalResults>
  <openSearch:startIndex>1</openSearch:startIndex>
  <openSearch:itemsPerPage>25</openSearch:itemsPerPage>
  <atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/blogspot/hsDu" />
  <feedburner:info uri="blogspot/hsdu" />
  <atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" />
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-8165319596843696022</id>
    <published>2020-08-26T10:02:00.001-07:00</published>
    <updated>2020-08-26T10:02:56.898-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Jetpack" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Studio" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Compose" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Jetpack" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Jetpack Compose" />
    <title type="text">Announcing Jetpack Compose Alpha!</title>
    <content type="html">&lt;meta name="twitter:image" content="https://2.bp.blogspot.com/--asT-h3qn_s/X0aLtRWOesI/AAAAAAAAPkY/iOkd702WAts7_4dIXlzQhyiJWGaL5f9CgCLcBGAsYHQ/s1600/JetpackCompose_logo.png"&gt;
      &lt;img style="display:none" src="https://2.bp.blogspot.com/--asT-h3qn_s/X0aLtRWOesI/AAAAAAAAPkY/iOkd702WAts7_4dIXlzQhyiJWGaL5f9CgCLcBGAsYHQ/s1600/JetpackCompose_logo.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by &lt;a href="https://twitter.com/karenkayliu"&gt;Karen Ng&lt;/a&gt;, Director, Product Management &lt;/em&gt;&lt;p&gt;

      &lt;a href="https://3.bp.blogspot.com/-VVp3WvJvl84/X0Vu6EjYqDI/AAAAAAAAPjU/ZOMKiUlgfg8ok8DY8Hc-ocOvGdB0z86AgCLcBGAsYHQ/s1600/jetpack%2Bcompose%2Bicon_RGB.png" imageanchor="1" &gt;&lt;img style="width:200px" border="0" src="https://3.bp.blogspot.com/-VVp3WvJvl84/X0Vu6EjYqDI/AAAAAAAAPjU/ZOMKiUlgfg8ok8DY8Hc-ocOvGdB0z86AgCLcBGAsYHQ/s1600/jetpack%2Bcompose%2Bicon_RGB.png" data-original-width="1251" data-original-height="1353" align="right" /&gt;&lt;/a&gt;

      &lt;p&gt; Today, we’re releasing the alpha of &lt;a href="https://developer.android.com/jetpack/compose"&gt;Jetpack Compose&lt;/a&gt;, our modern UI toolkit designed to help you quickly and easily build beautiful apps across all Android platforms, with native access to the platform APIs. Bring your app to life with dramatically less code, interactive tools, and intuitive Kotlin APIs.
      &lt;/p&gt;


      &lt;p&gt;
      No matter where you’re working from -- whether it’s your kitchen table or an office, we know you need a programming language, an IDE and a powerful UI framework that can save you time and reduce how much code you need to write. So we built Jetpack Compose to make you (and us!) more productive with building UI.
      &lt;/p&gt;
      &lt;p&gt;
      We started with &lt;a href="https://developer.android.com/jetpack"&gt;Android Jetpack&lt;/a&gt; — taking the hardest, most common developer problems on Android and creating a suite of libraries that ensure high quality apps that work across all versions of the platform. Today, 84% of the top 10,000 apps in the Play store are using a Jetpack library.
      &lt;/p&gt;
      &lt;p&gt;
      Then we heard how developers love Kotlin, with over 70% of the top 1000 apps and 60% of pro Android developers using Kotlin today. The &lt;a href="https://developer.android.com/stories/apps/google-home"&gt;Google Home&lt;/a&gt; app saw, in certain instances, an 80% reduction in lines of code by using Kotlin and a decrease of NullPointerExceptions by 33% compared to a similar past period. &lt;a href="https://developer.android.com/stories/apps/duolingo-kotlin"&gt;Duolingo&lt;/a&gt;, saw reduced line count by an average of 30%.
      &lt;/p&gt;
      &lt;p&gt;
      Finally, we heard strong feedback from the community that developers like the simplicity of declarative APIs for building UI. Jetpack Compose combines all three of these: APIs for high quality apps at scale, an intuitive language, and a reactive programming model.
      &lt;/p&gt;


      &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-cxPO9bE5QT4/X0Vw6rOOAAI/AAAAAAAAPjg/UmpOu9X6wHMUFaEjuJEdfOcOcwuKEefTwCLcBGAsYHQ/s1600/Screen%2BShot%2B2019-05-06%2Bat%2B9.48.28%2BAM.png" imageanchor="1" &gt;&lt;img style="width: 600px" border="0" src="https://1.bp.blogspot.com/-cxPO9bE5QT4/X0Vw6rOOAAI/AAAAAAAAPjg/UmpOu9X6wHMUFaEjuJEdfOcOcwuKEefTwCLcBGAsYHQ/s1600/Screen%2BShot%2B2019-05-06%2Bat%2B9.48.28%2BAM.png" data-original-width="1600" data-original-height="879" alt= Jetpack Compose image /&gt;&lt;/a&gt; &lt;/center&gt;


      &lt;h1&gt;Jetpack Compose: Now in Alpha&lt;/h1&gt;


      &lt;p&gt;
      &lt;strong&gt;Jetpack Compose Alpha&lt;/strong&gt; has what you need to build full-fledged Android apps, including powerful tools and interoperability with existing Android views so you don’t need to rewrite your app. Compose APIs are designed and developed hand-in-hand with a set of &lt;a href="http://www.github.com/android/compose-samples"&gt;canonical sample apps&lt;/a&gt; that use Material Design that we’re excited to release today! You can &lt;a href="https://developer.android.com/jetpack/compose/setup#sample"&gt;import and explore&lt;/a&gt; the latest samples directly in Android Studio as well.
      &lt;/p&gt;

      &lt;center&gt; &lt;a href="https://4.bp.blogspot.com/-LJVcQ2ShKn8/X0VxshW7nBI/AAAAAAAAPjs/z2a9aawkpl84NDnAsW924w7b46DdSI05ACLcBGAsYHQ/s1600/compose_samples.gif" imageanchor="1" &gt;&lt;img style="width:600px" border="0" src="https://4.bp.blogspot.com/-LJVcQ2ShKn8/X0VxshW7nBI/AAAAAAAAPjs/z2a9aawkpl84NDnAsW924w7b46DdSI05ACLcBGAsYHQ/s1600/compose_samples.gif" data-original-width="1024" data-original-height="576" alt= compose samples gif/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p&gt;
      The alpha release includes:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;Animations

      &lt;li&gt;Constraint Layout

      &lt;li&gt;Initial A11Y support

      &lt;li&gt;Input and Gestures

      &lt;li&gt;Interoperability with Views (start mixing Composable functions in your existing app)

      &lt;li&gt;Lazy Lists

      &lt;li&gt;Material UI components

      &lt;li&gt;Performance optimizations

      &lt;li&gt;Testing

      &lt;li&gt;Text and editable Text

      &lt;li&gt;Theming and Graphics

      &lt;li&gt;Window management
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      We've also added a number of new capabilities to Android Studio 4.2 canary, in close partnership with the &lt;a href="https://kotlinlang.org/"&gt;JetBrains Kotlin team&lt;/a&gt;, to help you build apps with Compose:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;Compose Code completion

      &lt;li&gt;Compose Preview Annotations

      &lt;li&gt;Deploy individual composables to any device

      &lt;li&gt;Interactive Compose previews

      &lt;li&gt;Kotlin compiler plugin for code generation

      &lt;li&gt;Sample Data API for Compose
      &lt;/li&gt;
      &lt;/ul&gt;

      &lt;center&gt; &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/U5BwfqBpiWU" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt; &lt;/center&gt;

      &lt;h2&gt;Thinking in Compose&lt;/h2&gt;


      &lt;p&gt;
      Compose uses a programming model that is quite different from the existing model of building UI on Android. Historically, an Android view hierarchy has been represented as a tree of UI widgets. As the state of the app changes, the UI hierarchy needs to be updated to display the current data. The most common way of updating the UI is to walk the tree using functions like &lt;a href="https://android.devsite.corp.google.com/reference/android/view/View#findViewById(int)"&gt;findViewById()&lt;/a&gt;, and change nodes by calling methods like: &lt;pre&gt; button.setText(String) &lt;/pre&gt; &lt;pre&gt;container.addView(View) &lt;/pre&gt; &lt;pre&gt; img.setImageBitmap(Bitmap) &lt;/pre&gt; These methods change the internal state of the widget. Not only can this be tedious, but updating views manually increases the likelihood of errors (e.g. forgetting to update a view).
      &lt;/p&gt;
      &lt;p&gt;
      Jetpack Compose is a fully declarative component-based approach, meaning you describe your UI as functions that transform data into a UI hierarchy. When the underlying data changes, the Compose framework automatically updates the UI hierarchy for you, making it simple to build UIs easily and quickly.
      &lt;/p&gt;
      &lt;p&gt;

      &lt;center&gt; &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/SMOhl9RK0BA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;/center&gt;


      &lt;h2&gt;Full interop with existing Android views&lt;/h2&gt;


      &lt;p&gt;
      Adopting any new framework is a big change for existing projects and codebases, which is why we’ve designed Compose to be as easy to adopt as Kotlin — it is fully interoperable with existing Android code, from day one.
      &lt;/p&gt;
      &lt;p&gt;
      Migrating to Compose depends on you and your team. If you're building a new app, the best option might be to implement your entire UI with Compose. We know that most of you have large existing codebases, so rather than rewriting your app, you can combine Compose with your existing UI design.
      &lt;/p&gt;
      &lt;p&gt;
      There are two main ways you can combine Compose with a view-based UI:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;You can add Compose elements into your existing UI, either by creating an entirely new Compose-based screen, or by adding Compose elements into an existing fragment or view layout.

      &lt;li&gt;You can add a view-based UI element into your composable functions. Doing so lets you add non-Compose widgets, such as MapView or WebView, into a Compose-based design.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      We’ve also published a new library, &lt;a href="https://material-components.github.io/material-components-android-compose-theme-adapter/"&gt;MDC Compose Theme Adapter&lt;/a&gt;, which allows you to reuse your existing &lt;a href="https://material.io/develop/android/"&gt;Material Components&lt;/a&gt; themes within your Compose UI.
      &lt;/p&gt;
      &lt;p&gt;
      To learn more, try the &lt;a href="https://codelabs.developers.google.com/codelabs/android-compose-migration"&gt;Compose for existing apps codelab&lt;/a&gt; or check out these two samples:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;a href="http://tivi.app"&gt;Tivi&lt;/a&gt; and &lt;a href="http://goo.gle/sunflower-compose"&gt;Sunflower&lt;/a&gt; are existing apps which are being integrated with Compose

      &lt;li&gt;Crane &lt;a href="https://github.com/android/compose-samples/"&gt;sample app&lt;/a&gt;, embeds a MapView in Compose
      &lt;/li&gt;
      &lt;/ul&gt;

      &lt;center&gt; &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/PjQdFmiDgwk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt; &lt;/center&gt;

      &lt;h2&gt;Powerful Tools&lt;/h2&gt;


      &lt;p&gt;
      Jetpack Compose is built with powerful tooling in Android Studio, designed to help you iterate quickly on the piece of UI you’re working on.
      &lt;/p&gt;
      &lt;p&gt;
      The Compose layout preview enables you to preview your Compose components without having to deploy your app to a device or emulator. As you develop your app, your previews update to help you review your changes faster. To create a layout preview, write a composable function that does not take any parameters, and add the &lt;pre&gt; @Preview annotation &lt;/pre&gt; After you build your app, the preview function's UI appears in Studio's &lt;strong&gt;Preview&lt;/strong&gt; pane.
      &lt;/p&gt;

      &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-nkxrJO6kIZk/X0VyUgVOlaI/AAAAAAAAPj0/rnNtkiT_0z0cYyr_kBBTVw4nYIuIi6QkACLcBGAsYHQ/s1600/jetpack-compose-preview.gif" imageanchor="1" &gt;&lt;img style="width: 600px" border="0" src="https://1.bp.blogspot.com/-nkxrJO6kIZk/X0VyUgVOlaI/AAAAAAAAPj0/rnNtkiT_0z0cYyr_kBBTVw4nYIuIi6QkACLcBGAsYHQ/s1600/jetpack-compose-preview.gif" data-original-width="1565" data-original-height="758" alt= Jetpack Compose gif /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p&gt;
      Android Studio provides an &lt;em&gt;interactive preview&lt;/em&gt; mode. While you're in interactive preview mode, you can click or type in your UI elements, and the UI responds as if it were in the installed app.
      &lt;/p&gt;

      &lt;center&gt; &lt;a href="https://3.bp.blogspot.com/-VJs-LV-Ec0c/X0Vy6FcZbBI/AAAAAAAAPj8/c2VxYCzVnaE5dxZEOr_O6M2quFTfoG2KACLcBGAsYHQ/s1600/unnamed.gif" imageanchor="1" &gt;&lt;img style="width:600px" border="0" src="https://3.bp.blogspot.com/-VJs-LV-Ec0c/X0Vy6FcZbBI/AAAAAAAAPj8/c2VxYCzVnaE5dxZEOr_O6M2quFTfoG2KACLcBGAsYHQ/s1600/unnamed.gif" data-original-width="512" data-original-height="267" alt= Jetpack Compose gif /&gt;&lt;/a&gt; &lt;/center&gt;


      &lt;p&gt;
      You can also deploy a single composable to your physical device or Android Emulator. Android Studio creates a new activity containing the UI generated by that function, and deploys it to your app on the device. This lets you try out the UI on an actual device without needing to reinstall the entire app or navigate to its location.
      &lt;/p&gt;

      &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-wjMlDBTfOqA/X0VzQz9HcyI/AAAAAAAAPkE/mcj3BH39R-4_PIO1MHWyL8lQEq8ze7QQQCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%252813%2529.png" imageanchor="1" &gt;&lt;img style="width:600px" border="0" src="https://1.bp.blogspot.com/-wjMlDBTfOqA/X0VzQz9HcyI/AAAAAAAAPkE/mcj3BH39R-4_PIO1MHWyL8lQEq8ze7QQQCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%252813%2529.png" data-original-width="1600" data-original-height="901" alt= Jetpack Compose gif /&gt;&lt;/a&gt; &lt;/center&gt;


      &lt;h2&gt;Get started with Jetpack Compose&lt;/h2&gt;


      &lt;p&gt;
      To get started with Jetpack Compose, try the &lt;a href="https://developer.android.com/jetpack/compose/tutorial"&gt;Compose Tutorial&lt;/a&gt; and &lt;a href="https://developer.android.com/jetpack/compose/setup#add-compose"&gt;get setup&lt;/a&gt;. Or dive right into the &lt;a href="https://www.github.com/android/compose-samples"&gt;sample apps&lt;/a&gt; and walk through those apps in ‘Compose by Example’:
      &lt;/p&gt;


      &lt;center&gt; &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DDd6IOlH3io" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt; &lt;/center&gt;


      &lt;p&gt;
      To find a comprehensive set of Compose resources, from new &lt;a href="http://goo.gle/compose-codelabs"&gt;codelabs&lt;/a&gt; and expanded documentation, see the &lt;a href="https://developer.android.com/courses/pathways/compose"&gt;Compose pathway&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      Since we open-sourced Jetpack Compose &lt;a href="https://android-developers.googleblog.com/2019/05/whats-new-with-android-jetpack.html"&gt;last year&lt;/a&gt;, so many of you have given us invaluable feedback, logged bugs, or contributed CLs and have gotten us where we are today. Thank you!
      &lt;/p&gt;
      &lt;p&gt;
      Compose isn’t recommended for full production use yet, in particular as we work towards API stability and finish performance optimizations, but we’d love you to give it a try and share &lt;a href="https://issuetracker.google.com/issues/new?component=612128"&gt;feedback&lt;/a&gt;. Join us in the discussion on the #compose channel at &lt;a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up"&gt;Kotlin Slack&lt;/a&gt;. Compose 1.0 is expected in 2021.
      &lt;/p&gt;
      &lt;p&gt;
      Happy Composing!
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=_8MvskXB9Tw:YCxArO68b6k:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=_8MvskXB9Tw:YCxArO68b6k:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=_8MvskXB9Tw:YCxArO68b6k:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/_8MvskXB9Tw" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8165319596843696022" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8165319596843696022" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/_8MvskXB9Tw/announcing-jetpack-compose-alpha.html" title="Announcing Jetpack Compose Alpha!" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/--asT-h3qn_s/X0aLtRWOesI/AAAAAAAAPkY/iOkd702WAts7_4dIXlzQhyiJWGaL5f9CgCLcBGAsYHQ/s72-c/JetpackCompose_logo.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/announcing-jetpack-compose-alpha.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-7017086779229199384</id>
    <published>2020-08-21T12:08:00.001-07:00</published>
    <updated>2020-08-21T12:09:07.180-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="#Android" />
    <category scheme="http://www.blogger.com/atom/ns#" term="#AndroidDev" />
    <category scheme="http://www.blogger.com/atom/ns#" term="#Game" />
    <category scheme="http://www.blogger.com/atom/ns#" term="#Media" />
    <category scheme="http://www.blogger.com/atom/ns#" term="11 Weeks of Android" />
    <category scheme="http://www.blogger.com/atom/ns#" term="5G" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Games" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Games and Media" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play" />
    <title type="text">11 Weeks of Android: Games, media, and 5G</title>
    <content type="html">&lt;meta name="twitter:image" content="https://4.bp.blogspot.com/-JnCCv_QTFRo/Xz_O-u8dCSI/AAAAAAAAPi4/cUS1N23JoLMBPe9IDNcNEM7-0KWgNh3jQCLcBGAsYHQ/s1600/week10.png"&gt;
      &lt;img style="display:none" src="https://4.bp.blogspot.com/-JnCCv_QTFRo/Xz_O-u8dCSI/AAAAAAAAPi4/cUS1N23JoLMBPe9IDNcNEM7-0KWgNh3jQCLcBGAsYHQ/s1600/week10.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by &lt;a href="https://twitter.com/dagalpin?lang=en"&gt;Dan Galpin&lt;/a&gt;, Developer Advocate &lt;/em&gt;&lt;p&gt;

      &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-rqKBgKaSCOI/Xz_gvb6RwXI/AAAAAAAAPjE/clus4PU4ou0bqMbFV_61lGQ7q7Sk6yIDQCLcBGAsYHQ/s1600/week10.png" imageanchor="1" &gt;&lt;img id="imgFull" style="width:100%;" border="0" src="https://1.bp.blogspot.com/-rqKBgKaSCOI/Xz_gvb6RwXI/AAAAAAAAPjE/clus4PU4ou0bqMbFV_61lGQ7q7Sk6yIDQCLcBGAsYHQ/s1600/week10.png" data-original-width="1600" data-original-height="900" alt= Android graphic /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p&gt;
      This blog post is part of a weekly series for &lt;a href="http://d.android.com/11weeksofandroid"&gt;#11WeeksOfAndroid&lt;/a&gt;. For each of the #11WeeksOfAndroid, we’re diving into key areas so you don’t miss anything. This week, we spotlighted games, media, and 5G; here’s a look at what you should know.
      &lt;/p&gt;
      &lt;h3&gt;What's the buzz in Android 11?&lt;/h3&gt;


      &lt;ul&gt;

      &lt;li&gt;You can now control media applications from a dedicated space within the notification area while enabling features such as playback resumption and seamless transfer.

      &lt;li&gt;New and updated 5g APIs help you unlock transformative new user experiences.

      &lt;li&gt;Adds new support for key game tools and technologies. On top of that foundation, we're building tools to both improve your game developer experience and help you better characterize the performance of your game, services to help you expand the reach of your game to more devices and new audiences, and new and improved features to support your games' go-to-market with Google Play.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/br&gt;
      &lt;h3&gt;Android 11 media&lt;/h3&gt;


      &lt;p&gt;
      We covered how to take advantage of Android 11's new media controls by making sure your app is using &lt;code&gt;&lt;a href="https://developer.android.com/reference/androidx/media/app/NotificationCompat.MediaStyle"&gt;MediaStyle&lt;/a&gt;&lt;/code&gt; with a valid &lt;code&gt;&lt;a href="https://developer.android.com/guide/topics/media-apps/working-with-a-media-session"&gt;MediaSession&lt;/a&gt;&lt;/code&gt; token.  We showed how to support Media resumption by making your app discoverable with a &lt;code&gt;&lt;a href="https://developer.android.com/reference/androidx/media/MediaBrowserServiceCompat"&gt;MediaBrowserServiceCompat&lt;/a&gt;&lt;/code&gt;, using the &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/media/MediaBrowserServiceCompat.BrowserRoot#EXTRA_RECENT:kotlin.String"&gt;EXTRA_RECENT&lt;/a&gt;&lt;/code&gt; hint to help with resuming content, and handling the &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/android/support/v4/media/session/MediaSessionCompat.Callback#onPlay()"&gt;onPlay&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/service/media/MediaBrowserService#onGetRoot(java.lang.String,%20int,%20android.os.Bundle)"&gt;onGetRoot&lt;/a&gt;&lt;/code&gt; callbacks.  Finally we showed you how to leverage the &lt;a href="https://developer.android.com/jetpack/androidx/releases/mediarouter"&gt;MediaRouter jetpack library&lt;/a&gt; to support seamless media transfer between devices.  Check out the updated version of the &lt;a href="https://github.com/android/uamp"&gt;UAMP&lt;/a&gt; sample which contains a reference implementation for media controls and playback resumption.


      &lt;center&gt;
      &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/fhii2K9o6ts" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;

      &lt;h3&gt;Android 11 and 5G&lt;/h3&gt;


      &lt;p&gt;
      We covered some of the primary ways &lt;a href="https://developer.android.com/training/connectivity/enhance-with-5g"&gt;apps can benefit from 5g&lt;/a&gt;, including:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;Turning indoor use cases into outdoor use cases

      &lt;li&gt;Turning photo-centric UX into video-centric or AR-centric UX

      &lt;li&gt;Prefetch helpfully to make your app even more responsive

      &lt;li&gt;Turn niche use cases into mainstream use cases, such as allowing streaming content everywhere
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;Android 11 adds new APIs and updates existing APIs to ensure you have all the tools you need to leverage the capabilities of 5G, such as an enhanced &lt;a href="https://developer.android.com/preview/features/5g#estimator"&gt;bandwidth estimation API&lt;/a&gt;, &lt;a href="https://developer.android.com/preview/features/5g#detection"&gt;5G detection capabilities&lt;/a&gt;, and a new &lt;a href="https://developer.android.com/preview/features/5g#meteredness"&gt; meteredness flag &lt;/a&gt; from cellular carriers. The &lt;a href="https://d.android.com/preview/behavior-changes-all#emulator-5g"&gt;Android emulator&lt;/a&gt; now enables you to develop and test these APIs without needing a 5G device or network connection. All of this and more is available from our &lt;a href="http://d.android.com/5g"&gt;dedicated 5G page&lt;/a&gt;.&lt;/p&gt;


      &lt;h3&gt;Catch up on what's happening with game development&lt;/h3&gt;


      &lt;p&gt;
      We presented a special "11 Weeks" episode of The Android Game Developer Show providing an update on the tools, services, and technologies we're bringing to help you build, optimize, and distribute great games.
      &lt;/p&gt;


      &lt;center&gt; &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DKVEL0_Gpzs" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt; &lt;/center&gt;

      &lt;p&gt;
      Check out &lt;a href="http://d.android.com/games"&gt;d.android.com/games&lt;/a&gt; to learn about everything we've covered this week and more, and stay up to date by signing up for the &lt;a href="https://developer.android.com/updates"&gt;games quarterly newsletter&lt;/a&gt;.
      &lt;/p&gt;
      &lt;h3&gt;Android game development tooling&lt;/h3&gt;


      &lt;p&gt;
      In Android Studio 4.1, we enhanced the System Trace view of the CPU Profiler and added the Native Memory Profiler, and both can now be launched standalone from Android Studio. The &lt;a href="https://medium.com/androiddevelopers/whats-new-in-android-studio-system-trace-5841465c5935"&gt;System Trace&lt;/a&gt; and &lt;a href="https://medium.com/androiddevelopers/native-memory-profiling-with-android-studio-4-1-33a9e6b44be"&gt;Native Memory&lt;/a&gt; blog posts have more details on how to use them with your game or app.
      &lt;/p&gt;
      &lt;p&gt;
      You can sign up for developer previews of the &lt;a href="https://services.google.com/fb/forms/androidgamedevelopmentextension-developerpreview/"&gt;Android Game Development Extension&lt;/a&gt;, and the &lt;a href="https://gpuinspector.dev/"&gt;Android GPU Inspector&lt;/a&gt;. The Android Game Development Extension helps with building multi-platform C/C++ games, while the GPU Inspector is used to profile and debug graphics.  Stay tuned for the open beta of the Android GPU Inspector.
      &lt;/p&gt;
      &lt;h3&gt;Reaching more devices and users with your game&lt;/h3&gt;


      &lt;p&gt;
      We took a deep dive into the &lt;a href="http://d.android.com/performance-tuner"&gt;Android Performance Tuner,&lt;/a&gt; explaining annotations, quality levels, and fidelity parameters along with some best practices on how to use them. Once you've implemented that, we also covered how to use the new insights and analysis you'll get within Android Vitals.
      &lt;/p&gt;


      &lt;center&gt; &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/AO0O8HaqG-w" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt; &lt;/center&gt;

      &lt;p&gt;
      We showed how &lt;a href="http://g.co/play/assetdelivery"&gt;Google Play Asset Delivery&lt;/a&gt; brings the benefits of app bundles to games with large asset sizes, flexible delivery modes, auto-updates, compression, and delta patching. Texture compression format targeting is coming very soon letting you tap into modern texture compression such as ASTC (now supported on over 50% of devices) allowing you to considerably cut your game size and in-memory footprint.
      &lt;/p&gt;



      &lt;center&gt; &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/AJmMD-UIcd0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt; &lt;/center&gt;

      &lt;p&gt;
      We published &lt;a href="https://medium.com/androiddevelopers/codelabs-for-new-android-game-technologies-486a847eb92e"&gt;new codelabs&lt;/a&gt; to help you integrate &lt;a href="https://developer.android.com/games/sdk/performance-tuner"&gt;Android Performance Tuner&lt;/a&gt; and &lt;a href="http://g.co/play/assetdelivery"&gt;Google Play Asset Delivery&lt;/a&gt; into your Unity or native C/C++ game.
      &lt;/p&gt;
      &lt;p&gt;
      We explained how we can help protect your game, players, and business by &lt;a href="https://medium.com/googleplaydev/protect-your-game-and-players-on-google-play-c3fa376fb375"&gt;fighting monetization and distribution abuse&lt;/a&gt;.
      &lt;/p&gt;
      &lt;h3&gt;Boost your games' go-to-market&lt;/h3&gt;


      &lt;p&gt;
      We launched the open beta of &lt;a href="https://developers.google.com/games/services/common/concepts/friends"&gt;Play Games Services - Friends&lt;/a&gt; to help you bootstrap and enhance your in-game friend networks while having your games surfaced in new clusters in the Play Games app.
      &lt;/p&gt;
      &lt;p&gt;
      We demonstrated the new release management experience in the Google Play Console beta and showed how it can help your testing and publishing workflow.
      &lt;/p&gt;


      &lt;center&gt; &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/vyReHI1eSSU" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt; &lt;/center&gt;

      &lt;p&gt;
      Day one auto-installs is a new Google Play feature that allows users to request &lt;a href="https://support.google.com/googleplay/android-developer/answer/9859047?_ga=2.231733915.521848568.1594959946-295916848.1580755207"&gt;the automatic installation of your game during pre-registration&lt;/a&gt;. Early experiments show a +20% increase in day 1 installs when using this feature. The new pre-registration menu in the beta Google Play Console makes it easier than ever to access this feature.
      &lt;/p&gt;
      &lt;p&gt;
      We showed how to &lt;a href="https://support.google.com/googleplay/android-developer/answer/1078870?hl=en"&gt;optimize your store listing page&lt;/a&gt; to take advantage of the greatly improved games visual experience within Google Play, showcasing rich game graphics and engaging videos.
      &lt;/p&gt;
      &lt;p&gt;
      The new &lt;a href="https://developer.android.com/guide/playcore/in-app-review"&gt;in-app review API&lt;/a&gt; lets you choose when to prompt users to write reviews from within your game, without heading back to the app details page. This API supports both public and private reviews for when your app is in beta.
      &lt;/p&gt;
      &lt;h3&gt;Learning path&lt;/h3&gt;


      &lt;p&gt;
      If you’re looking for an easy way to pick up the highlights of this week, check out the &lt;a href="https://developer.android.com/courses/pathways/android-week10-games-and-media"&gt;Games, media, and 5G pathway&lt;/a&gt;. A pathway is an ordered tutorial that allows users to complete a pre-defined module that culminates in a quiz. It includes videos and blog posts. A virtual badge is awarded to each user who passes the quiz. Test your knowledge of key takeaways about Android game development, media, and  5G to earn a limited edition badge.
      &lt;/p&gt;
      &lt;h3&gt;Key takeaways&lt;/h3&gt;


      &lt;p&gt;
      Thank you for tuning in and learning about the latest in Android game, media, and 5G development.
      &lt;/p&gt;
      &lt;p&gt;

      &lt;p&gt;
      &lt;strong&gt;Seamless media transfer and media resumption&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://developer.android.com/jetpack/androidx/releases/mediarouter"&gt;MediaRouter API&lt;/a&gt; (&lt;a href="https://github.com/android/uamp"&gt;UAMP Sample&lt;/a&gt;)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;5G&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://developer.android.com/preview/features/5g#estimator"&gt;Bandwidth estimation API&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://developer.android.com/preview/features/5g#detection"&gt;5G Detection&lt;/a&gt; (&lt;a href="https://d.android.com/preview/behavior-changes-all#emulator-5g"&gt;Android Emulator&lt;/a&gt;)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;span style="text-decoration:underline;"&gt; &lt;a href="https://developer.android.com/preview/features/5g#meteredness"&gt;Meteredness flag&lt;/a&gt;&lt;/span&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Features found in Android Studio 4.1 (Beta Channel)&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://medium.com/androiddevelopers/whats-new-in-android-studio-system-trace-5841465c5935"&gt;System Trace in Android Studio CPU Profiler&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://medium.com/androiddevelopers/native-memory-profiling-with-android-studio-4-1-33a9e6b44be"&gt;Android Studio Native Memory Profiler&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Pre-release standalone tools&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://services.google.com/fb/forms/androidgamedevelopmentextension-developerpreview/"&gt;Android Game Development Extension&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://gpuinspector.dev/"&gt;Android GPU Inspector&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Features in the&lt;a href="https://developer.android.com/games/sdk"&gt; Android Game SDK&lt;/a&gt;&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://developer.android.com/games/sdk/frame-pacing"&gt;Android Frame Pacing Library&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://developer.android.com/games/sdk/performance-tuner"&gt;Android Performance Tuner&lt;/a&gt; (&lt;a href="https://codelabs.developers.google.com/codelabs/android-performance-tuner-native"&gt;C/C++ Codelab&lt;/a&gt;) (&lt;a href="https://codelabs.developers.google.com/codelabs/android-performance-tuner-unity"&gt;Unity Codelab&lt;/a&gt;)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Google Play features&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://developer.android.com/guide/app-bundle/asset-delivery"&gt;Play Asset Delivery&lt;/a&gt; (&lt;a href="https://codelabs.developers.google.com/codelabs/native-gamepad"&gt;C/C++ Codelab&lt;/a&gt;) (&lt;a href="https://codelabs.developers.google.com/codelabs/unity-gamepad"&gt;Unity Codelab&lt;/a&gt;)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://developer.android.com/guide/playcore/in-app-review"&gt;In App Review API&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://developer.android.com/google/play/licensing"&gt;App Licensing&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://developer.android.com/training/safetynet/attestation"&gt;SafetyNet Attestation&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://support.google.com/googleplay/android-developer/answer/9859047?_ga=2.231733915.521848568.1594959946-295916848.1580755207"&gt;Pre-registration&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;&lt;a href="https://developers.google.com/games/services"&gt;Google Play Games Services&lt;/a&gt;&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://developers.google.com/games/services/common/concepts/friends"&gt;Play Games Services Friends Beta&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      You can find the entire playlist of #11WeeksOfAndroid video content &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;here&lt;/a&gt;, and learn more about each week &lt;a href="http://d.android.com/android11"&gt;here&lt;/a&gt;. We’ll continue to spotlight new areas each week, so &lt;a href="https://android-developers.googleblog.com/"&gt;keep an eye out&lt;/a&gt; and follow us on &lt;a href="https://twitter.com/androiddev"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;YouTube&lt;/a&gt;. Thanks so much for letting us be a part of this experience with you!
      &lt;/p&gt;

      &lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=nUKKwGPh0vU:fVHA13IBaic:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=nUKKwGPh0vU:fVHA13IBaic:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=nUKKwGPh0vU:fVHA13IBaic:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/nUKKwGPh0vU" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7017086779229199384" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7017086779229199384" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/nUKKwGPh0vU/11-weeks-of-android-games-media-and-5g.html" title="11 Weeks of Android: Games, media, and 5G" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://4.bp.blogspot.com/-JnCCv_QTFRo/Xz_O-u8dCSI/AAAAAAAAPi4/cUS1N23JoLMBPe9IDNcNEM7-0KWgNh3jQCLcBGAsYHQ/s72-c/week10.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/11-weeks-of-android-games-media-and-5g.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-3861796729685910913</id>
    <published>2020-08-21T06:21:00.000-07:00</published>
    <updated>2020-08-21T06:21:45.298-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#Featured  #android11  #5G" />
    <title type="text">Getting ready for 5G on Android</title>
    <content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-fVY8uuDSFNk/Xz_JUdAPuzI/AAAAAAAAPis/uXZ_DkiChfUTuoKBdeKw2MeVVj-8dhkPgCLcBGAsYHQ/s1600/Android-Twitter-Getting-Ready-5G-R1-01%2B%25281%2529.png"&gt;
      &lt;img style="display:none" src="https://1.bp.blogspot.com/-fVY8uuDSFNk/Xz_JUdAPuzI/AAAAAAAAPis/uXZ_DkiChfUTuoKBdeKw2MeVVj-8dhkPgCLcBGAsYHQ/s1600/Android-Twitter-Getting-Ready-5G-R1-01%2B%25281%2529.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Stella Loh, Product Manager, Android 5G &lt;/em&gt;&lt;p&gt;

      &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-fVY8uuDSFNk/Xz_JUdAPuzI/AAAAAAAAPis/uXZ_DkiChfUTuoKBdeKw2MeVVj-8dhkPgCLcBGAsYHQ/s1600/Android-Twitter-Getting-Ready-5G-R1-01%2B%25281%2529.png" imageanchor="1" &gt;&lt;img style="width:500px" border="0" src="https://1.bp.blogspot.com/-fVY8uuDSFNk/Xz_JUdAPuzI/AAAAAAAAPis/uXZ_DkiChfUTuoKBdeKw2MeVVj-8dhkPgCLcBGAsYHQ/s1600/Android-Twitter-Getting-Ready-5G-R1-01%2B%25281%2529.png" data-original-width="1024" data-original-height="595" alt= Android 5G graphic /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p&gt;
      &lt;strong&gt;Getting ready for 5G on Android&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      Connectivity is the lifeblood that makes all of the experiences on our phones come alive, helping us connect, communicate, and express ourselves to the people that we care about. As app developers, this mission is as important now as it’s ever been. You’ve probably heard the buzz around 5G and wondered: what does this mean for my app? As we dive into Media &amp; Games as part of this weeks' #11WeeksofAndroid, two areas where 5G offers a lot of potential, we wanted to spotlight ways for you to think about taking advantage of &lt;a href="http://d.android.com/5g"&gt;5G for your app or game&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Transforming your app or game with 5G: unlocking new experiences&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      5G isn’t just about faster connectivity: it’s about unlocking transformative new experiences, and we want to see how you continue to push the bar.
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;strong&gt;Turn indoor use cases into outdoor use cases:&lt;/strong&gt; Suddenly, everything you could only do indoors comes alive outside, like high-quality video chat and playing multiplayer games wherever you happen to be.

      &lt;li&gt;&lt;strong&gt;Turn photo-centric UX into video-centric or AR-centric UX:&lt;/strong&gt; Upgrade your users’ experience by replacing photos with videos and by incorporating augmented reality into your UX.

      &lt;li&gt;&lt;strong&gt;Prefetch helpfully, delight rather than buffer:&lt;/strong&gt; Use the increased bandwidth to prefetch content, further enhancing the responsiveness of your app or game.

      &lt;li&gt;&lt;strong&gt;Turn niche use cases into mainstream use cases:&lt;/strong&gt; Streaming content on older networks was the exception. Make streaming content the new mainstream with 5G.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      We’ve been hard at work building in support for 5G on Android, and have been working with 5G carriers starting with Verizon and AT&amp;T in the U.S., as well as others in Europe and Asia to provide necessary Android features for app developers looking to build 5G experiences.
      &lt;/p&gt;
      &lt;p&gt;
      In addition to working with the carriers, we have been updating and adding new APIs to ensure you have all the tools you need to leverage the capabilities of 5G. First, we enhanced the functionality of our &lt;a href="https://developer.android.com/preview/features/5g#estimator"&gt;bandwidth estimation API&lt;/a&gt;. Then we added &lt;a href="https://developer.android.com/preview/features/5g#detection"&gt;5G detection capabilities&lt;/a&gt;, so you know when to take it up a notch. Lastly, we added a new &lt;a href="https://developer.android.com/preview/features/5g#meteredness"&gt;meteredness flag&lt;/a&gt; from cellular carriers so you know when your user isn’t being charged for bandwidth, and can really bring it!
      &lt;/p&gt;
      &lt;p&gt;
      We’ve also added features to the &lt;a href="https://d.android.com/preview/behavior-changes-all#emulator-5g"&gt;Android SDK emulator&lt;/a&gt; to enable you to develop and test these APIs without needing a 5G device or network connection.
      &lt;/p&gt;
      &lt;p&gt;
      All of this means that 5G starts here and now. Check out our &lt;a href="http://d.android.com/5g"&gt;new page&lt;/a&gt; dedicated to 5G so you can start imagining how 5G can transform your app.
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=WVHgaUUGZLs:urr6XNbZBic:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=WVHgaUUGZLs:urr6XNbZBic:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=WVHgaUUGZLs:urr6XNbZBic:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/WVHgaUUGZLs" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3861796729685910913" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3861796729685910913" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/WVHgaUUGZLs/getting-ready-for-5g-on-android.html" title="Getting ready for 5G on Android" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-fVY8uuDSFNk/Xz_JUdAPuzI/AAAAAAAAPis/uXZ_DkiChfUTuoKBdeKw2MeVVj-8dhkPgCLcBGAsYHQ/s72-c/Android-Twitter-Getting-Ready-5G-R1-01%2B%25281%2529.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/getting-ready-for-5g-on-android.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-4532954174661667450</id>
    <published>2020-08-20T15:02:00.003-07:00</published>
    <updated>2020-08-20T15:02:52.102-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android 11" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Media" />
    <category scheme="http://www.blogger.com/atom/ns#" term="media controls" />
    <category scheme="http://www.blogger.com/atom/ns#" term="playback resumption" />
    <category scheme="http://www.blogger.com/atom/ns#" term="seamless transfer" />
    <title type="text">Playing nicely with media controls</title>
    <content type="html">&lt;meta name="twitter:image" content="https://4.bp.blogspot.com/-pU50R3QtC_M/Xz7EJrrnNTI/AAAAAAAAPgs/zxF-51jxb589jjjeBFEI0KO_dVfmYrvYwCLcBGAsYHQ/s1600/Android_media_update%2B%25281%2529.png"&gt;
      &lt;img style="display:none" src="https://4.bp.blogspot.com/-pU50R3QtC_M/Xz7EJrrnNTI/AAAAAAAAPgs/zxF-51jxb589jjjeBFEI0KO_dVfmYrvYwCLcBGAsYHQ/s1600/Android_media_update%2B%25281%2529.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by &lt;a href="https://twitter.com/donturner"&gt;Don Turner&lt;/a&gt; - Developer Advocate - Android Media&lt;/em&gt;&lt;p&gt;

      &lt;center&gt; &lt;a href="https://4.bp.blogspot.com/-pU50R3QtC_M/Xz7EJrrnNTI/AAAAAAAAPgs/zxF-51jxb589jjjeBFEI0KO_dVfmYrvYwCLcBGAsYHQ/s1600/Android_media_update%2B%25281%2529.png" imageanchor="1" &gt;&lt;img style= "width: 650px" border="0" src="https://4.bp.blogspot.com/-pU50R3QtC_M/Xz7EJrrnNTI/AAAAAAAAPgs/zxF-51jxb589jjjeBFEI0KO_dVfmYrvYwCLcBGAsYHQ/s1600/Android_media_update%2B%25281%2529.png" data-original-width="1600" data-original-height="480" alt= Android graphic/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p&gt;
      In Android 11 we've made it easier than ever for users to control media playback. This is achieved with three related features: media controls, playback resumption and seamless transfer.
      &lt;/p&gt;
      &lt;p&gt;
      This article will explain what these features are, how they work together and how you can take advantage of them in your apps.&lt;/p&gt;

      &lt;h1&gt;Media Controls&lt;/h1&gt;


      &lt;p&gt;
      Android 11's media controls are found below the Quick Settings panel and represent a dedicated persistent space for controlling media playback.
      &lt;/p&gt;

      &lt;center&gt; &lt;a href="https://4.bp.blogspot.com/-irSyMsINZhM/Xz7Exzb1zGI/AAAAAAAAPg0/XqqR7G1_pOk8S6tH90s3z-sIP-wfx836ACLcBGAsYHQ/s1600/media-controls.gif" imageanchor="1" &gt;&lt;img style="width:300px" border="0" src="https://4.bp.blogspot.com/-irSyMsINZhM/Xz7Exzb1zGI/AAAAAAAAPg0/XqqR7G1_pOk8S6tH90s3z-sIP-wfx836ACLcBGAsYHQ/s1600/media-controls.gif" data-original-width="320" data-original-height="569" alt= Media gif/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt; Media controls in Android 11&lt;/p&gt;

      &lt;p&gt;
      Part of the motivation for media controls is that users often have multiple media apps (music player, podcasts, video player etc) and regularly switch between them. Media controls display up to five current and recent media sessions in a carousel allowing the user to swipe between them.
      &lt;/p&gt;
      &lt;p&gt;
      On Android 10 and earlier, media notifications for multiple apps can occupy most of the notification area. All those control buttons can also be confusing. Moving the controls into a dedicated space means that there's more room for other notifications, and provides a more consistent user experience for controlling media apps.
      &lt;/p&gt;
      &lt;p&gt;
      Here's the comparison:
      &lt;/p&gt;


      &lt;center&gt; &lt;div id="flexParent"&gt;
      &lt;a href="https://1.bp.blogspot.com/-J8gg5L3wo0Y/Xz7F1dwOSzI/AAAAAAAAPhA/f_xAncS9UacNxLx76Um4ELwoCuNgNFu1ACLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25283%2529.png" imageanchor="1" &gt;&lt;img id="flexImg" border="0" src="https://1.bp.blogspot.com/-J8gg5L3wo0Y/Xz7F1dwOSzI/AAAAAAAAPhA/f_xAncS9UacNxLx76Um4ELwoCuNgNFu1ACLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25283%2529.png" alt= image of screen /&gt;&lt;/a&gt;


      &lt;a href="https://1.bp.blogspot.com/-ogv84kIxnxo/Xz7GFzr0DjI/AAAAAAAAPhI/b9Z3pO9iBYoKxL2ZJ2guieUl9LL7fh3sQCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25284%2529.png" imageanchor="1" &gt;&lt;img id="flexImg" border="0" src="https://1.bp.blogspot.com/-ogv84kIxnxo/Xz7GFzr0DjI/AAAAAAAAPhI/b9Z3pO9iBYoKxL2ZJ2guieUl9LL7fh3sQCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25284%2529.png" alt= "image of screen" /&gt;&lt;/a&gt; &lt;/div&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt;Android 10 media notifications (left) Android 11 media controls (right)&lt;/p&gt;


      &lt;h2&gt;Displaying media controls for your app&lt;/h2&gt;


      &lt;p&gt;
      Now, the really good news. As long as you're using &lt;code&gt;&lt;a href="https://developer.android.com/reference/androidx/media/app/NotificationCompat.MediaStyle"&gt;MediaStyle&lt;/a&gt;&lt;/code&gt; with a valid &lt;code&gt;&lt;a href="https://developer.android.com/guide/topics/media-apps/working-with-a-media-session"&gt;MediaSession&lt;/a&gt;&lt;/code&gt; token (both available since Lollipop API 21), media controls will be displayed for your app automatically - no extra work for you!

      &lt;p&gt;
      In case you're not using a &lt;code&gt;MediaStyle&lt;/code&gt; and &lt;code&gt;MediaSession&lt;/code&gt; here's a quick recap in code:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;// Create a media session. NotificationCompat.MediaStyle
      // PlayerService is your own Service or Activity responsible for media playback.
      val mediaSession = MediaSessionCompat(this, "PlayerService")

      // Create a MediaStyle object and supply your media session token to it.
      val mediaStyle = Notification.MediaStyle().setMediaSession(mediaSession.sessionToken)

      // Create a Notification which is styled by your MediaStyle object.
      // This connects your media session to the media controls.
      // Don't forget to include a small icon.
      val notification = Notification.Builder(this@PlayerService, CHANNEL_ID)
      .setStyle(mediaStyle)
      .setSmallIcon(R.drawable.ic_app_logo)
      .build()

      // Specify any actions which your users can perform, such as pausing and skipping to the next track.
      val pauseAction: Notification.Action = Notification.Action.Builder(
      pauseIcon, "Pause", pauseIntent
      ).build()
      notification.addAction(pauseAction)&lt;/pre&gt;


      &lt;p&gt;
      The small icon and app name are shown in the upper left of the media controls. The actions are shown in the bottom center.
      &lt;/p&gt;

      &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-olf2pC9fnFI/Xz7HEbJEyvI/AAAAAAAAPhU/vbQ9zRZz5gE5ZQi5G8FVyQxI9j-LAtZeQCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25285%2529.png" imageanchor="1" &gt;&lt;img style="width:500px" border="0" src="https://1.bp.blogspot.com/-olf2pC9fnFI/Xz7HEbJEyvI/AAAAAAAAPhU/vbQ9zRZz5gE5ZQi5G8FVyQxI9j-LAtZeQCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25285%2529.png" data-original-width="986" data-original-height="609" alt= Paging with paging 3/&gt;&lt;/a&gt;&lt;/center&gt;

      &lt;p id="imgCaption"&gt;Media controls UI and corresponding Notification fields &lt;/p&gt;

      &lt;p&gt;
      The remaining UI fields, such as track title and playback position, are obtained from the media session's &lt;a href="https://developer.android.com/guide/topics/media-apps/working-with-a-media-session#maintain-state"&gt;metadata and playback state&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      Here's how the metadata fields map to the UI.
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;mediaSession.setMetadata(
      MediaMetadataCompat.Builder()

      // Title.
      .putString(MediaMetadata.METADATA_KEY_TITLE, currentTrack.title)

      // Artist.
      // Could also be the channel name or TV series.
      .putString(MediaMetadata.METADATA_KEY_ARTIST, currentTrack.artist)

      // Album art.
      // Could also be a screenshot or hero image for video content
      // The URI scheme needs to be "content", "file", or "android.resource".
      .putString(
      MediaMetadata.METADATA_KEY_ALBUM_ART_URI, currentTrack.albumArtUri)
      )

      // Duration.
      // If duration isn't set, such as for live broadcasts, then the progress
      // indicator won't be shown on the seekbar.
      .putLong(MediaMetadata.METADATA_KEY_DURATION, currentTrack.duration) // 4

      .build()
      )&lt;/pre&gt;


      &lt;p&gt;
      This screenshot shows how these metadata fields are displayed in the media controls.
      &lt;/p&gt;

      &lt;center&gt;&lt;a href="https://4.bp.blogspot.com/-3BWPisppqeE/Xz7HtYuBmQI/AAAAAAAAPhc/gWFsLfXX184VSGSDg-ZA0RIh_qmmWy4dwCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25286%2529.png" imageanchor="1" &gt;&lt;img style="width: 500px" border="0" src="https://4.bp.blogspot.com/-3BWPisppqeE/Xz7HtYuBmQI/AAAAAAAAPhc/gWFsLfXX184VSGSDg-ZA0RIh_qmmWy4dwCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25286%2529.png" data-original-width="986" data-original-height="609" alt= metadata fields displayed in media controls/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt;Media controls UI and corresponding metadata fields&lt;/p&gt;

      &lt;p&gt;
      The seek bar is updated using the media session's playback state in a similar way:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;mediaSession.setPlaybackState(
      PlaybackStateCompat.Builder()
      .setState(
      PlaybackStateCompat.STATE_PLAYING,

      // Playback position.
      // Used to update the elapsed time and the progress bar.
      mediaPlayer.currentPosition.toLong(),

      // Playback speed.
      // Determines the rate at which the elapsed time changes.
      playbackSpeed
      )

      // isSeekable.
      // Adding the SEEK_TO action indicates that seeking is supported
      // and makes the seekbar position marker draggable. If this is not
      // supplied seek will be disabled but progress will still be shown.
      .setActions(PlaybackStateCompat.ACTION_SEEK_TO)
      .build()
      )&lt;/pre&gt;


      &lt;p&gt;
      This screenshot shows how these playback state fields are displayed in the media controls.
      &lt;/p&gt;

      &lt;center&gt;&lt;a href="https://2.bp.blogspot.com/-eVuNpzOJa74/Xz7IQE-HPVI/AAAAAAAAPhk/Fq12gNGJB_kam5QJsoAqfczP8Uw98UDagCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25287%2529.png" imageanchor="1" &gt;&lt;img style="width:500px" border="0" src="https://2.bp.blogspot.com/-eVuNpzOJa74/Xz7IQE-HPVI/AAAAAAAAPhk/Fq12gNGJB_kam5QJsoAqfczP8Uw98UDagCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25287%2529.png" data-original-width="986" data-original-height="609" /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt;Media controls UI and corresponding playback state fields&lt;/p&gt;&lt;p&gt;

      &lt;p&gt;
      Your media controls should now look and function perfectly!
      &lt;/p&gt;
      &lt;h1&gt;Media resumption&lt;/h1&gt;


      &lt;p&gt;
      Ever wanted to continue listening to a podcast, TV episode or DJ set but couldn't remember where you left off, or even the app that was playing it? Media resumption solves this problem.
      &lt;/p&gt;
      &lt;p&gt;
      There are two stages to media resumption: &lt;strong&gt;discovering recent media apps&lt;/strong&gt; and &lt;strong&gt;resuming playback&lt;/strong&gt;.
      &lt;/p&gt;
      &lt;h2&gt;Discovering recent media apps&lt;/h2&gt;


      &lt;p&gt;
      After booting, Android will look for recent media apps and ask them what their most recently played content was. It will then create media controls for that content.
      &lt;/p&gt;

      &lt;p&gt;
      To be discoverable your app must provide a &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/service/media/MediaBrowserService"&gt;MediaBrowserService&lt;/a&gt;&lt;/code&gt;, typically using the &lt;code&gt;&lt;a href="https://developer.android.com/reference/androidx/media/MediaBrowserServiceCompat"&gt;MediaBrowserServiceCompat&lt;/a&gt;&lt;/code&gt; library from Android Jetpack.


      &lt;p&gt;
      On boot, Android will call your MediaBrowserServiceCompat's &lt;code&gt;&lt;a href="https://developer.android.com/reference/androidx/media/MediaBrowserServiceCompat#onGetRoot(java.lang.String,%20int,%20android.os.Bundle)"&gt;onGetRoot&lt;/a&gt;&lt;/code&gt; method, so it's imperative that you return quickly.  Usually you would return the root of your media tree from this method but the system also specifies the &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/media/MediaBrowserServiceCompat.BrowserRoot#EXTRA_RECENT:kotlin.String"&gt;EXTRA_RECENT&lt;/a&gt;&lt;/code&gt; hint.

      &lt;p&gt;
      You should treat &lt;code&gt;EXTRA_RECENT&lt;/code&gt; as a special case and instead return the root of a media tree that contains the most recently played media item as the first element.
      &lt;/p&gt;
      &lt;p&gt;
      The system will call your &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/media/MediaBrowserServiceCompat#onLoadChildren(kotlin.String,%20androidx.media.MediaBrowserServiceCompat.Result)"&gt;onLoadChildren&lt;/a&gt;&lt;/code&gt; method to obtain this media tree, which is a list of &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/media/browse/MediaBrowser.MediaItem"&gt;MediaItem&lt;/a&gt;&lt;/code&gt; objects.

      &lt;p&gt;
      Here's a diagram showing how the system and a media app interact to retrieve the most recently played item.
      &lt;/p&gt;


      &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-e6LogMsehxM/Xz7I5OFtOII/AAAAAAAAPhs/Wl3DCLl1rTctUK8HrcUsC5SYXAV2NMPUACLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25288%2529.png" imageanchor="1" &gt;&lt;img style="width:600px" border="0" src="https://1.bp.blogspot.com/-e6LogMsehxM/Xz7I5OFtOII/AAAAAAAAPhs/Wl3DCLl1rTctUK8HrcUsC5SYXAV2NMPUACLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25288%2529.png" data-original-width="736" data-original-height="434" image of a MediaBrowser diagram/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt;How the system retrieves the most recently played item from the MediaBrowserService&lt;/p&gt;

      &lt;p&gt;
      For the first playable media item in this list the system will create &lt;strong&gt;static media controls&lt;/strong&gt; with just a play button.
      &lt;/p&gt;

      &lt;center&gt; &lt;a href="https://4.bp.blogspot.com/-gJ_uQoslAOk/Xz7JU_8AKiI/AAAAAAAAPh0/MI-6txEwG2ETGX1-eIOlOUyYMPPCdK-cgCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25289%2529.png" imageanchor="1" &gt;&lt;img style="width:500px" border="0" src="https://4.bp.blogspot.com/-gJ_uQoslAOk/Xz7JU_8AKiI/AAAAAAAAPh0/MI-6txEwG2ETGX1-eIOlOUyYMPPCdK-cgCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%25289%2529.png" data-original-width="974" data-original-height="596" alt= static media controls with just a play button /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt;Static media controls&lt;/p&gt;

      &lt;p&gt;
      At this point no media session has been created. This is to save resources - the system doesn't know whether the user &lt;em&gt;actually wants&lt;/em&gt; to resume playing that content yet.
      &lt;/p&gt;
      &lt;h2&gt;Resuming playback&lt;/h2&gt;


      &lt;p&gt;
      If the user taps the play button the system will make another call to &lt;code&gt;onGetRoot&lt;/code&gt; with the &lt;code&gt;EXTRA_RECENT&lt;/code&gt; hint. This is so you can prepare your previously played content as before, just in case anything has changed since the static controls were created.
      &lt;/p&gt;
      &lt;p&gt;
      Android will then &lt;a href="https://developer.android.com/reference/kotlin/android/support/v4/media/MediaBrowserCompat?connect()"&gt;connect&lt;/a&gt; to your media session and issue a play command to it. You should override the media session &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/android/support/v4/media/session/MediaSessionCompat.Callback#onPlay()"&gt;onPlay&lt;/a&gt;&lt;/code&gt; callback in order to start playback of your media content and create your &lt;code&gt;MediaStyle&lt;/code&gt; notification.

      &lt;p&gt;
      Once you post the notification the static media controls will be swapped with the media controls created from your notification.
      &lt;/p&gt;

      &lt;center&gt; &lt;a href="https://4.bp.blogspot.com/-6s_bixWzvlY/Xz7JyeZQj2I/AAAAAAAAPiA/09t8KIshEaE6Occ08J1PsMkyLRedw0noQCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%252810%2529.png" imageanchor="1" &gt;&lt;img style="width:650px" border="0" src="https://4.bp.blogspot.com/-6s_bixWzvlY/Xz7JyeZQj2I/AAAAAAAAPiA/09t8KIshEaE6Occ08J1PsMkyLRedw0noQCLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%252810%2529.png" data-original-width="1014" data-original-height="435" alt= Graphic of media controls created from your notifcation/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt;&lt;strong&gt;Figure 7:&lt;/strong&gt; Diagram showing interaction between System UI and media app when resuming playback&lt;/p&gt;


      &lt;h1&gt;Seamless media transfer&lt;/h1&gt;


      &lt;p&gt;
      As well as being able to resume media sessions, Android 11 also allows you to easily transfer playback from one device to another. This is known as "seamless media transfer", and is done through the &lt;strong&gt;output switcher&lt;/strong&gt;. The output switcher is shown in the upper right corner of the media notification that appears below.
      &lt;/p&gt;

      &lt;center&gt; &lt;a href="https://4.bp.blogspot.com/-w2q7uo5EfRQ/Xz7KbbqTHiI/AAAAAAAAPiI/GVv_BOuLmaAikw4uWZWQc8hOXT-n94e7ACLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%252811%2529.png" imageanchor="1" &gt;&lt;img style="width:500px" border="0" src="https://4.bp.blogspot.com/-w2q7uo5EfRQ/Xz7KbbqTHiI/AAAAAAAAPiI/GVv_BOuLmaAikw4uWZWQc8hOXT-n94e7ACLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%252811%2529.png" data-original-width="1027" data-original-height="635"alt= graphic of output switcher /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt;Output Switcher (upper right corner)&lt;/p&gt;

      &lt;p&gt;
      The output switcher shows the name and icon of the current media route; and when you tap on it you'll see a list of media routes which this app supports.
      &lt;/p&gt;

      &lt;center&gt;&lt;a href="https://3.bp.blogspot.com/-uj3sngG-VHc/Xz7K6bILQEI/AAAAAAAAPiQ/I_RNTuul65cbOjt7molTTkbOwSmPHaxLACLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%252812%2529.png" imageanchor="1" &gt;&lt;img style="width: 300px" border="0" src="https://3.bp.blogspot.com/-uj3sngG-VHc/Xz7K6bILQEI/AAAAAAAAPiQ/I_RNTuul65cbOjt7molTTkbOwSmPHaxLACLcBGAsYHQ/s1600/pasted%2Bimage%2B0%2B%252812%2529.png" data-original-width="900" data-original-height="1600" alt=image of media routes which this app supports /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt;Media routes available to the current app &lt;/p&gt;


      &lt;p&gt;
      By default, only local media routes are shown. If your app supports other media routes, such as remote playback you'll need to let the system know.
      &lt;/p&gt;
      &lt;p&gt;
      To do this add the &lt;a href="https://developer.android.com/jetpack/androidx/releases/mediarouter"&gt;MediaRouter jetpack library&lt;/a&gt; to your app.
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;dependencies {
      implementation 'androidx.mediarouter:mediarouter:1.2.0-alpha02'`
      }&lt;/pre&gt;


      &lt;p&gt;
      Seamless media transfer is supported from 1.2.0-alpha02.
      &lt;/p&gt;
      &lt;p&gt;
      Then, add the &lt;code&gt;&lt;a href="https://developer.android.com/reference/androidx/mediarouter/media/MediaTransferReceiver"&gt;MediaTransferReceiver&lt;/a&gt;&lt;/code&gt; class to your Android manifest.




      &lt;pre class="prettyprint"&gt;&amp;lt;receiver android:name="androidx.mediarouter.media.MediaTransferReceiver" /&gt;&lt;/pre&gt;


      &lt;p&gt;
      Now in your app, obtain the &lt;code&gt;&lt;a href="https://developer.android.com/guide/topics/media/mediarouter"&gt;MediaRouter&lt;/a&gt;&lt;/code&gt; singleton - this is an object that maintains the state of all currently available media routes.




      &lt;pre class="prettyprint"&gt;router = MediaRouter.getInstance(this)&lt;/pre&gt;


      &lt;p&gt;
      Create a &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/mediarouter/media/MediaRouteSelector"&gt;MediaRouteSelector&lt;/a&gt;&lt;/code&gt; and specify the route categories which your app supports. The categories you define here determine the routes which are displayed in the output switcher.

      &lt;p&gt;
      Here we'll just specify the "remote playback" category which is used for Cast devices.
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;routeSelector = MediaRouteSelector.Builder() // Add control categories that this media app is interested in.
      .addControlCategory(MediaControlIntent.CATEGORY_REMOTE_PLAYBACK)
      .build()&lt;/pre&gt;


      &lt;p&gt;
      If you want to support transfer from remote to local devices, you need to explicitly enable this using &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/mediarouter/media/MediaRouterParams.Builder#settransfertolocalenabled"&gt;setTransferToLocalEnabled&lt;/a&gt;&lt;/code&gt;:




      &lt;pre class="prettyprint"&gt;router.routerParams = MediaRouterParams.Builder().setTransferToLocalEnabled(true).build()&lt;/pre&gt;


      &lt;p&gt;
      We can now use our selector when adding a media router &lt;strong&gt;callback&lt;/strong&gt;.
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;router.addCallback(routeSelector, MediaRouterCallback(),
      MediaRouter.CALLBACK_FLAG_REQUEST_DISCOVERY);&lt;/pre&gt;


      &lt;p&gt;
      We also supply a callback object so we can be informed of changes to media routes.
      &lt;/p&gt;
      &lt;p&gt;
      Here's the callback class:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;    private class MediaRouterCallback : MediaRouter.Callback() {
      override fun onRouteSelected(
      router: MediaRouter,
      route: MediaRouter.RouteInfo,
      reason: Int
      ) {
      if (reason == MediaRouter.UNSELECT_REASON_ROUTE_CHANGED) {
      Timber.d("Unselected because route changed, continue playback")
      } else if (reason == MediaRouter.UNSELECT_REASON_STOPPED) {
      Timber.d("Unselected because route was stopped, stop playback")
      }
      }
      }&lt;/pre&gt;


      &lt;p&gt;
      The method we override is &lt;code&gt;onRouteSelected&lt;/code&gt; which will be called whenever a new media route has been selected.
      &lt;/p&gt;
      &lt;p&gt;
      When this happens we need to take into account the reason&lt;em&gt; why&lt;/em&gt; it was selected.
      &lt;/p&gt;
      &lt;p&gt;
      If the existing route was disconnected (for example, bluetooth headphones were switched off) we should pause or stop playback.
      &lt;/p&gt;
      &lt;p&gt;
      If the route was actively changed, for example when switching from a phone to a Cast device, then we should continue playing the media from its previous playback position - this is the "seamless" part of "seamless media transfer" :)
      &lt;/p&gt;
      &lt;h1&gt;Get started&lt;/h1&gt;


      &lt;p&gt;
      To get started with media controls and related features on Android 11 take a look at the &lt;a href="https://developer.android.com/preview/features/media-controls"&gt;official documentation&lt;/a&gt;. Also be sure to check out &lt;a href="https://github.com/android/uamp"&gt;UAMP&lt;/a&gt; which contains a reference implementation for many of the features mentioned in this article.
      &lt;/p&gt;
      &lt;p&gt;
      Good luck and remember to play nicely!
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=4rLSvIvZjWQ:Uhlt-lqTMSA:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=4rLSvIvZjWQ:Uhlt-lqTMSA:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=4rLSvIvZjWQ:Uhlt-lqTMSA:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/4rLSvIvZjWQ" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4532954174661667450" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4532954174661667450" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/4rLSvIvZjWQ/playing-nicely-with-media-controls.html" title="Playing nicely with media controls" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://4.bp.blogspot.com/-pU50R3QtC_M/Xz7EJrrnNTI/AAAAAAAAPgs/zxF-51jxb589jjjeBFEI0KO_dVfmYrvYwCLcBGAsYHQ/s72-c/Android_media_update%2B%25281%2529.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/playing-nicely-with-media-controls.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-1660941852202052387</id>
    <published>2020-08-17T10:44:00.000-07:00</published>
    <updated>2020-08-17T10:44:13.653-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Studio" />
    <category scheme="http://www.blogger.com/atom/ns#" term="JetBrains" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Kotlin" />
    <title type="text">New language features and more in Kotlin 1.4</title>
    <content type="html">&lt;meta name="twitter:image" content="https://3.bp.blogspot.com/-VK7SWENlAgw/XzqwX8KkKCI/AAAAAAAAPgA/9ELJaDt6PwovSP4K6nLYt6FHOi0mtF0fwCLcBGAsYHQ/s1600/0_MmLuzoPIQi4nVdrR.png"&gt;
      &lt;img style="display:none" src="https://3.bp.blogspot.com/-VK7SWENlAgw/XzqwX8KkKCI/AAAAAAAAPgA/9ELJaDt6PwovSP4K6nLYt6FHOi0mtF0fwCLcBGAsYHQ/s1600/0_MmLuzoPIQi4nVdrR.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Wojtek Kaliciński, Developer Advocate, Android&lt;/em&gt;&lt;p&gt;


      &lt;p&gt;
      When we adopted &lt;a href="https://developer.android.com/kotlin"&gt;Kotlin&lt;/a&gt; as a supported language on Android, and then shifted to a &lt;a href="http://d.android.com/kotlin/first"&gt;Kotlin-first&lt;/a&gt; approach, one of the main drivers was the excitement and adoption from the developer community. As Kotlin has grown, we’ve seen continued investment in the language from JetBrains (Kotlin's creators), the open source community, and increasingly our own teams at Google.
      &lt;/p&gt;
      &lt;p&gt;
      Today we are excited to share the news about the Kotlin 1.4 release, the next milestone in the evolution of Kotlin, which contains new language features, improved compilers and tools. Below you'll find a brief rundown of some exciting new features in this release. You can read more about Kotlin 1.4 in the &lt;a href="https://blog.jetbrains.com/?post_type=kotlin&amp;p=65244&amp;preview=true"&gt;official announcement&lt;/a&gt;.
      &lt;/p&gt;
      &lt;h2&gt;New language features&lt;/h2&gt;


      &lt;p&gt;
      New language features introduced in Kotlin 1.4 improve the ergonomics of writing Kotlin code. Here's just one example:
      &lt;/p&gt;
      &lt;h3&gt;SAM conversions for Kotlin interfaces&lt;/h3&gt;


      &lt;p&gt;
      Previously, only functional interfaces (i.e. having just a Single Abstract Method - SAM) defined in the Java programming language benefited from the shorthand syntax in Kotlin:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;executor.execute { println("This is shorthand for passing in a Runnable") }&lt;/pre&gt;


      &lt;p&gt;
      In Kotlin 1.4 you can now mark your Kotlin interfaces as functional and get them to work in a similar manner by adding the &lt;code&gt;fun&lt;/code&gt; keyword:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;fun interface Transformer&amp;lt;T, U&gt; {
      fun transform(x: T): U
      }
      val length = Transformer {
      x: String -&gt; x.length
      }&lt;/pre&gt;


      &lt;p&gt;
      You can read more about new language features such as: mixing named and positional arguments, trailing comma, callable reference improvements, and using &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; inside &lt;code&gt;when&lt;/code&gt; included in loops on the Kotlin 1.4 &lt;a href="https://kotlinlang.org/docs/reference/whatsnew14.html#mixing-named-and-positional-arguments"&gt;release notes page&lt;/a&gt;.
      &lt;/p&gt;
      &lt;h3&gt;Explicit API mode&lt;/h3&gt;


      &lt;p&gt;
      One additional feature is the new &lt;em&gt;&lt;a href="https://kotlinlang.org/docs/reference/whatsnew14.html#explicit-api-mode-for-library-authors"&gt;Explicit API mode&lt;/a&gt;&lt;/em&gt; for authors of libraries written in Kotlin.
      &lt;/p&gt;
      &lt;p&gt;
      It enforces certain language properties of Kotlin that are normally optional, such as specifying visibility modifiers, as well as explicit typing for any public declarations, in order to prevent mistakes when designing the public API of your library. Refer to the linked documentation for instructions how to enable Explicit API mode and start using these additional checks.
      &lt;/p&gt;
      &lt;h2&gt;Compiler improvements&lt;/h2&gt;


      &lt;p&gt;
      The language features mentioned above are some of the most developer-facing changes in Kotlin 1.4, however the bulk of work went into improving the overall quality and performance of the Kotlin compiler.
      &lt;/p&gt;
      &lt;p&gt;
      One of the benefits all developers can take advantage of right now is the &lt;strong&gt;new, more powerful type inference algorithm&lt;/strong&gt;, which is now enabled by default. It will help developers be more productive by supporting more smart-casts and cases where types can be inferred automatically.
      &lt;/p&gt;
      &lt;p&gt;
      Other than the type inference algorithm, Kotlin 1.4 also brings in optional, &lt;strong&gt; Alpha stability compiler backends for Kotlin/JVM and Kotlin/JS&lt;/strong&gt;, which generate code in what's called internal representation (IR) also used in the Kotlin/Native backend.
      &lt;/p&gt;
      &lt;p&gt;
      The Kotlin/JVM IR backend is a requirement for Jetpack Compose, and Google engineers are working together with JetBrains to make it the default JVM compiler backend in the future.
      &lt;/p&gt;
      &lt;p&gt;
      That's why, even if you're not currently developing with Jetpack Compose, we encourage you to try out the new Kotlin/JVM backend, currently in alpha, and to file any issues and feature requests to the &lt;a href="http://kotl.in/issue"&gt;issue tracker&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      To enable the new JVM IR backend, specify an additional compiler option in your Gradle build script:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;kotlinOptions.useIR = true&lt;/pre&gt;


      &lt;h2&gt;Try Kotlin 1.4 now!&lt;/h2&gt;


      &lt;p&gt;
      There are two steps to updating your projects and IDE to Kotlin 1.4.
      &lt;/p&gt;
      &lt;p&gt;
      First, make sure you are on the latest version of &lt;a href="https://developer.android.com/studio"&gt;Android Studio&lt;/a&gt; to maximize the performance benefits and compatibility with the newest Kotlin plugin. Android Studio will prompt you when a Kotlin 1.4.0 plugin that is compatible with your IDE version is available. Alternatively, you can go to Preferences | Plugins and manually trigger the update.
      &lt;/p&gt;
      &lt;p&gt;
      Once the plugin is enabled, you can upgrade your app project to use Kotlin 1.4 by updating the Kotlin Gradle plugin version in your &lt;em&gt;build.gradle&lt;/em&gt; scripts. Depending on how you manage your plugins, you either have to update the version in the top-level project's &lt;code&gt;buildscript&lt;/code&gt; block:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;buildscript {
      dependencies {
      classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.0"
      }
      }&lt;/pre&gt;


      &lt;p&gt;
      Or change the version number in the &lt;code&gt;plugins&lt;/code&gt; block in a module level &lt;em&gt;build.gradle&lt;/em&gt; file:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;plugins {
      id 'org.jetbrains.kotlin.android' version '1.4.0'
      }
      &lt;/pre&gt;


      &lt;p&gt;
      Make sure to read the language changes carefully and update your project's code to ensure compatibility with the latest release. Enjoy Kotlin 1.4!
      &lt;/p&gt;
      &lt;p&gt;
      &lt;em&gt;Java is a registered trademark of Oracle and/or its affiliates.&lt;/em&gt;
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=rDVHRsbjLUo:KeYjuyn6k6k:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=rDVHRsbjLUo:KeYjuyn6k6k:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=rDVHRsbjLUo:KeYjuyn6k6k:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/rDVHRsbjLUo" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1660941852202052387" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1660941852202052387" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/rDVHRsbjLUo/new-language-features-and-more-in.html" title="New language features and more in Kotlin 1.4" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-VK7SWENlAgw/XzqwX8KkKCI/AAAAAAAAPgA/9ELJaDt6PwovSP4K6nLYt6FHOi0mtF0fwCLcBGAsYHQ/s72-c/0_MmLuzoPIQi4nVdrR.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/new-language-features-and-more-in.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-1684396565290335988</id>
    <published>2020-08-17T09:13:00.000-07:00</published>
    <updated>2020-08-17T09:13:21.916-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="android developers" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Game" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play" />
    <title type="text">What’s new for Android game developers: August update</title>
    <content type="html">&lt;meta name="twitter:image" content="https://3.bp.blogspot.com/-2smBNJfBDM8/Xzap36j4ygI/AAAAAAAAPf0/7Mk0d5WTv1wuXYnRi6zD3Dqez3XqszZRgCLcBGAsYHQ/s1600/Android_Game_New_v4.jpg"&gt;
      &lt;img style="display:none" src="https://3.bp.blogspot.com/-2smBNJfBDM8/Xzap36j4ygI/AAAAAAAAPf0/7Mk0d5WTv1wuXYnRi6zD3Dqez3XqszZRgCLcBGAsYHQ/s1600/Android_Game_New_v4.jpg"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Greg Hartrell, Head of Product Management, Games on Android &amp; Google Play&lt;/em&gt;&lt;p&gt;

      &lt;center&gt;&lt;a href="https://3.bp.blogspot.com/-2smBNJfBDM8/Xzap36j4ygI/AAAAAAAAPf0/7Mk0d5WTv1wuXYnRi6zD3Dqez3XqszZRgCLcBGAsYHQ/s1600/Android_Game_New_v4.jpg" imageanchor="1" &gt;&lt;img style="width: 650px"border="0" src="https://3.bp.blogspot.com/-2smBNJfBDM8/Xzap36j4ygI/AAAAAAAAPf0/7Mk0d5WTv1wuXYnRi6zD3Dqez3XqszZRgCLcBGAsYHQ/s1600/Android_Game_New_v4.jpg" data-original-width="1600" data-original-height="476"alt= Android game graphic /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p&gt;
      Welcome to our latest Android games update and the start of our &lt;em&gt;&lt;a href="http://d.android.com/11weeksofandroid"&gt;#11WeeksOfAndroid&lt;/a&gt;&lt;/em&gt; week focused on games, media and 5G. With all of your interest and feedback in our developer previews, tools and services, we have lots to share in our ongoing efforts to help you better understand your game’s performance, expand your reach to more devices and new audiences, and support your go-to-market with Google Play.
      &lt;/p&gt;
      &lt;p&gt;
      Get the latest updates below and follow us at &lt;a href="https://twitter.com/AndroidDev"&gt;@AndroidDev&lt;/a&gt; for additional games resources and more.
      &lt;/p&gt;

      &lt;center&gt; &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DKVEL0_Gpzs" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt; &lt;/center&gt;

      &lt;h2&gt;&lt;strong&gt;Android tools for mobile game development&lt;/strong&gt;&lt;/h2&gt;


      &lt;ul&gt;

      &lt;li&gt;&lt;strong&gt;&lt;a href="https://developer.android.com/studio"&gt;Android Studio 4.1&lt;/a&gt;&lt;/strong&gt;: We've enhanced the CPU Profiler to expose more data with an improved UI, and we've added memory visualization, startup profiling capabilities, and sampling rate configuration to our Native Memory Profiler. Additionally, you can now open the Android Studio Profilers in a standalone UI. Checkout the &lt;a href="https://medium.com/androiddevelopers/whats-new-in-android-studio-system-trace-5841465c5935"&gt;System Trace&lt;/a&gt; and &lt;a href="https://medium.com/androiddevelopers/native-memory-profiling-with-android-studio-4-1-33a9e6b44be"&gt;Native Memory&lt;/a&gt; blog posts for more details, and update Android Studio today for better profiling.

      &lt;li&gt;&lt;strong&gt;&lt;a href="https://services.google.com/fb/forms/androidgamedevelopmentextension-developerpreview/"&gt;Android Game Development Extension&lt;/a&gt;&lt;/strong&gt;: For developers building games on multiple platforms with C/C++, we continue to invest in our extension for Visual Studio, including adding support for Visual Studio 2019 and launching standalone Android Studio Profilers. Sign up for the developer preview to integrate with your Visual Studio workflow.

      &lt;li&gt;&lt;strong&gt;&lt;a href="https://gpuinspector.dev/"&gt;Android GPU Inspector&lt;/a&gt;&lt;/strong&gt;: Look into the GPU of Android devices to better understand the bottlenecks and utilize the insights to optimize the graphical performance of your game experiences. Sign up for the developer preview and stay tuned for our upcoming open beta.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h2&gt;&lt;strong&gt;Reach more devices and users&lt;/strong&gt;&lt;/h2&gt;


      &lt;ul&gt;

      &lt;li&gt;&lt;strong&gt;&lt;a href="http://d.android.com/performance-tuner"&gt;Android Performance Tuner&lt;/a&gt;:&lt;/strong&gt; Deliver higher quality game experiences to more Android users with less effort. Measure your frame rate performance and graphical fidelity and optimise between them to achieve stable frame rates at scale across the whole Android device ecosystem. Integrate the Unity plug-in or do a custom integration. Learn more in our new &lt;a href="https://www.youtube.com/watch?v=AO0O8HaqG-w&amp;feature=youtu.be"&gt;session&lt;/a&gt;.

      &lt;li&gt;&lt;strong&gt;&lt;a href="https://developer.android.com/games/sdk"&gt;Android Game SDK&lt;/a&gt;&lt;/strong&gt;: Achievieving smoother frame rates and managing input latency on Android has become even easier! Now that the Game SDK is part of Jetpack, it’s simple to integrate our gaming libraries, such as the Frame Pacing API or the Android Performance Tuner, into your game. &lt;a href="https://developer.android.com/games/sdk"&gt;Grab the SDK&lt;/a&gt; or &lt;a href="https://developer.android.com/jetpack/androidx/releases/games"&gt;integrate it now through Jetpack&lt;/a&gt;.

      &lt;li&gt;&lt;strong&gt;&lt;a href="http://g.co/play/assetdelivery"&gt;Play Asset Delivery&lt;/a&gt;&lt;/strong&gt;: Improve your user experience while reducing delivery costs and the size of your game with Play Asset Delivery’s flexible delivery modes, auto-updates and delta patching. Gameloft used PAD to improve user retention, resulting in &lt;a href="https://developer.android.com/stories/games/gameloft-pad"&gt;10% more new players&lt;/a&gt; than with their previous asset delivery system. App bundle format will be required for all new apps starting August 2021. As part of this, we will deprecate legacy APK expansion files (OBBs), making Play Asset Delivery the standard option for publishing games over 150MB.

      &lt;li&gt;&lt;strong&gt;&lt;a href="https://medium.com/googleplaydev/protect-your-game-and-players-on-google-play-c3fa376fb375"&gt;Protect game integrity and fairness with Google Play tools&lt;/a&gt;&lt;/strong&gt;: Protect your game, players, and business by reducing costs fighting monetization and distribution abuse. Some partners have seen up to a 40% decrease in potential hacks and up to a 30% decrease in fraudulent purchase attempts using our integrity and commerce APIs. Express interest in the automatic integrity protection EAP.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h2&gt;&lt;strong&gt;Boost your go-to-market &lt;/strong&gt;&lt;/h2&gt;


      &lt;ul&gt;

      &lt;li&gt;&lt;strong&gt;&lt;a href="https://developers.google.com/games/services/common/concepts/friends"&gt;Play Games Services - Friends&lt;/a&gt;&lt;/strong&gt;: Now in open beta, help players easily find and play with friends across Android games. Millions of players have a new platform-level friends list that you can access to bootstrap and enhance your in-game friend networks and have your games surfaced in new clusters in the Play Games app. Start using Google Play Games Services - Friends in your game today.

      &lt;li&gt;&lt;strong&gt;&lt;a href="https://support.google.com/googleplay/android-developer/answer/9859047?_ga=2.231733915.521848568.1594959946-295916848.1580755207"&gt;Pre-registration&lt;/a&gt;: &lt;/strong&gt;Boost early installs with pre-registration and day 1 auto install. Early experiments show a +20% increase in day 1 installs when using this new feature. We have also optimized our day 1 notifications to pre-registered users. Try out the new pre-registration menu in the Play Developer Console to access this feature.

      &lt;li&gt;&lt;strong&gt;Play store updates&lt;/strong&gt;: We’re updating games home with a much greater visual experience, showcasing rich game graphics and engaging videos. This provides a more arcade-like browse experience helping users discover new games that match what they like to play. Learn how to &lt;a href="https://support.google.com/googleplay/android-developer/answer/1078870?hl=en"&gt;optimize your store listing page&lt;/a&gt; with the best quality assets.

      &lt;li&gt;&lt;strong&gt;&lt;a href="https://developer.android.com/guide/playcore/in-app-review"&gt;In-app reviews&lt;/a&gt;&lt;/strong&gt;: Give users the ability to leave a review from within your game, without heading back to the app details page, using our new in-app review API, part of the &lt;a href="https://developer.android.com/guide/playcore"&gt;Play Core Library&lt;/a&gt;. Learn more in our recent &lt;a href="https://android-developers.googleblog.com/2020/08/leverage-in-app-review-api-for-your.html"&gt;blog post&lt;/a&gt;.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      Check out &lt;a href="http://d.android.com/games"&gt;d.android.com/games&lt;/a&gt; to learn about these tools and more, and stay up to date by signing up for the &lt;a href="https://developer.android.com/updates"&gt;games quarterly newsletter&lt;/a&gt;.
      &lt;/p&gt;

      &lt;br&gt;

      &lt;center&gt;
      &lt;p&gt;
      How useful did you find this blog post?
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=Playpolicybundle-04/20" style="color: gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=Playpolicybundle-04/20" style="color: gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=Playpolicybundle-04/20" style="color: gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;entry.2056663615&amp;entry.646747778=Playpolicybundle-04/20" style="color: gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=Playpolicybundle-04/20" style="color: gold;"&gt;★&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://4.bp.blogspot.com/-1LBva3U1LCI/W6kL2pl9ZYI/AAAAAAAAFys/grkBZRKkAWE1eLAh6DPffThJ7gP__SREACLcBGAs/s1600/play_logo_16_9%2B%25285%2529.png" imageanchor="1" &gt;&lt;img id="imgHalf" style="width:40%;" border="0" src="https://4.bp.blogspot.com/-1LBva3U1LCI/W6kL2pl9ZYI/AAAAAAAAFys/grkBZRKkAWE1eLAh6DPffThJ7gP__SREACLcBGAs/s1600/play_logo_16_9%2B%25285%2529.png" data-original-width="499" data-original-height="281" /&gt;&lt;/a&gt;
      &lt;/p&gt;
      &lt;/center&gt;
      &lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=R_jYk64316k:zAWZNR6viN0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=R_jYk64316k:zAWZNR6viN0:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=R_jYk64316k:zAWZNR6viN0:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/R_jYk64316k" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1684396565290335988" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1684396565290335988" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/R_jYk64316k/whats-new-for-android-game-developers.html" title="What’s new for Android game developers: August update" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-2smBNJfBDM8/Xzap36j4ygI/AAAAAAAAPf0/7Mk0d5WTv1wuXYnRi6zD3Dqez3XqszZRgCLcBGAsYHQ/s72-c/Android_Game_New_v4.jpg" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/whats-new-for-android-game-developers.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-5973299486372427811</id>
    <published>2020-08-14T10:01:00.001-07:00</published>
    <updated>2020-08-18T07:09:12.299-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid Android TV" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Developer" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android for cars" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
    <category scheme="http://www.blogger.com/atom/ns#" term="latest" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Wear OS" />
    <title type="text">11 Weeks of Android: Beyond phones</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;
      &lt;img src="https://4.bp.blogspot.com/-Ce2AR2NwKPg/XzWepAly4NI/AAAAAAAAPfo/aHqilRnEh8MvCwJbH0fDoYRpy9athoxlQCLcBGAsYHQ/s1600/week9%2B%25281%2529.png" style="display: none;" /&gt;


      &lt;br /&gt;
      &lt;em&gt;Posted by Product Leads for Android TV, Android for cars, Wear OS, and Chrome OS &lt;/em&gt;&lt;br /&gt;
      &lt;br /&gt;
      &lt;center&gt;
      &lt;a href="https://4.bp.blogspot.com/-Ce2AR2NwKPg/XzWepAly4NI/AAAAAAAAPfo/aHqilRnEh8MvCwJbH0fDoYRpy9athoxlQCLcBGAsYHQ/s1600/week9%2B%25281%2529.png" imageanchor="1"&gt;&lt;img alt="Android" beyond="" border="0" data-original-height="901" data-original-width="1600" phones="" src="https://4.bp.blogspot.com/-Ce2AR2NwKPg/XzWepAly4NI/AAAAAAAAPfo/aHqilRnEh8MvCwJbH0fDoYRpy9athoxlQCLcBGAsYHQ/s1600/week9%2B%25281%2529.png" style="width: 650px;" /&gt;&lt;/a&gt; &lt;/center&gt;
      &lt;em&gt;This blog post is part of a weekly series for &lt;a href="http://d.android.com/11weeksofandroid"&gt;#11WeeksOfAndroid&lt;/a&gt;. Each week we’re diving into a key area of Android so you don’t miss anything. This week, we spotlighted Android Beyond Phones; here’s a look at what you should know.&lt;/em&gt;
      &lt;br /&gt;
      With Android, people can experience the apps and services that they love across many devices &amp;amp; surfaces. Beyond phones, Android offers distinct yet familiar experiences on devices of all shapes and sizes, ranging from the smallest smartwatch screens, to larger displays on foldables and Chromebooks, to in-car entertainment systems, and all the way up to the largest television screens. For the past 4 days, we featured a daily deep dive into each of these exciting form factors that are providing developers with new and growing ways to engage people. Read on for a recap.
      &lt;br /&gt;
      &lt;strong&gt;Android TV&lt;/strong&gt;
      &lt;br /&gt;
      We kicked off the week with &lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=OOV6Ef9zDg0&amp;amp;list=PLWz5rJ2EKKc-Z8NeBXJkf1bzUVhx3fvh4&amp;amp;index=2"&gt;Android TV&lt;/a&gt;&lt;/strong&gt;, which is now partnering with 7 of the top 10 OEMs and over 160 television operators across the globe. The Android TV team highlighted &lt;a href="https://android-developers.googleblog.com/2020/08/6-new-ways-to-engage-with-users-on.html"&gt;6 upcoming launches&lt;/a&gt;, like instant app trials right from Google Play and an updated Gboard, to help developers acquire more users, more easily monetize, and build even more engaging experiences.  Then, &lt;a href="https://medium.com/androiddevelopers/android-tv-best-practices-for-engaging-apps-acd0219ff395"&gt;new resources were published&lt;/a&gt; to help developers build their first Android TV app, or even go deep on new integrations like &lt;a href="https://www.youtube.com/watch?v=3L-XjCf018s&amp;amp;list=PLWz5rJ2EKKc-Z8NeBXJkf1bzUVhx3fvh4&amp;amp;index=3"&gt;Cast Connect &lt;/a&gt;and &lt;a href="https://www.youtube.com/watch?v=ARuf97ncE4w&amp;amp;list=PLWz5rJ2EKKc-Z8NeBXJkf1bzUVhx3fvh4&amp;amp;index=4"&gt;frictionless subscriptions&lt;/a&gt;. If you’re excited about developing for TV, pick up an &lt;a href="https://store.askey.com/adt-3.html"&gt;ADT-3&lt;/a&gt;, learn the latest from the &lt;a href="https://developer.android.com/courses/pathways/android-week9-android-tv"&gt;training pathway&lt;/a&gt;, and bring your Android app to the biggest screen in the home!
      &lt;br /&gt;
      &lt;center&gt;
      &lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/OOV6Ef9zDg0" width="560"&gt;&lt;/iframe&gt;
      &lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/3L-XjCf018s" width="560"&gt;&lt;/iframe&gt;
      &lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/ARuf97ncE4w" width="560"&gt;&lt;/iframe&gt;&lt;/center&gt;
      &lt;strong&gt;Android for Cars&lt;/strong&gt;
      &lt;br /&gt;
      We shared new ways to reach more drivers on &lt;a href="https://android-developers.googleblog.com/2020/08/android-for-cars.html"&gt;Android for cars&lt;/a&gt;. &lt;a href="https://www.android.com/auto/"&gt;Android Auto&lt;/a&gt;, which allows you to connect your phone to your car display, is currently available with nearly every major car manufacturer and is on track to reach 100 million cars. Soon, new app categories including navigation, parking, and electric vehicle charging will be available and the experience for Android Auto users will become even more seamless as car manufacturers continue to add support for wireless connectivity. We also highlighted the launch of the first car powered by &lt;a href="https://source.android.com/devices/automotive/start/what_automotive"&gt;Android Automotive OS&lt;/a&gt; with Google apps and services built in —&amp;nbsp;the &lt;a href="https://www.polestar.com/us/polestar-2/"&gt;Polestar 2&lt;/a&gt;. As more manufacturers ship cars with this embedded functionality, we’re making it even easier for developers to build media apps on Android Automotive OS with updated &lt;a href="https://developer.android.com/training/cars/media/automotive-os"&gt;documentation&lt;/a&gt; and &lt;a href="https://developer.android.com/training/cars/testing#system-images"&gt;emulators&lt;/a&gt;. Get started today to bring your app to cars!
      &lt;br /&gt;
      &lt;strong&gt;Large Screens&lt;/strong&gt;
      &lt;br /&gt;
      We covered large screens starting with the announcement of &lt;a href="https://chromeos.dev/"&gt;ChromeOS.dev&lt;/a&gt; — a dedicated resource for technical developers, designers, product managers, and business leaders. We’ve showcased our growth in device sales in Chrome OS, seeing Chromebook unit sales grew 127% year over year between March and June this year&lt;sup&gt;1&lt;/sup&gt;, as well as some of the new features coming, such as customizable Linux Terminal and Android Emulator support. We’ve also continued to see growth in apps optimized for larger screen experiences, with over 1 million apps optimized for tablets and large screens available in the Google Play store. To help you develop the best-in-class apps for Chrome OS, foldables and tablets, we are continuing to release new features and updates. We released new design recommendations for your app as well as a few updates made in Android Studio. Check out the new sessions and some of the resurfaced content to learn more about bringing the best experiences to your users on these large-screen devices.
      &lt;br /&gt;
      &lt;center&gt;
      &lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/ukFjRUIzcaI" width="560"&gt;&lt;/iframe&gt;&lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/-e08ixmih20" width="560"&gt;&lt;/iframe&gt; &lt;/center&gt;
      &lt;strong&gt;Wear OS
      &lt;/strong&gt;
      &lt;br /&gt;
      To round out the week, we talked about Wear OS where we are investing in the fundamentals with a focus on performance and faster app startup times, which you’ll see in the latest platform release coming in the fall. Wear OS will be launching updates to cornerstone features like Weather in the coming months, and is investing in helpful experiences, such as our recent hand-wash timer to help people maintain hand-hygiene in the Covid-19 pandemic. The team is working hard to bring the best of Android 11 to Wear OS. Learn more about what they're working on, &lt;a href="https://android-developers.googleblog.com/2020/08/whats-happening-in-wear-os-by-google.html"&gt;here&lt;/a&gt;.
      &lt;br /&gt;
      &lt;strong&gt;Learning paths&lt;/strong&gt;
      &lt;br /&gt;
      Are you building your apps with different screen sizes and form factors in mind? Check out all the resources for &lt;a href="https://developer.android.com/wear"&gt;Wear OS&lt;/a&gt; and &lt;a href="https://developer.android.com/cars"&gt;Android for cars&lt;/a&gt;, and if you’re looking for an easy way to pick up the highlights of this week for &lt;a href="https://developer.android.com/courses/pathways/android-week9-android-tv"&gt;Android TV&lt;/a&gt; and &lt;a href="https://developer.android.com/courses/pathways/android-week9-large-screens"&gt;large screens&lt;/a&gt;, consider completing the pathway for each. These include codelabs, videos, articles and blog posts. A virtual badge is awarded to each user who passes the quiz.
      &lt;br /&gt;
      We hope that you found the Android Beyond Phones week useful, and we're excited to see all the great experiences that you'll build on these platforms! &lt;br /&gt;
      &lt;strong&gt;Resources&lt;/strong&gt;
      &lt;br /&gt;
      &lt;em&gt;You can find the entire playlist of #11WeeksOfAndroid video content &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;here&lt;/a&gt;, and learn more about each week &lt;a href="http://d.android.com/android11"&gt;here&lt;/a&gt;. We’ll continue to spotlight new areas each week, so &lt;a href="https://android-developers.googleblog.com/"&gt;keep an eye out&lt;/a&gt; and follow us on &lt;a href="https://twitter.com/androiddev"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;YouTube&lt;/a&gt;. Thanks so much for letting us be a part of this experience with you! &lt;/em&gt;
      &lt;br /&gt;
      &lt;small&gt; Sources:&lt;br /&gt;&lt;sup&gt;1 &lt;/sup&gt;The NPD Group, Inc., U.S. Retail Tracking Service, Notebook Computers, based on unit sales, April–June 2020 and March–June 2020​.
      &lt;br /&gt;
      &lt;/small&gt;&lt;/div&gt;
      &lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Ojs8sfG7AIU:BND2Rb4yoRk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Ojs8sfG7AIU:BND2Rb4yoRk:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=Ojs8sfG7AIU:BND2Rb4yoRk:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/Ojs8sfG7AIU" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5973299486372427811" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5973299486372427811" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/Ojs8sfG7AIU/11-weeks-of-android-beyond-phones.html" title="11 Weeks of Android: Beyond phones" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://4.bp.blogspot.com/-Ce2AR2NwKPg/XzWepAly4NI/AAAAAAAAPfo/aHqilRnEh8MvCwJbH0fDoYRpy9athoxlQCLcBGAsYHQ/s72-c/week9%2B%25281%2529.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/11-weeks-of-android-beyond-phones.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-8984836953861990615</id>
    <published>2020-08-13T06:05:00.000-07:00</published>
    <updated>2020-08-13T06:39:40.894-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Wear" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Wear OS" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Wearables" />
    <category scheme="http://www.blogger.com/atom/ns#" term="wearos" />
    <title type="text">What’s happening in Wear OS by Google</title>
    <content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-QYHxibrDwUs/XzVCbVY3E_I/AAAAAAAAPfc/GUmCk_cHWnotdEB8-sCPgL7G84GqKIV3gCLcBGAsYHQ/s1600/Wearable%2BOS.jpg"&gt;
      &lt;img style="display:none" src="https://1.bp.blogspot.com/-QYHxibrDwUs/XzVCbVY3E_I/AAAAAAAAPfc/GUmCk_cHWnotdEB8-sCPgL7G84GqKIV3gCLcBGAsYHQ/s1600/Wearable%2BOS.jpg"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Karen Ng, Director of Product and Robert Simpson, Product Manager&lt;/em&gt;&lt;p&gt;

      &lt;p&gt;
      &lt;em&gt;This blog post is part of a weekly series for &lt;a href="https://twitter.com/search?q=%2311WeeksOfAndroid&amp;src=typed_query"&gt;#11WeeksOfAndroid&lt;/a&gt;. For each week, we’re diving into a key area and this week we’re focusing on Android Beyond Phones. Today, we’ll share what’s happening with Wear OS by Google.&lt;/em&gt;
      &lt;/p&gt;

      &lt;p&gt;
      Wearable technologies help people lead healthier lives and connect with important, timely information. Today, we're sharing our areas of investment focusing on the fundamentals, bringing even more helpful experiences to more watches, and giving users more choice in a device ecosystem.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Focusing on fundamentals&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      Wearables are designed to instantly connect people with what's important throughout the day. That's why we're focused on fundamentals like performance and power.
      &lt;/p&gt;
      &lt;p&gt;
      In the next OTA update coming in the fall, we’re improving performance by making it faster to access your info and start your apps. We’re simplifying the pairing process to make onboarding easier. You’ll see improvements to our SysUI for more intuitive controls for managing different watch modes and workouts. And with CPU core improvements, you’ll also see up to a 20% speed improvement in startup time for your apps.
      &lt;/p&gt;
      &lt;p&gt;
      Finally, we continue to support advancements in technology to bring new functionality, such as LTE, and expand levels of performance with the new Qualcomm® Snapdragon Wear™ 4100 and 4100+ platforms. We are excited by the kinds of wearable experiences that can be enabled in the future.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt; More helpful experiences&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      Wearables showcase important information at a glance. Some of the most used features of Wear OS by Google are hands-free timers and tracking fitness metrics. In response to COVID-19, we built a handwashing timer that helps ensure users practice good hygiene.
      &lt;/p&gt;

      &lt;center&gt; &lt;a href="https://2.bp.blogspot.com/-zdjrQIYW4Ds/XzRHgORyIOI/AAAAAAAAPeI/2oLrV3dR9FgNvj-7ZilTUsCj-ffPeADcACLcBGAsYHQ/s1600/Image%2B1_%2BHandwash.gif" imageanchor="1" &gt;&lt;img style="width:250px" border="0" src="https://2.bp.blogspot.com/-zdjrQIYW4Ds/XzRHgORyIOI/AAAAAAAAPeI/2oLrV3dR9FgNvj-7ZilTUsCj-ffPeADcACLcBGAsYHQ/s1600/Image%2B1_%2BHandwash.gif" data-original-width="512" data-original-height="512" alt- gif of wearble OS feature /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p&gt;
      And later this year, you’ll see a beautiful new weather experience for Wear OS by Google. It aims to be easier to read while on the go, with an hourly breakdown of today’s weather to help you plan ahead and provide information about important weather alerts in your area.
      &lt;/p&gt;

      &lt;center&gt; &lt;div id="flexParent"&gt;
      &lt;a href="https://2.bp.blogspot.com/-31i2uq0ZUYk/XzRKUt2bMHI/AAAAAAAAPec/HDJpSvlQVyc2nKbGPS0E1Wip-L6b1FMdgCLcBGAsYHQ/s1600/image4.png" imageanchor="1" &gt;&lt;img id="flexImg" border="0" src="https://2.bp.blogspot.com/-31i2uq0ZUYk/XzRKUt2bMHI/AAAAAAAAPec/HDJpSvlQVyc2nKbGPS0E1Wip-L6b1FMdgCLcBGAsYHQ/s1600/image4.png" alt="Wearable OS image" /&gt;&lt;/a&gt;


      &lt;a href="https://1.bp.blogspot.com/-z8BKK6m8gmE/XzRKrU8QvxI/AAAAAAAAPek/Cxr-jNz_BqI8pIsUUH9V5Hf_E-lGaIjnwCLcBGAsYHQ/s1600/Image%2B3_%2BWeather.png" imageanchor="1" &gt;&lt;img id="flexImg" border="0" src="https://1.bp.blogspot.com/-z8BKK6m8gmE/XzRKrU8QvxI/AAAAAAAAPek/Cxr-jNz_BqI8pIsUUH9V5Hf_E-lGaIjnwCLcBGAsYHQ/s1600/Image%2B3_%2BWeather.png" alt= "Wearable OS image" /&gt;&lt;/a&gt;

      &lt;a href="https://4.bp.blogspot.com/-DtQcSVnyDgU/XzRK8nWwxKI/AAAAAAAAPes/GhNxejSNg_UuaGv1MwaWgZbPE8FL8fLHQCLcBGAsYHQ/s1600/Image%2B4_%2BWeather.png" imageanchor="1" &gt;&lt;img id="flexImg" border="0" src="https://4.bp.blogspot.com/-DtQcSVnyDgU/XzRK8nWwxKI/AAAAAAAAPes/GhNxejSNg_UuaGv1MwaWgZbPE8FL8fLHQCLcBGAsYHQ/s1600/Image%2B4_%2BWeather.png" alt= "Wearable OS image" /&gt;&lt;/a&gt;&lt;/div&gt; &lt;/center&gt;


      &lt;p&gt;
      We’re always imagining new ways wearables can  help people stay healthy, present and connected. Stay tuned for more in 2021!
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;More choice than ever&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      We’re excited to welcome new watch OEMs to the Wear OS by Google family -- Oppo, Suunto, and Xiaomi. This means new watches that fit your style and needs -- such as the &lt;a href="https://www.suunto.com/en-gb/suunto-collections/suunto-7/"&gt;Suunto 7&lt;/a&gt; with rich sports capabilities, or the new LTE watches from &lt;a href="https://www.oppo.com/en/accessory-oppo-watch/"&gt;Oppo&lt;/a&gt; that will keep you connected on the go.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Bringing the best of Android to wearables&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      We’re also working to bring the best of Android 11 to wearables. Many of the things you’ve seen in &lt;strong&gt;&lt;a href="http://d.android.com/modern-android-development"&gt;modern Android development&lt;/a&gt;&lt;/strong&gt; -- from Android Studio, a great language with Kotlin, and Jetpack libraries to make common tasks easier will be part of what you can expect as a developer building wearable apps. We’ve just released a release candidate for &lt;a href="https://developer.android.com/jetpack/androidx/releases/wear"&gt;androidx.wear 1.1.0&lt;/a&gt;, and would love feedback on things you’d like to see as you get started building &lt;a href="https://developer.android.com/training/wearables/apps/creating"&gt;a wearable app&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      We can’t wait to see what helpful experiences you’ll build!
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=wntnbdf29A0:tsrvWnJ2m0Q:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=wntnbdf29A0:tsrvWnJ2m0Q:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=wntnbdf29A0:tsrvWnJ2m0Q:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/wntnbdf29A0" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8984836953861990615" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8984836953861990615" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/wntnbdf29A0/whats-happening-in-wear-os-by-google.html" title="What’s happening in Wear OS by Google" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-QYHxibrDwUs/XzVCbVY3E_I/AAAAAAAAPfc/GUmCk_cHWnotdEB8-sCPgL7G84GqKIV3gCLcBGAsYHQ/s72-c/Wearable%2BOS.jpg" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/whats-happening-in-wear-os-by-google.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-8043393362201186275</id>
    <published>2020-08-12T09:30:00.000-07:00</published>
    <updated>2020-08-12T17:55:17.251-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="chrome os" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Chromebooks" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Crostini" />
    <category scheme="http://www.blogger.com/atom/ns#" term="desktop" />
    <category scheme="http://www.blogger.com/atom/ns#" term="desktop apps" />
    <category scheme="http://www.blogger.com/atom/ns#" term="laptop apps" />
    <category scheme="http://www.blogger.com/atom/ns#" term="laptops" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Linux on Chrome OS" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Linux on Chromebooks" />
    <title type="text">ChromeOS.dev — A blueprint to build world-class apps and games for Chrome OS</title>
    <content type="html">&lt;meta name="twitter:image" content="https://3.bp.blogspot.com/-uWXJQN6M8ek/XzL6IKb-ILI/AAAAAAAAJPA/D4SHfRklM5AMv65ysRgnA_LL4XMD7qK3gCLcBGAsYHQ/s1600/Blog%2Bpost_Hero%2Bbanner.png"&gt;
      &lt;img style="display:none" src="https://3.bp.blogspot.com/-uWXJQN6M8ek/XzL6IKb-ILI/AAAAAAAAJPA/D4SHfRklM5AMv65ysRgnA_LL4XMD7qK3gCLcBGAsYHQ/s1600/Blog%2Bpost_Hero%2Bbanner.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Iein Valdez, Head of Chrome OS Developer Relations&lt;/em&gt;&lt;/p&gt;
      &lt;a href="https://3.bp.blogspot.com/-uWXJQN6M8ek/XzL6IKb-ILI/AAAAAAAAJPA/D4SHfRklM5AMv65ysRgnA_LL4XMD7qK3gCLcBGAsYHQ/s1600/Blog%2Bpost_Hero%2Bbanner.png" imageanchor="1" &gt;&lt;img border="0" style="width:100%" src="https://3.bp.blogspot.com/-uWXJQN6M8ek/XzL6IKb-ILI/AAAAAAAAJPA/D4SHfRklM5AMv65ysRgnA_LL4XMD7qK3gCLcBGAsYHQ/s1600/Blog%2Bpost_Hero%2Bbanner.png" data-original-width="1600" data-original-height="481" /&gt;&lt;/a&gt;
      &lt;i&gt;This article originally appeared on ChromeOS.dev.&lt;/i&gt;
      &lt;p&gt;
      While people are spending more time at home than on the go, they’re relying increasingly on personal desktops and laptops to make everyday life easier. Whether they’re video-chatting with friends and family, discovering entertaining apps and games, multitasking at work, or pursuing a passion project, bigger screens and better performance have made all the difference.
      &lt;/p&gt;
      &lt;p&gt;
      This trend was clear from March through June 2020: Chromebook unit sales grew 127% year over year (YOY) while the rest of the U.S. notebook category increased by 40% YOY.&lt;sup&gt;1&lt;/sup&gt; Laptops have become crucial to people at home who want to use their favorite apps and games, like &lt;a href="https://play.google.com/store/apps/details?id=com.scopely.startrek&amp;hl=en_US"&gt;Star Trek™ Fleet Command&lt;/a&gt; and &lt;a href="https://play.google.com/store/apps/details?id=com.devolver.reignsGot&amp;hl=en_US"&gt;Reigns: Game of Thrones&lt;/a&gt; to enjoy action-packed adventure, &lt;a href="https://play.google.com/store/apps/details?id=com.calm.android&amp;hl=en_US"&gt;Calm&lt;/a&gt; to manage stress, or &lt;a href="https://play.google.com/store/apps/details?id=com.disney.disneyplus&amp;hl=en_US"&gt;Disney+&lt;/a&gt; to keep the whole family entertained.
      &lt;/p&gt;
      &lt;a href="https://2.bp.blogspot.com/-aJlWUS7129s/XzMRz_6P4dI/AAAAAAAAJPs/M8UQnVDiA2klXBp3msHDpEk-6D-Rl350ACLcBGAsYHQ/s1600/deviceyoy.gif" imageanchor="1" &gt;&lt;img border="0" style="width:100%" src="https://2.bp.blogspot.com/-aJlWUS7129s/XzMRz_6P4dI/AAAAAAAAJPs/M8UQnVDiA2klXBp3msHDpEk-6D-Rl350ACLcBGAsYHQ/s1600/deviceyoy.gif" data-original-width="1477" data-original-height="744" alt="Device Sales YOY"/&gt;&lt;/a&gt;
      &lt;p&gt;
      To deliver app experiences that truly improve people’s lives, developers must be equipped with the right tools, resources, and best practices. That’s why we’re excited to introduce &lt;strong&gt;&lt;a href="https://chromeos.dev/en/"&gt;ChromeOS.dev &lt;/a&gt;&lt;/strong&gt;— a dedicated resource for technical developers, designers, product managers, and business leaders.
      &lt;/p&gt;
      &lt;p&gt;
      ChromeOS.dev, available in English and Spanish (with other languages coming soon), features the latest news, product announcements, technical documentation, and code samples from popular apps. Whether you’re a web, Android, or Linux developer who’s just getting started or a certified expert, you’ll find all the information you need on ChromeOS.dev.
      &lt;/p&gt;
      &lt;p&gt;
      Hear from our experts at Google and Chrome OS, as well as a variety of developers, as they share practical tips, benefits, and the challenges of creating app experiences for today’s users. Plus, you can review the updated &lt;a href="https://chromeos.dev/en/android/design"&gt;Chrome OS Layout and UX App Quality guidelines&lt;/a&gt; with helpful information on UI components, navigation, fonts, layouts, and everything that goes into creating world-class apps and games for Chrome OS.
      &lt;/p&gt;
      &lt;p&gt;
      Even better, as a &lt;a href="https://github.com/chromeos/chromeos.dev"&gt;fully open-source&lt;/a&gt; online destination, ChromeOS.dev is designed considering all the principles and methods for creating highly capable and reliable Progressive Web Apps (PWAs), ensuring developers always have quick, easy access to the information they need — even when they’re offline.
      &lt;/p&gt;
      &lt;a href="https://3.bp.blogspot.com/-DPouUK8To1E/XzMSRcCAfGI/AAAAAAAAJP0/-qHt1nFvTGgj0J42-mu64rOA16COksY-gCLcBGAsYHQ/s1600/chromeos.gif" imageanchor="1" &gt;&lt;img border="0" style="width:100%" src="https://3.bp.blogspot.com/-DPouUK8To1E/XzMSRcCAfGI/AAAAAAAAJP0/-qHt1nFvTGgj0J42-mu64rOA16COksY-gCLcBGAsYHQ/s1600/chromeos.gif" data-original-width="800" data-original-height="419" /&gt;&lt;/a&gt;
      &lt;p&gt;
      Check out a few of the newest updates and improvements below, and be sure to install the ChromeOS.dev PWA on your device to stay on top of the latest information.
      &lt;/p&gt;
      &lt;h2&gt;New features for Chrome OS developers&lt;/h2&gt;
      &lt;p&gt;Whether it’s developing Android, Linux, or web apps, every update on ChromeOS.dev is about making sure all developers can build better app experiences in a streamlined, easy-to-navigate environment.
      &lt;/p&gt;
      &lt;h3&gt;Customizable Linux Terminal&lt;/h3&gt;
      &lt;p&gt;The Linux (Beta) on Chrome OS Terminal now comes equipped with personalized features right out of the box, including:&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;&lt;b&gt;Integrated tabs and shortcuts&lt;/b&gt;&lt;br&gt;
      Multitask with ease by using windows and tabs to manage different tasks and switch between multiple projects. You can also use familiar shortcuts such as Ctrl + T, Ctrl + W, and Ctrl + Tab to manage your tabs, or use the settings page to control if these keys should be used in your Terminal for apps like vim or emacs.
      &lt;li&gt;&lt;b&gt;Themes&lt;/b&gt;&lt;br&gt;
      Customize your Terminal by selecting a theme to switch up the background, frame, font, and cursor color.
      &lt;a href="https://2.bp.blogspot.com/-7b6WatO6EfA/XzM01pbtRwI/AAAAAAAAJQA/OcvDS48Iwc063kPy55FewRqpYHZ25RxEgCLcBGAsYHQ/s1600/linuxtheme.gif" imageanchor="1" &gt;&lt;img style="width:100%" border="0" src="https://2.bp.blogspot.com/-7b6WatO6EfA/XzM01pbtRwI/AAAAAAAAJQA/OcvDS48Iwc063kPy55FewRqpYHZ25RxEgCLcBGAsYHQ/s1600/linuxtheme.gif" data-original-width="800" data-original-height="450" /&gt;&lt;/a&gt;
      &lt;li&gt;&lt;b&gt;Redesigned Terminal settings&lt;/b&gt;&lt;br&gt;
      The settings tab has been reorganized to make it easier to customize all your Terminal options.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      Developers can now start using these and other customizable features in the Terminal app.
      &lt;/p&gt;
      &lt;h3&gt;Android Emulator support&lt;/h3&gt;
      &lt;p&gt;
      &lt;a href="https://chromeos.dev/en/android-environment"&gt;Supported Chromebooks&lt;/a&gt; can now run a full version of the Android Emulator, which allows developers to test apps on any Android version and device without needing the actual hardware. Android app developers can simulate &lt;a href="https://developer.android.com/studio/run/emulator#extended"&gt;map locations&lt;/a&gt; and other sensor data to test how an app performs with various motions, orientations, and environmental conditions. With the Android Emulator support in Chrome OS, developers can optimize for different Android versions and devices — including tablets and&lt;a href="https://developer.android.com/guide/topics/ui/foldables#emulators"&gt; foldable smartphones&lt;/a&gt; — right from their Chromebook.
      &lt;/p&gt;
      &lt;h3&gt;Deploy apps directly to Chrome OS&lt;/h3&gt;
      &lt;p&gt;
      Building and testing Android apps on a single machine is simpler than ever. Now, developers who are running Chrome OS M81 and higher can&lt;a href="https://chromeos.dev/en/android-environment/deploying-apps"&gt; deploy and test apps directly on their Chromebooks&lt;/a&gt;  — no need to use developer mode or to connect different devices physically via USB. Combined with Android Emulator support, Chrome OS is equipped to support full Android development.
      &lt;/p&gt;
      &lt;h3&gt;Improved Project Wizard in Android Studio&lt;/h3&gt;
      &lt;p&gt;
      An updated &lt;a href="https://developer.android.com/studio/projects/templates#PrimaryDetailFlow"&gt;Primary/Detail Activity Template&lt;/a&gt; in Android Studio offers complete support to build experiences for larger screens, including Chromebooks, tablets, and foldables. This updated option provides multiple layouts for both phones and larger-screen devices as well as better keyboard/mouse scaffolding. This feature will be available in Android Studio 4.2 Canary 8.
      &lt;/p&gt;
      &lt;h3&gt;Updated support from Android lint checks&lt;/h3&gt;
      &lt;p&gt;
      We’ve improved the default checks in &lt;a href="https://developer.android.com/studio/write/lint"&gt;Android’s lint tool&lt;/a&gt; to help developers identify and correct common coding issues to improve their apps on larger screens, such as non-resizable and portrait-locked activities. This feature is currently available for testing in Canary channel.
      &lt;/p&gt;
      &lt;h2&gt;Unlock your app’s full potential with Chrome OS&lt;/h2&gt;
      &lt;p&gt;From day one, our goal has been to help developers at every skill level create simple, powerful, and secure app experiences for all platforms. As our new reality creates a greater need for helpful and engaging apps on large-screen devices, we’re working hard to streamline the process by making Chrome OS more versatile, customizable, and intuitive.
      &lt;/p&gt;
      &lt;p&gt;
      Visit ChromeOS.dev and install it on your Chromebook to stay on top of the latest resources, product updates, thought-provoking insights, and inspiring success stories from Chrome OS developers worldwide.
      &lt;/p&gt;
      &lt;br&gt;&lt;/br&gt;
      &lt;br&gt;&lt;/br&gt;
      &lt;hr&gt;&lt;/hr&gt;
      &lt;small&gt;&lt;p&gt;
      Sources:&lt;br&gt;&lt;sup&gt;1 &lt;/sup&gt;The NPD Group, Inc., U.S. Retail Tracking Service, Notebook Computers, based on unit sales, April–June 2020 and March–June 2020​.
      &lt;/p&gt;&lt;/small&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=jFYZfTyv-aU:M3RVEyQ9pnM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=jFYZfTyv-aU:M3RVEyQ9pnM:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=jFYZfTyv-aU:M3RVEyQ9pnM:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/jFYZfTyv-aU" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8043393362201186275" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8043393362201186275" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/jFYZfTyv-aU/introducing-chrome-os-dev.html" title="ChromeOS.dev — A blueprint to build world-class apps and games for Chrome OS" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-uWXJQN6M8ek/XzL6IKb-ILI/AAAAAAAAJPA/D4SHfRklM5AMv65ysRgnA_LL4XMD7qK3gCLcBGAsYHQ/s72-c/Blog%2Bpost_Hero%2Bbanner.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/introducing-chrome-os-dev.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-4961579410161583472</id>
    <published>2020-08-11T06:00:00.000-07:00</published>
    <updated>2020-08-11T09:40:15.088-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Auto" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Automotive OS" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Developer" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Developing Media Apps" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
    <category scheme="http://www.blogger.com/atom/ns#" term="latest" />
    <title type="text">New ways to reach more drivers on Android for cars</title>
    <content type="html">&lt;meta name="twitter:image" content="https://4.bp.blogspot.com/-vKb1-7G-Hhc/XzGjZ55QbCI/AAAAAAAAPcs/o6EntDHnGbcodAILNSb6RwYYA_9sNrhvwCLcBGAsYHQ/s1600/Image%2B1_%2BEAP%2BAndroid%2BAuto%2Bapp%2Bexpansion.png"&gt;
      &lt;img style="display:none" src="https://4.bp.blogspot.com/-vKb1-7G-Hhc/XzGjZ55QbCI/AAAAAAAAPcs/o6EntDHnGbcodAILNSb6RwYYA_9sNrhvwCLcBGAsYHQ/s1600/Image%2B1_%2BEAP%2BAndroid%2BAuto%2Bapp%2Bexpansion.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Mickey Kataria, Director of Product Management, Android for cars&lt;/em&gt;&lt;p&gt;

      &lt;p&gt;
      &lt;em&gt;This blog post is part of a weekly series for &lt;a href="https://twitter.com/search?q=%2311WeeksOfAndroid&amp;src=typed_query"&gt;#11WeeksOfAndroid&lt;/a&gt;. For each week, we’re diving into a key area and this week we’re focusing on Android Beyond Phones. Today, we’ll be talking about cars.&lt;/em&gt;
      &lt;/p&gt;
      &lt;p&gt;
      Since 2014, Google has been committed to bringing the familiarity of apps and services from Android phones into the car in a safe and seamless way. We’re continuing to see strong momentum and adoption of both &lt;a href="https://www.android.com/auto/"&gt;Android Auto&lt;/a&gt; and &lt;a href="https://source.android.com/devices/automotive/start/what_automotive"&gt;Android Automotive OS&lt;/a&gt;, and are excited to share new improvements that provide app developers the opportunity to reach more users in the car.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Android Auto momentum&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      We launched &lt;a href="https://www.android.com/auto/"&gt;Android Auto&lt;/a&gt; for users to stay connected on-the-go and more easily access their Android phones on their car displays— while staying focused on the road. Android Auto is currently available with nearly every major car manufacturer and is on track to be in more than 100 million cars in the coming months. Many car manufacturers, including General Motors, BMW and Kia, have also added support for wireless connections, making it easier for drivers to use Android Auto as soon as they get into their car. We’re continuing to add &lt;a href="https://blog.google/products/android/five-new-android-features--/"&gt;new features&lt;/a&gt; to make the experience more seamless for users and help developers reach more drivers with in-car apps.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Expanding Android Auto’s app ecosystem&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      One of our most common requests for Android Auto continues to be support for more apps in the car. We currently have over 3,000 apps in Google Play whose in-car experiences have been purpose-built for driving.
      &lt;/p&gt;
      &lt;p&gt;
      Today, we’re showcasing our work with early access partners to build apps in new categories for Android Auto, including navigation, parking and electric vehicle charging. Using our new Android for Cars App Library, we’re able to ensure that all tasks within an app can be achieved with minimal glances or taps.
      &lt;/p&gt;


      &lt;center&gt; &lt;a href="https://4.bp.blogspot.com/-vKb1-7G-Hhc/XzGjZ55QbCI/AAAAAAAAPcs/o6EntDHnGbcodAILNSb6RwYYA_9sNrhvwCLcBGAsYHQ/s1600/Image%2B1_%2BEAP%2BAndroid%2BAuto%2Bapp%2Bexpansion.png" imageanchor="1" &gt;&lt;img style="width:600px" border="0" src="https://4.bp.blogspot.com/-vKb1-7G-Hhc/XzGjZ55QbCI/AAAAAAAAPcs/o6EntDHnGbcodAILNSb6RwYYA_9sNrhvwCLcBGAsYHQ/s1600/Image%2B1_%2BEAP%2BAndroid%2BAuto%2Bapp%2Bexpansion.png" data-original-width="1600" data-original-height="835" alt= image of Android Auto's partners/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt; Early access partners for new apps on Android Auto &lt;/p&gt;

      &lt;p&gt;
      To mitigate driver distraction, we collaborated with government, industry and academic institutions to develop our own &lt;a href="https://www.youtube.com/watch?v=OFHjmDrUF9A"&gt;best practice guidelines&lt;/a&gt; that we apply to every aspect of our product development process. With our standard templates and guidelines, developers have the tools to easily optimize their apps for cars, without needing to become an expert in driver distraction.
      &lt;/p&gt;
      &lt;p&gt;
      Our early access partners will be releasing new apps to their beta testers by the end of this year. Pending additional testing and feedback, we then plan to make these APIs publicly available for all developers to build Android Auto apps in these categories.
      &lt;/p&gt;
      &lt;p&gt;

      &lt;center&gt; &lt;a href="https://3.bp.blogspot.com/-q1PE31sWfXk/XzHU2kf2eJI/AAAAAAAAPdw/6DQF9Q3JFpMZP8mMTbB8HEMOQeyK74ljACLcBGAsYHQ/s1600/final_5f31ce27e5bc060015ae78e4_186813%2B%25282%2529%2B%25281%2529.gif" imageanchor="1" &gt;&lt;img style="width:500px" border="0" src="https://3.bp.blogspot.com/-q1PE31sWfXk/XzHU2kf2eJI/AAAAAAAAPdw/6DQF9Q3JFpMZP8mMTbB8HEMOQeyK74ljACLcBGAsYHQ/s1600/final_5f31ce27e5bc060015ae78e4_186813%2B%25282%2529%2B%25281%2529.gif" data-original-width="1280" data-original-height="762" alt= Android Auto gif/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt; We're partnering with some of the leading navigation, parking and electric vehicle charging apps around the world including ChargePoint, SpotHero and Sygic. &lt;/p&gt;

      &lt;p&gt;
      &lt;strong&gt;Android Automotive OS adoption&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      More recently, we introduced &lt;a href="https://source.android.com/devices/automotive/start/what_automotive"&gt;Android Automotive OS&lt;/a&gt; as a full-stack, open source and highly customizable platform powering vehicle infotainment systems. With Android Automotive OS, car manufacturers are able to have apps and services like Google Assistant, Google Maps and Google Play built into vehicles so that a mobile device is not required for common activities like navigation, downloading third-party apps and listening to media. &lt;a href="https://www.polestar.com/us/polestar-2/"&gt;Polestar 2&lt;/a&gt;, the first car running Android Automotive OS with Google built in, is now on the road and available for customers globally. In addition, Volvo Cars, Renault, General Motors and more have announced plans for infotainment systems powered by Android Automotive OS with Google apps and services built-in.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Extending the reach of media apps in cars&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      As more manufacturers begin to ship cars with infotainment systems powered by Android Automotive OS, developers have the opportunity to deliver a seamless media experience using Google Play in the car. If you already have a media app for Android Auto, you can extend the reach by adding support for Android Automotive OS. The process for porting over your apps is simple with most of the work already done, just &lt;a href="https://developer.android.com/training/cars/media/automotive-os"&gt;follow these steps&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Making it easier to develop media apps for Android Automotive OS &lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      For the past year, we have been on a journey to allow app developers to design, develop, test and publish media apps directly on Google Play in the car. We are happy to share that this is now possible.
      &lt;/p&gt;

      &lt;center&gt; &lt;div id="flexParent"&gt;
      &lt;a href="https://1.bp.blogspot.com/-sZ0_6GQV6zY/XzGmSw3Q2-I/AAAAAAAAPdE/6wa8TYfWFQM-krqiwqS4EvoQugyy7UMswCLcBGAsYHQ/s1600/Image%2B3_%2BPolestar%2B2%2BEmulator.png" imageanchor="1" &gt;&lt;img id="flexImg" border="0" src="https://1.bp.blogspot.com/-sZ0_6GQV6zY/XzGmSw3Q2-I/AAAAAAAAPdE/6wa8TYfWFQM-krqiwqS4EvoQugyy7UMswCLcBGAsYHQ/s1600/Image%2B3_%2BPolestar%2B2%2BEmulator.png" alt="Android Auto image" /&gt;&lt;/a&gt;


      &lt;a href="https://2.bp.blogspot.com/-lSjoQ291WB0/XzGmvaJXcnI/AAAAAAAAPdM/jzYb7GuOkecrwqj5JajFsw-y0tFiUXBrwCLcBGAsYHQ/s1600/Image%2B4_%2BGoogle%2BGeneric%2BEmulator.png" imageanchor="1" &gt;&lt;img id="flexImg" border="0" src="https://2.bp.blogspot.com/-lSjoQ291WB0/XzGmvaJXcnI/AAAAAAAAPdM/jzYb7GuOkecrwqj5JajFsw-y0tFiUXBrwCLcBGAsYHQ/s1600/Image%2B4_%2BGoogle%2BGeneric%2BEmulator.png" alt= "Image of Polestar 2 and Google Generic Automative system" /&gt;&lt;/a&gt;
      &lt;/div&gt; &lt;/center&gt;


      &lt;p id="imgCaption"&gt; Polestar 2 and Google Generic Automotive system images for Android emulator &lt;/p&gt;

      &lt;p&gt;
      We have made updates to the Android Automotive OS &lt;a href="https://designguidelines.withgoogle.com/automotive-os-apps/"&gt;design guidelines&lt;/a&gt; and &lt;a href="https://developer.android.com/training/cars/media/automotive-os"&gt;development documentation&lt;/a&gt; for you to add support for your media apps. We also launched updates to the &lt;a href="https://developer.android.com/training/cars/testing#system-images"&gt;emulator&lt;/a&gt; to include Google Assistant, Google Maps and Google Play, so you can develop and test your apps in an environment that more closely mirrors the software in the car. The &lt;a href="https://developer.android.com/training/cars/testing#system-images"&gt;Polestar 2 system image&lt;/a&gt; enables you to test your app on similar software that is available on the road today. Lastly, the &lt;a href="http://play.google.com/console "&gt;Play Console&lt;/a&gt; now accepts Android Automotive OS APKs, enabling you to simply upload your app for quality review and publishing. These changes allow developers to seamlessly complete the end-to-end development process for Android Automotive OS.
      &lt;/p&gt;

      &lt;center&gt; &lt;a href="https://2.bp.blogspot.com/-Akp0li2-5-k/XzGnzCQCR1I/AAAAAAAAPdY/SDywcW3wJ84MbuJOjyqKAg_fQI4sjhvoACLcBGAsYHQ/s1600/Image%2B5_%2BGoogle%2BPlay%2Bon%2BAndroid%2BAutomotive%2BOS.gif" imageanchor="1" &gt;&lt;img style="width:400px" border="0" src="https://2.bp.blogspot.com/-Akp0li2-5-k/XzGnzCQCR1I/AAAAAAAAPdY/SDywcW3wJ84MbuJOjyqKAg_fQI4sjhvoACLcBGAsYHQ/s1600/Image%2B5_%2BGoogle%2BPlay%2Bon%2BAndroid%2BAutomotive%2BOS.gif" data-original-width="1152" data-original-height="1536" alt= "Image of Google Play features" /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt; Google Play features many media apps today, including Spotify, iHeartRadio, NPR One and more. &lt;/p&gt;


      &lt;p&gt;
      To learn more about how to create an app for Android Automotive OS, look out for updates or post on the &lt;a href="https://groups.google.com/a/android.com/forum/#!forum/automotive-developers"&gt;automotive-developers&lt;/a&gt; Google Group or Stack Overflow using &lt;a href="https://stackoverflow.com/questions/tagged/android-automotive"&gt;android-automotive&lt;/a&gt; tags.
      &lt;/p&gt;
      &lt;p&gt;
      With new app expansion on Android Auto and improved development tools for Android Automotive OS, developers have more opportunity than ever to reach users with app experiences optimized for the car. Head over to &lt;a href="http://developer.android.com/cars"&gt;developer.android.com/cars&lt;/a&gt; to get started!
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Resources&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;em&gt;You can find the entire playlist of #11WeeksOfAndroid video content &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;here&lt;/a&gt;, and learn more about each week &lt;a href="http://d.android.com/android11"&gt;here&lt;/a&gt;. We’ll continue to spotlight new areas each week, so &lt;a href="https://android-developers.googleblog.com/"&gt;keep an eye out&lt;/a&gt; and follow us on &lt;a href="https://twitter.com/androiddev"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;YouTube&lt;/a&gt;. Thanks so much for letting us be a part of this experience with you! &lt;/em&gt;
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=a5lcR463iT8:rnmsUAfkTCs:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=a5lcR463iT8:rnmsUAfkTCs:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=a5lcR463iT8:rnmsUAfkTCs:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/a5lcR463iT8" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4961579410161583472" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4961579410161583472" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/a5lcR463iT8/android-for-cars.html" title="New ways to reach more drivers on Android for cars" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://4.bp.blogspot.com/-vKb1-7G-Hhc/XzGjZ55QbCI/AAAAAAAAPcs/o6EntDHnGbcodAILNSb6RwYYA_9sNrhvwCLcBGAsYHQ/s72-c/Image%2B1_%2BEAP%2BAndroid%2BAuto%2Bapp%2Bexpansion.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/android-for-cars.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-558942384614082543</id>
    <published>2020-08-10T06:00:00.000-07:00</published>
    <updated>2020-08-10T08:58:55.516-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android 11" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android TV" />
    <title type="text">6 New ways to engage with users on Android TV</title>
    <content type="html">&lt;meta name="twitter:image" content="https://3.bp.blogspot.com/-uP9h2z-wzX4/Xy2KNtlOBdI/AAAAAAAAPcQ/nlyMmgAdoUYKeT0dgq_XcprQVd4txeEawCLcBGAsYHQ/s1600/11_weeks_androidtv_blog_header_2.png"&gt;
      &lt;img style="display:none" src=" https://3.bp.blogspot.com/-uP9h2z-wzX4/Xy2KNtlOBdI/AAAAAAAAPcQ/nlyMmgAdoUYKeT0dgq_XcprQVd4txeEawCLcBGAsYHQ/s1600/11_weeks_androidtv_blog_header_2.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Dan Aharon, Product Manager, Android TV&lt;/em&gt;&lt;p&gt;

      &lt;center&gt; &lt;a href="https://3.bp.blogspot.com/-uP9h2z-wzX4/Xy2KNtlOBdI/AAAAAAAAPcQ/nlyMmgAdoUYKeT0dgq_XcprQVd4txeEawCLcBGAsYHQ/s1600/11_weeks_androidtv_blog_header_2.png" imageanchor="1" &gt;&lt;img style="width: 100%;" border="0" src="https://3.bp.blogspot.com/-uP9h2z-wzX4/Xy2KNtlOBdI/AAAAAAAAPcQ/nlyMmgAdoUYKeT0dgq_XcprQVd4txeEawCLcBGAsYHQ/s1600/11_weeks_androidtv_blog_header_2.png" data-original-width="1600" data-original-height="901" alt= Android TV graphic /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p&gt;
      &lt;em&gt;This blog post is part of a weekly series for #11WeeksOfAndroid. This week we’re focusing on Android Beyond Phones. &lt;a href="https://youtu.be/OOV6Ef9zDg0"&gt;So what’s new on Android TV?.&lt;/a&gt;&lt;/em&gt;
      &lt;/p&gt;
      &lt;p&gt;
      With users asking for more TV shows, movies, and apps than ever, the big screen has become a big deal. There are now over 80% more Android TV monthly active devices than a year ago! Working with 7 of the top 10 Smart TV OEMs and over 160 TV Operators has helped give users more options to spruce up their living room with Android TV. But connecting with this many people wouldn’t have been possible without the developer ecosystem building ~7,000 apps for Google Play on Android TV. Together, our users can now watch, play, and do more on their TVs.
      &lt;/p&gt;
      &lt;p&gt;
      Over the past year, we’ve introduced new features to Android TV to make discovering and accessing your content even easier for users. We updated Google Play with a refreshed look and &lt;a href="https://www.blog.google/products/google-fit/be-healthy-at-home/"&gt;new app collections&lt;/a&gt; while making it easier for users to &lt;a href="https://blog.google/products/android-tv/find-new-faves-faster/"&gt;subscribe to apps&lt;/a&gt;. We made additions to the Android TV home screen to highlight &lt;a href="https://blog.google/products/android-tv/find-new-faves-faster/"&gt;trending&lt;/a&gt; and &lt;a href="https://blog.google/products/android-tv/stay-entertained-at-home/"&gt;important&lt;/a&gt; content. And most recently, we released &lt;a href="https://developers.googleblog.com/2020/08/introducing-cast-connect-android-tv.html"&gt;Cast Connect&lt;/a&gt;, so your users can cast their favorite content directly to its native Android TV app.
      &lt;/p&gt;
      &lt;p&gt;
      We’ve heard from you on how else we can help support you. We are excited to announce 6 new ways that are coming soon to help you continue to improve engagement and commerce on the TV:&lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Easier acquisition and monetization&lt;/strong&gt;
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;strong&gt;&lt;a href="https://developer.android.com/training/tv/start/start#instant-experience"&gt;Google Play Instant on TV&lt;/a&gt;: &lt;/strong&gt;Get users into your app, fast. Google Play Instant allows users to try your app instantly, without installing it.&lt;strong&gt; &lt;/strong&gt;
      &lt;/li&gt;
      &lt;/ul&gt;

      &lt;center&gt; &lt;a href="https://4.bp.blogspot.com/-q65dNmjoCHc/Xy2AHKQpc_I/AAAAAAAAPb4/DLTXb78x_eUocNf1tmkVinRCINSYRaj7ACLcBGAsYHQ/s1600/image2.gif" imageanchor="1" &gt;&lt;img style= "width: 500px" border="0" src="https://4.bp.blogspot.com/-q65dNmjoCHc/Xy2AHKQpc_I/AAAAAAAAPb4/DLTXb78x_eUocNf1tmkVinRCINSYRaj7ACLcBGAsYHQ/s1600/image2.gif" data-original-width="960" data-original-height="540" alt= Orbia: tap and relax gif/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt; Let users try your app instantly on Google Play with Google Play Instant on TV&lt;/p&gt;

      &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Android TV Emulator with Play Store support: &lt;/strong&gt;Test your TV projects seamlessly.&lt;strong&gt; &lt;/strong&gt;The Android TV emulator now supports Google Play, so you can&lt;strong&gt; &lt;/strong&gt;test subscriptions faster through the emulator instead of testing on real devices.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;strong&gt;PIN code purchases: &lt;/strong&gt;Make purchases easy.&lt;strong&gt; &lt;/strong&gt;Users will soon be able to purchase content with a PIN code instead of a password on Google Play.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      &lt;strong&gt;More engaging user experiences&lt;/strong&gt;
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;strong&gt;&lt;a href="http://developer.android.com/training/tv/start/onscreen-keyboard"&gt;Gboard TV&lt;/a&gt;: &lt;/strong&gt;Typing on TV made easier. New layouts and features are being added to the Google keyboard on TV, including speech-to-text and predictive typing.
      &lt;/li&gt;
      &lt;/ul&gt;

      &lt;center&gt; &lt;a href="https://3.bp.blogspot.com/-Cc5Srjb745U/Xy2AgOE8KFI/AAAAAAAAPcE/Uu-VcIL8oasXSOYzts6oJ2D7DTiWFgXbACLcBGAsYHQ/s1600/image1.gif" imageanchor="1" &gt;&lt;img style = "width: 500px" border="0" src="https://3.bp.blogspot.com/-Cc5Srjb745U/Xy2AgOE8KFI/AAAAAAAAPcE/Uu-VcIL8oasXSOYzts6oJ2D7DTiWFgXbACLcBGAsYHQ/s1600/image1.gif" data-original-width="960" data-original-height="540" alt = Choose a name for your SHIELD Android TV /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt;Use Gboard TV to bring speech-to-text and predictive typing to your app. &lt;/p&gt;

      &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;&lt;a href="http://developer.android.com/training/tv/games#auto-low-latency-mode"&gt;Auto low latency mode&lt;/a&gt;: &lt;/strong&gt;Make gaming on the TV even smoother&lt;strong&gt;. &lt;/strong&gt;Ask Android TV to disable post-processing, and minimize latency whenever a gaming application is shown fullscreen.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;strong&gt;Leanback Library Improvements: &lt;/strong&gt;Simplify app navigation and compatibility with the latest from the leanback library: &lt;a href="http://developer.android.com/training/tv/start/libraries#leanback-tabs-library"&gt;top tab navigation&lt;/a&gt;, &lt;a href="http://developer.android.com/training/tv/start/libraries#leanback-paging-library"&gt;paging&lt;/a&gt; through media titles and &lt;a href="http://developer.android.com/training/tv/start/layouts#appcompat-themes"&gt;shared code bases&lt;/a&gt; across mobile and TV are all simpler now!
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      This is just the latest for developers. You can find videos, codelabs, and documentation to bring more key features to life on the &lt;a href="https://developer.android.com/11weeksofandroid"&gt;#11weeksofAndroid site&lt;/a&gt; and the &lt;a href="https://developer.android.com/training/tv"&gt;Android TV Developers site&lt;/a&gt;. Catch the “&lt;a href="https://www.youtube.com/watch?v=OOV6Ef9zDg0&amp;t=1s"&gt;What’s new on Android TV&lt;/a&gt;” video for demos and more info about the features in this post.
      &lt;/p&gt;
      &lt;p&gt;
      If you are just getting started, check out our &lt;a href="https://store.askey.com/adt-3.html"&gt;ADT-3 developer kit&lt;/a&gt; and &lt;a href="https://android-developers.googleblog.com/2020/06/android-11-dp-on-android-tv.html"&gt;Android 11 Developer Preview&lt;/a&gt; to start building your TV experience.
      &lt;/p&gt;
      &lt;p&gt;
      We are excited to see what you come up with next.
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=-NtAWA4vj88:Iy7F1xOMka4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=-NtAWA4vj88:Iy7F1xOMka4:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=-NtAWA4vj88:Iy7F1xOMka4:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/-NtAWA4vj88" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/558942384614082543" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/558942384614082543" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/-NtAWA4vj88/6-new-ways-to-engage-with-users-on.html" title="6 New ways to engage with users on Android TV" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-uP9h2z-wzX4/Xy2KNtlOBdI/AAAAAAAAPcQ/nlyMmgAdoUYKeT0dgq_XcprQVd4txeEawCLcBGAsYHQ/s72-c/11_weeks_androidtv_blog_header_2.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/6-new-ways-to-engage-with-users-on.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-381099227911410561</id>
    <published>2020-08-07T06:00:00.000-07:00</published>
    <updated>2020-08-07T06:00:06.301-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Developer" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
    <category scheme="http://www.blogger.com/atom/ns#" term="GooglePlay" />
    <category scheme="http://www.blogger.com/atom/ns#" term="latest" />
    <category scheme="http://www.blogger.com/atom/ns#" term="News" />
    <title type="text">11 Weeks of Android: App distribution and monetization on Google Play</title>
    <content type="html">&lt;meta name="twitter:image" content="https://3.bp.blogspot.com/-ZBZuCvZYyaI/Xyx0PI8dn-I/AAAAAAAAPbk/Fa5idLW6BnQzPpe_os_JTY2si3_XJXFxQCLcBGAsYHQ/s1600/image1.png"&gt;
      &lt;img style="display:none" src="https://3.bp.blogspot.com/-ZBZuCvZYyaI/Xyx0PI8dn-I/AAAAAAAAPbk/Fa5idLW6BnQzPpe_os_JTY2si3_XJXFxQCLcBGAsYHQ/s1600/image1.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Alex Musil, Director of Product Management, Google Play&lt;/em&gt;&lt;/p&gt;

      &lt;a href="https://3.bp.blogspot.com/-ZBZuCvZYyaI/Xyx0PI8dn-I/AAAAAAAAPbk/Fa5idLW6BnQzPpe_os_JTY2si3_XJXFxQCLcBGAsYHQ/s1600/image1.png" imageanchor="1" &gt;&lt;img id="imgFull" style="width: 100%;" border="0" src="https://3.bp.blogspot.com/-ZBZuCvZYyaI/Xyx0PI8dn-I/AAAAAAAAPbk/Fa5idLW6BnQzPpe_os_JTY2si3_XJXFxQCLcBGAsYHQ/s1600/image1.png" data-original-width="1600" data-original-height="901" alt="11 Weeks of Android Week 8 App Distribution &amp; Monetization"  /&gt;&lt;/a&gt;

      &lt;p&gt;
      &lt;em&gt;This blog post is part of a weekly series for &lt;a href="http://d.android.com/11weeksofandroid"&gt;#11WeeksOfAndroid&lt;/a&gt;. Each week we’re diving into a key area of Android so you don’t miss anything. This week, we spotlighted &lt;strong&gt;app distribution and monetization on Google Play&lt;/strong&gt;; here’s a look at what you should know.&lt;/em&gt;
      &lt;/p&gt;
      &lt;p&gt;
      Thanks for joining us for this week of 11 Weeks of Android, where we focused on app distribution and monetization. The developments we announced will enable you to deliver the exciting improvements to the Android platform you’ve been hearing about since week 1.
      &lt;/p&gt;
      &lt;p&gt;
      Google Play partners with developers to deliver amazing digital experiences to billions of Android users. From the start, we’ve committed to providing the tools and insights you need to reach more users and grow your business. This week, we launched even more features — and improved existing ones — to help you continue to maximize your success.
      &lt;/p&gt;
      &lt;h2&gt;&lt;strong&gt;Key takeaways&lt;/strong&gt;&lt;/h2&gt;


      &lt;ol&gt;

      &lt;li&gt;We released several webinars about the new &lt;a href="https://android-developers.googleblog.com/2020/06/introducing-new-google-play-console-beta.html"&gt;Google Play Console beta&lt;/a&gt;. &lt;a href="https://goo.gle/play-console-webinars"&gt;Check out the videos&lt;/a&gt; if you weren’t able to tune in live.

      &lt;li&gt;We shared &lt;a href="https://android-developers.googleblog.com/2020/08/recent-android-app-bundle-improvements.html"&gt;recent improvements&lt;/a&gt; we’ve made to app bundles, as well as our intention to require new apps and games to publish with this format in the second half of 2021.

      &lt;li&gt;Developers can now ask for ratings and reviews from within your app with the new &lt;a href="https://android-developers.googleblog.com/2020/08/leverage-in-app-review-api-for-your.html"&gt;in-app review API&lt;/a&gt;.

      &lt;li&gt;To increase user trust in our billing platform, we made some product updates and reminded you of our policy around &lt;a href="https://android-developers.googleblog.com/2020/04/building-user-trust-through-more.html"&gt;more transparent subscriptions&lt;/a&gt;. We also expanded our feature set to help you better &lt;a href="https://android-developers.googleblog.com/2020/06/new-features-to-acquire-and-retain-subscribers.html"&gt;reach and retain buyers&lt;/a&gt;, and launched &lt;a href="https://android-developers.googleblog.com/2020/06/meet-google-play-billing-library.html"&gt;Play Billing Library 3&lt;/a&gt;, which will be required by mid-2021.

      &lt;li&gt;Google Play Pass launched in &lt;a href="https://blog.google/products/google-play/google-play-pass-new-apps-games-plans-and-availability/"&gt;nine new markets&lt;/a&gt; last month. With an innovative revenue model, participating titles together have earned 2.5x the revenue of Google Play Store-only sales, without diminishing Play Store earnings. You can &lt;a href="https://developer.android.com/google-play/guides/play-pass"&gt;learn more&lt;/a&gt; and &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSdmL0YkKrklqZHTcb6sVZLnSXA7Tf5TELppa0mx7tAn1x3AJA/viewform"&gt;express interest&lt;/a&gt; in joining.
      &lt;/li&gt;
      &lt;/ol&gt;
      &lt;h3&gt;&lt;strong&gt;Google Play Console beta&lt;/strong&gt;&lt;/h3&gt;


      &lt;p&gt;
      Thank you to everyone who has already shared their feedback on the new &lt;a href="https://android-developers.googleblog.com/2020/06/introducing-new-google-play-console-beta.html"&gt;Google Play Console beta&lt;/a&gt;, which launched a few months ago at &lt;a href="http://play.google.com/console"&gt;play.google.com/console&lt;/a&gt;. As we’ve continued to update the beta, we’ve launched a number of key releases including:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;Major performance increases across different browsers, which many of you requested

      &lt;li&gt;New menus and headers on mobile for a better responsive experience

      &lt;li&gt;Features including &lt;a href="https://play.google.com/console/inbox"&gt;Inbox&lt;/a&gt; (your Google Play Console messaging hub) and enhanced &lt;a href="https://play.google.com/console/about/subscriptionreporting/"&gt;subscription retention reports&lt;/a&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      Earlier this week, we hosted three webinars to get you up to speed on what’s new and what’s changed from the classic Play Console. If you weren’t able to tune in live, you can watch the videos on demand below.
      &lt;/p&gt;
      &lt;p&gt;
      If you’re just getting started, join Google Play Console’s lead engineer, Dan White, for a look at new features like Inbox, policy status, app content, and enhanced team management capabilities.
      &lt;/p&gt;
      &lt;iframe id="imgFull" width="560" height="315" src="https://www.youtube.com/embed/aG4Fm4AqBWE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
      &lt;p&gt;
      To help you release with even more confidence, check out this webinar with Google Play UX designer Matt McGriskin, who will walk you through the new testing and publishing workflow.
      &lt;/p&gt;
      &lt;iframe id="imgFull" width="560" height="315" src="https://www.youtube.com/embed/vyReHI1eSSU" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
      &lt;p&gt;
      Finally, if you want to grow your audience, join Google Play engineer Ryan Fanelli for app store optimization best practices and an overview of the new acquisition reports.
      &lt;/p&gt;
      &lt;iframe id="imgFull" width="560" height="315" src="https://www.youtube.com/embed/NgtWIp4ZX6g" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
      &lt;p&gt;
      You can also take our &lt;a href="http://g.co/playacademy/console"&gt;Play Console Play Academy course&lt;/a&gt;. And if you haven’t already, please opt in to &lt;a href="https://android-developers.googleblog.com/2020/08/android-developers.googplay-console-2-step-verification.html"&gt;2-Step Verification&lt;/a&gt; to sign into Google Play Console, which will be required later this year.
      &lt;/p&gt;
      &lt;h3&gt;&lt;strong&gt;Android App Bundle&lt;/strong&gt;&lt;/h3&gt;


      &lt;p&gt;
      We’re glad so many of you are already using the Android App Bundle to release your apps and games. We’re continuing to make app bundles a better publishing format with several recent improvements:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;The recently-launched &lt;a href="https://developer.android.com/guide/app-bundle/asset-delivery"&gt;Play Asset Delivery&lt;/a&gt; brings the benefits of app bundles to games and allows developers to improve the user experience while cutting delivery costs and reducing the size of their game

      &lt;li&gt;You can now shrink resources when building modular apps

      &lt;li&gt;Install-time modules are now automatically fused by default when app bundles are processed into distribution APKs

      &lt;li&gt;Feature-to-feature dependency is now stable in &lt;a href="https://android-developers.googleblog.com/2020/05/android-studio-4.html"&gt;Android Studio 4.0&lt;/a&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      If you haven’t switched to the app bundle yet, we’ve published some &lt;a href="https://medium.com/androiddevelopers/answers-to-common-questions-about-app-signing-by-google-play-b28fef836af0"&gt;FAQs on Play App Signing&lt;/a&gt;—which is required for app bundles—as well as guidance on &lt;a href="https://developer.android.com/guide/app-bundle/test"&gt;how to test your app bundle&lt;/a&gt;. &lt;a href="https://android-developers.googleblog.com/2020/08/recent-android-app-bundle-improvements.html"&gt;Check out our recent blog post&lt;/a&gt; to find out more about the recent improvements we’ve made to developing, testing, and publishing with app bundles.
      &lt;/p&gt;
      &lt;p&gt;
      As we &lt;a href="https://www.youtube.com/watch?v=cMr-b660Esw&amp;t=206s"&gt;announced&lt;/a&gt; as part of the Android 11 Beta launch, we intend to &lt;strong&gt;require new apps to publish with the Android App Bundle on Google Play in the second half of 2021&lt;/strong&gt;. This means that we will also be deprecating APK expansion files (OBBs) and making Play Asset Delivery the standard for publishing games larger than 150MB.
      &lt;/p&gt;
      &lt;h3&gt;&lt;strong&gt;In-app review API&lt;/strong&gt;&lt;/h3&gt;


      &lt;p&gt;
      Because ratings and reviews are such an important touchpoint with your users, many of you asked us to give users the ability to leave a review from within your app. Now, with the new in-app review API, you can do just that. Choose when to prompt users for a review and get  feedback when it’s most valuable. &lt;strong&gt;The &lt;a href="https://developer.android.com/guide/playcore/in-app-review"&gt;in-app review API&lt;/a&gt; is available now in the &lt;a href="https://developer.android.com/guide/playcore"&gt;Play Core Library&lt;/a&gt;&lt;/strong&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      We've also released &lt;a href="https://github.com/android/app-bundle-samples/tree/master/PlayCoreKtx"&gt;a unified sample for Play Core APIs&lt;/a&gt;, which includes in-app reviews as well as on-demand feature modules and in-app updates. Check it out to learn how to use these APIs using our Play Core Kotlin extensions artifact, which makes working with Play Core easier for Kotlin users.
      &lt;/p&gt;
      &lt;h3&gt;&lt;strong&gt;Google Play Commerce&lt;/strong&gt;&lt;/h3&gt;


      &lt;p&gt;
      We’ve made a number of updates to Play Commerce aimed at building user trust through &lt;a href="https://android-developers.googleblog.com/2020/04/building-user-trust-through-more.html"&gt;clearer, easier payment experiences&lt;/a&gt;. The user trust policies we announced in April offer users greater transparency, safer trial experiences, and easier cancellations.
      &lt;/p&gt;
      &lt;p&gt;
      We also launched &lt;a href="https://android-developers.googleblog.com/2020/06/meet-google-play-billing-library.html"&gt;Play Billing Library 3&lt;/a&gt;, which supports cash payments, a better subscription promo code redemption experience, purchase attribution, and more. Billing Play Library 3 will be mandatory for all new apps starting August 2, 2021.
      &lt;/p&gt;
      &lt;p&gt;
      For more information, check out &lt;a href="https://www.youtube.com/watch?v=gnrNckXeSjQ "&gt;this session&lt;/a&gt; with Mrinalini Loew, Group Project Manager for Google Play Commerce.
      &lt;/p&gt;
      &lt;iframe id="imgFull" width="560" height="315" src="https://www.youtube.com/embed/gnrNckXeSjQ" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
      &lt;p&gt;
      We’ve also just kicked off a six-article series on Google Play Billing, which you can follow &lt;a href="https://medium.com/googleplaydev/working-with-google-play-billing-part-1-387677bd632b"&gt;here on Medium&lt;/a&gt;.
      &lt;/p&gt;
      &lt;h3&gt;&lt;strong&gt;Google Play Pass&lt;/strong&gt;&lt;/h3&gt;


      &lt;p&gt;
      Google Play Pass enables developers to earn additional revenue and connect with untapped audiences by offering experiences free of ads and in-app purchases. Since launching last September, Play Pass has added over 200 new titles to the catalog, from puzzles and racing games to utility and kid-friendly apps. We’re also excited to celebrate the world premieres of Super Glitch Dash and Element this week as the newest “Premiering on Play Pass” titles.
      &lt;/p&gt;
      &lt;p&gt;

      &lt;/p&gt;
      &lt;p&gt;
      The expanded catalog has  enabled rich user experiences and provided a sustainable stream of revenue for developers using an innovative revenue payout model. In aggregate, titles on Play Pass earn more than 2.5x the revenue compared to their Play Store-only earnings in the US.
      &lt;/p&gt;
      &lt;p&gt;
      Last month, we made Google Play Pass available in &lt;a href="https://blog.google/products/google-play/google-play-pass-new-apps-games-plans-and-availability/"&gt;nine new markets&lt;/a&gt; and gave users the option to get started with either an annual subscription or the existing monthly plan. &lt;br&gt;&lt;br&gt;&lt;strong&gt;Today, we are announcing that developers with in-app subscriptions can now nominate their titles to join Play Pass.&lt;/strong&gt; If you’re building a great experience that Google Play Pass users would love, you can &lt;a href="https://developer.android.com/google-play/guides/play-pass"&gt;learn more&lt;/a&gt; and &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSdmL0YkKrklqZHTcb6sVZLnSXA7Tf5TELppa0mx7tAn1x3AJA/viewform"&gt;express interest&lt;/a&gt; in participating.
      &lt;/p&gt;
      &lt;h2&gt;&lt;strong&gt;Learning path&lt;/strong&gt;&lt;/h2&gt;


      &lt;p&gt;
      If you’re looking for an easy way to pick up the highlights of this week, check out the &lt;a href="https://developer.android.com/courses/pathways/android-week8-app-distribution-monetization "&gt;app distribution and monetization pathway&lt;/a&gt;. Test your knowledge of key takeaways to earn a limited-edition virtual badge.
      &lt;/p&gt;
      &lt;p&gt;
      Thanks for joining us for 11 Weeks of Android! We hope you find these recent announcements and resources helpful in powering your success on Google Play.
      &lt;/p&gt;
      &lt;h2&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/h2&gt;


      &lt;p&gt;
      &lt;em&gt;You can find the entire playlist of #11WeeksOfAndroid video content &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;here&lt;/a&gt;, and learn more about each week &lt;a href="http://d.android.com/android11"&gt;here&lt;/a&gt;. We’ll continue to spotlight new areas each week, so &lt;a href="https://android-developers.googleblog.com/"&gt;keep an eye out&lt;/a&gt; and follow us on &lt;a href="https://twitter.com/androiddev"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;YouTube&lt;/a&gt;. Thanks so much for letting us be a part of this experience with you!&lt;/em&gt;
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=cDXCZuX7ypg:gd_S7SuVUKw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=cDXCZuX7ypg:gd_S7SuVUKw:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=cDXCZuX7ypg:gd_S7SuVUKw:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/cDXCZuX7ypg" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/381099227911410561" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/381099227911410561" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/cDXCZuX7ypg/11-weeks-of-android-app-distribution.html" title="11 Weeks of Android: App distribution and monetization on Google Play" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-ZBZuCvZYyaI/Xyx0PI8dn-I/AAAAAAAAPbk/Fa5idLW6BnQzPpe_os_JTY2si3_XJXFxQCLcBGAsYHQ/s72-c/image1.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/11-weeks-of-android-app-distribution.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-5769749585800402895</id>
    <published>2020-08-06T10:00:00.005-07:00</published>
    <updated>2020-08-24T13:15:54.499-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#Android11" />
    <category scheme="http://www.blogger.com/atom/ns#" term="android11" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Privacy" />
    <title type="text">Android 11 final Beta update, official release coming soon!</title>
    <content type="html">&lt;meta name="twitter:image" content="https://3.bp.blogspot.com/-Va2TPLzeDbs/XwTTXcFuXFI/AAAAAAAAJGA/hw7OgOxBGcsUQgtPGNiDwf0l85fKLZ4qACLcBGAsYHQ/s1600/Dialscreenshot.png"&gt;
      &lt;img style="display:none" src="https://3.bp.blogspot.com/-Va2TPLzeDbs/XwTTXcFuXFI/AAAAAAAAJGA/hw7OgOxBGcsUQgtPGNiDwf0l85fKLZ4qACLcBGAsYHQ/s1600/Dialscreenshot.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Dave Burke, VP of Engineering&lt;/em&gt;&lt;p&gt;



      &lt;a href="https://1.bp.blogspot.com/-zLMSzndgyIw/XyryJKn_9nI/AAAAAAAAPa0/aL2sPyRqYkEu3Sl7GW-jHEiEeExz5VSFgCLcBGAsYHQ/s1600/Android%2B11%2BGraphic%2B.png" imageanchor="1" &gt;&lt;img style= "width:250px" border="0" src="https://1.bp.blogspot.com/-zLMSzndgyIw/XyryJKn_9nI/AAAAAAAAPa0/aL2sPyRqYkEu3Sl7GW-jHEiEeExz5VSFgCLcBGAsYHQ/s1600/Android%2B11%2BGraphic%2B.png" data-original-width="1318" data-original-height="1322" align="right" alt= android 11 graphic &gt;&lt;/a&gt;

      &lt;p&gt;
      It’s already August and the official Android 11 release is coming very soon! As we put the finishing touches on the new platform, today we’re bringing you Beta 3, our last update in &lt;a href="https://developer.android.com/preview/overview#timeline"&gt;this year’s preview cycle&lt;/a&gt;. For developers, now is the time to make sure your apps are ready, before we bring the official release to consumers.
      &lt;/p&gt;
      &lt;p&gt;
      You can get Beta 3 today on Pixel 2, 3, 3a, 4, and 4a devices. Just &lt;a href="https://www.google.com/android/beta"&gt;enroll here&lt;/a&gt; for an over-the-air update. If you’re already enrolled, you’ll automatically get the update soon. As always, &lt;a href="https://developer.android.com/preview/feedback.html"&gt;let us know your feedback&lt;/a&gt;, and thank you for all of the input you’ve provided so far.
      &lt;/p&gt;
      &lt;p&gt;
      Watch for more information on the official Android 11 release coming soon!
      &lt;/p&gt;
      &lt;h2&gt;&lt;strong&gt;What’s in Beta 3?&lt;/strong&gt;&lt;/h2&gt;


      &lt;p&gt;
      Today’s update includes a release candidate build of Android 11 for Pixel devices and the Android Emulator. We &lt;a href="https://android-developers.googleblog.com/2020/07/android-11-beta-2-and-platform-stability.html"&gt;reached platform stability at Beta 2&lt;/a&gt;, so all app-facing surfaces and behaviors are final, including SDK and NDK APIs, app-facing system behaviors, and restrictions on non-SDK interfaces. With these and the latest fixes and optimizations, Beta 3 gives you everything you need to complete your testing.
      &lt;/p&gt;
      &lt;p&gt;
      As we bring Android 11 to final form, we’re also taking this opportunity to update Android with the Exposure Notifications System in mind. Starting in Beta 3, users will be able to run Exposure Notification apps on Android 11 without needing to turn on the device location setting. This is an exception we’re making for the &lt;a href="https://www.google.com/covid19/exposurenotifications/"&gt;Exposure Notification System&lt;/a&gt; only, given that it has been designed in such a way that apps using it can’t infer device location through Bluetooth scanning. To protect user privacy, all other apps will still be prohibited from performing Bluetooth scanning unless the device location setting is on and the user has granted them location permission. You can read more in our &lt;a href="https://blog.google/inside-google/company-announcements/update-exposure-notifications"&gt;Update on Exposure Notifications&lt;/a&gt; post.
      &lt;/p&gt;
      &lt;h2&gt;&lt;strong&gt;Get your apps ready for Android 11!&lt;/strong&gt;&lt;/h2&gt;


      &lt;p&gt;
      With the official Android 11 release on the way, we’re asking all Android app and game developers to finish your compatibility testing and publish your updates soon. For &lt;strong&gt;SDK, library, tools, and game engine developers&lt;/strong&gt;, it’s even more important to release a compatible version right away, since your downstream app and game developers may be blocked until they receive your updates.
      &lt;/p&gt;


      &lt;div style="margin:0px;padding:0px" class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-AjoXEXif4qA/X0HLZbW1mFI/AAAAAAAAK1E/wDveXbfCJskP3HhystJii6VEm5LjsNprwCNcBGAsYHQ/s0/android11-compat-flow-full.png" style="display: block; padding: 1em 0; text-align: center;"&gt;&lt;img style="width:590px;margin:0px;padding:0px" alt="" border="0" data-original-height="624" data-original-width="831" src="https://1.bp.blogspot.com/-AjoXEXif4qA/X0HLZbW1mFI/AAAAAAAAK1E/wDveXbfCJskP3HhystJii6VEm5LjsNprwCNcBGAsYHQ/s0/android11-compat-flow-full.png"/&gt;&lt;/a&gt;&lt;/div&gt;


      &lt;p&gt;
      As we &lt;a href="https://android-developers.googleblog.com/2020/07/android-11-beta-2-and-platform-stability.html"&gt;covered in depth at Beta 2&lt;/a&gt;, here’s how to test for compatibility with Android 11.
      &lt;/p&gt;



      &lt;p&gt;
      For testing your current app, read &lt;a href="https://developer.android.com/preview/behavior-changes-all"&gt;behavior changes for all apps&lt;/a&gt; to identify areas where platform changes might affect your apps. Here are some of the top changes to watch for (these apply regardless of your app’s targetSdkVersion):
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;strong&gt;One-time permission&lt;/strong&gt; - Users can now grant single-use permission to access location, device microphone and camera. Details &lt;a href="https://developer.android.com/preview/privacy/permissions#one-time"&gt;here&lt;/a&gt;.

      &lt;li&gt;&lt;strong&gt;External storage access&lt;/strong&gt; - Apps can no longer access other apps’ files in external storage. Details &lt;a href="https://developer.android.com/preview/privacy/storage#other-app-specific-dirs"&gt;here&lt;/a&gt;.

      &lt;li&gt;&lt;strong&gt;Scudo hardened allocator&lt;/strong&gt; - Scudo is now the heap memory allocator for native code in apps. Details &lt;a href="https://developer.android.com/preview/behavior-changes-all#scudo"&gt;here&lt;/a&gt;.

      &lt;li&gt;&lt;strong&gt;File descriptor sanitizer&lt;/strong&gt; - Fdsan is now enabled by default to detect file descriptor handling issues for native code in apps. Details &lt;a href="https://developer.android.com/preview/behavior-changes-all#fdsan"&gt;here&lt;/a&gt;.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      Remember to &lt;strong&gt;test the libraries and SDKs in your app&lt;/strong&gt; for compatibility. If you find an issue, try updating to the latest version of the SDK, or reach out to the developer for help.
      &lt;/p&gt;
      &lt;p&gt;
      For more information on compatibility testing and tools, check out the resources we shared for &lt;a href="https://android-developers.googleblog.com/2020/07/11-weeks-of-android-compatibility.html"&gt;Android 11 Compatibility week&lt;/a&gt; and visit the &lt;a href="https://developer.android.com/11"&gt;Android 11 developer site&lt;/a&gt; for technical details.
      &lt;/p&gt;
      &lt;h2&gt;&lt;strong&gt;Explore the new features and APIs&lt;/strong&gt;&lt;/h2&gt;


      &lt;p&gt;
      Android 11 has a ton of new features to build new experiences for users around people, controls, and privacy. When you’re ready to dive in, check out our &lt;a href="https://android-developers.googleblog.com/2020/06/unwrapping-android-11-beta-plus-more.html"&gt;#Android11 Beta post&lt;/a&gt; for a recap of all of the developer features, and you can also visit the &lt;a href="https://developer.android.com/android11"&gt;Beta Launch page&lt;/a&gt; to see talks from the Android team on what’s new in their areas. For complete details on Android 11 features and APIs, visit the &lt;a href="https://developer.android.com/11"&gt;Android 11 developer site&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      Also make sure to try the Android 11 features in Android Studio that can improve your productivity and workflow, like &lt;a href="https://developer.android.com/preview/features#incremental"&gt;ADB incremental&lt;/a&gt; for faster installs of large APKs, and additional nullability annotations on platform APIs. You can give these a try by &lt;a href="https://developer.android.com/studio/preview"&gt;downloading&lt;/a&gt; the latest Android Studio Beta or Canary version. Instructions for configuring Android Studio for Android 11 are &lt;a href="https://developer.android.com/preview/setup-sdk"&gt;here&lt;/a&gt;.
      &lt;/p&gt;
      &lt;h2&gt;&lt;strong&gt;How do I get Beta 3?&lt;/strong&gt;&lt;/h2&gt;


      &lt;p&gt;
      It’s easy! Just &lt;a href="https://www.google.com/android/beta"&gt;enroll here&lt;/a&gt; to get the Beta 3 update over-the-air on your Pixel 2, 3, 3a, 4, or 4a device. If you're already enrolled, you'll receive the update soon and no action is needed on your part. Alternatively, you can give &lt;a href="https://flash.android.com/welcome?continue=%2Fpreview%2Fbeta2"&gt;Android Flash Tool&lt;/a&gt; a try for easy on-demand updates, and if you’d rather flash manually, &lt;a href="https://developer.android.com/preview/download"&gt;downloadable system images&lt;/a&gt; are also available. If you don't have a Pixel device, you can use the Android Emulator in Android Studio or try a GSI image to run Android 11 on supported Treble-compliant devices.
      &lt;/p&gt;
      &lt;h2&gt;&lt;strong&gt;What’s next? &lt;/strong&gt;&lt;/h2&gt;


      &lt;p&gt;
      Stay tuned for the official Android 11 launch coming &lt;a href="https://developer.android.com/preview/overview#timeline"&gt;in the weeks ahead&lt;/a&gt;! In the meantime, we recommend finishing your testing and publishing your compatible updates as soon as possible. Feel free to &lt;a href="https://developer.android.com/preview/feedback"&gt;share your feedback&lt;/a&gt; using our hotlists for filing &lt;a href="https://issuetracker.google.com/issues/new?component=190602&amp;template=1226573"&gt;platform issues&lt;/a&gt; (including privacy and behavior changes), &lt;a href="https://issuetracker.google.com/issues/new?component=190602&amp;template=1227376"&gt;app compatibility issues&lt;/a&gt;, and &lt;a href="https://issuetracker.google.com/issues/new?component=190602&amp;template=1227583"&gt;third-party SDK issues&lt;/a&gt;. You've given us great feedback so far -- thank you again!
      &lt;/p&gt;
      &lt;p&gt;
      &lt;em&gt;A huge thank you to our developer community for your participation in our recent &lt;a href="https://www.reddit.com/r/androiddev/comments/hk3hrq/were_on_the_android_engineering_team_ask_us/"&gt;Android 11 AMA &lt;/a&gt;&lt;/em&gt;and &lt;em&gt;&lt;a href="https://www.reddit.com/r/androiddev/comments/hwiffd/were_on_the_engineering_team_for_android_studio/"&gt;Android Studio AMA&lt;/a&gt; on &lt;a href="https://www.reddit.com/r/androiddev/"&gt;r/anddroiddev&lt;/a&gt;! It’s great to hear what’s important to you and we hope we were able to help!&lt;/em&gt;
      &lt;/p&gt;

      &lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=y7Lagre5HvU:z7miJidm1jQ:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=y7Lagre5HvU:z7miJidm1jQ:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=y7Lagre5HvU:z7miJidm1jQ:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/y7Lagre5HvU" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5769749585800402895" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5769749585800402895" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/y7Lagre5HvU/android-11-final-beta-update.html" title="Android 11 final Beta update, official release coming soon!" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-Va2TPLzeDbs/XwTTXcFuXFI/AAAAAAAAJGA/hw7OgOxBGcsUQgtPGNiDwf0l85fKLZ4qACLcBGAsYHQ/s72-c/Dialscreenshot.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/android-11-final-beta-update.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-5110715654606143022</id>
    <published>2020-08-05T06:00:00.000-07:00</published>
    <updated>2020-08-05T06:00:07.818-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="android developers" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play" />
    <category scheme="http://www.blogger.com/atom/ns#" term="latest" />
    <title type="text">Leverage the In-App Review API for your Google Play reviews</title>
    <content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/--nhQBfqIbWU/XymyMRgZYeI/AAAAAAAAPZ0/hfN_M3Y6aHY4nz1qFm-0KguS5r1A9homwCLcBGAsYHQ/s1600/twittter_In_App_Review.jpg"&gt;
      &lt;img style="display:none" src="https://1.bp.blogspot.com/--nhQBfqIbWU/XymyMRgZYeI/AAAAAAAAPZ0/hfN_M3Y6aHY4nz1qFm-0KguS5r1A9homwCLcBGAsYHQ/s1600/twittter_In_App_Review.jpg"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Scott Lin, Product Manager, Google Play&lt;/em&gt;&lt;p&gt;

      &lt;a href="https://1.bp.blogspot.com/--nhQBfqIbWU/XymyMRgZYeI/AAAAAAAAPZ0/hfN_M3Y6aHY4nz1qFm-0KguS5r1A9homwCLcBGAsYHQ/s1600/twittter_In_App_Review.jpg" imageanchor="1" &gt;&lt;img id="imgFull" style="width:100%;" border="0" src="https://1.bp.blogspot.com/--nhQBfqIbWU/XymyMRgZYeI/AAAAAAAAPZ0/hfN_M3Y6aHY4nz1qFm-0KguS5r1A9homwCLcBGAsYHQ/s1600/twittter_In_App_Review.jpg" data-original-width="1600" data-original-height="800" alt="illustration of girl with starred review"/&gt;&lt;/a&gt;

      &lt;p&gt;
      For many developers, ratings and reviews are an important touchpoint with users. Millions of reviews are left on Google Play every day, offering developers valuable insight on what users love and what they want improved. Users also rely on ratings and reviews to help them decide which apps and games are right for them.
      &lt;/p&gt;
      &lt;p&gt;
      Over the past two years, Google Play has launched various features to make it easier for users to leave reviews, as well as for developers to interact and respond to them. For example, users are now able to leave reviews from the Google Play homepage. We also launched the Reviews page under My Apps &amp; Games, which gives users a centralized place to leave and manage reviews.
      &lt;/p&gt;
      &lt;p&gt;
      But one of the most requested features from developers has been to give users the ability to leave a review from within the app, without heading back to the App Details page. So today, we’re pleased to launch the new &lt;a href="https://developer.android.com/guide/playcore/in-app-review"&gt;in-app review API&lt;/a&gt; to address that need.
      &lt;/p&gt;
      &lt;h2&gt;Ask for a review at just the right time&lt;/h2&gt;


      &lt;p&gt;
      The API lets developers choose when to prompt users to write reviews within the app experience. We believe the best time to prompt your users is when they have used the app enough to be able to provide thorough and useful feedback. However, be sure not to interrupt them in the middle of a task or when their attention is needed, as the review flow will take over the action on the screen.
      &lt;/p&gt;
      &lt;a href="https://4.bp.blogspot.com/-MSM5VeZfLAU/Xym0OR_huqI/AAAAAAAAPaA/2u9CsMLiQoE4cx3fmQPf0coIH0TuTWiSwCLcBGAsYHQ/s1600/image2.jpg" imageanchor="1" &gt;&lt;img id="imgFull" border="0" src="https://4.bp.blogspot.com/-MSM5VeZfLAU/Xym0OR_huqI/AAAAAAAAPaA/2u9CsMLiQoE4cx3fmQPf0coIH0TuTWiSwCLcBGAsYHQ/s1600/image2.jpg" data-original-width="1600" data-original-height="1398" alt="User ratings for app image"/&gt;&lt;/a&gt;

      &lt;p id="imgCaption"&gt;
      &lt;em&gt;Users can now give ratings and reviews within your app.&lt;/em&gt;
      &lt;/p&gt;
      &lt;p&gt;
      The in-app review API supports both public and private reviews for when your app is in beta.
      &lt;/p&gt;
      &lt;p&gt;
      The review API is part of the &lt;a href="https://developer.android.com/guide/playcore"&gt;Play Core Library&lt;/a&gt;, which is distributed for &lt;a href="https://developer.android.com/guide/playcore/in-app-review/kotlin-java"&gt;Java/Kotlin&lt;/a&gt;, &lt;a href="https://developer.android.com/guide/playcore/in-app-review/native"&gt;C++&lt;/a&gt;, and &lt;a href="https://developer.android.com/guide/playcore/in-app-review/unity"&gt;Unity&lt;/a&gt;. It offers a lightweight API that allows apps to request a review and launch the review flow without users leaving the app.
      &lt;/p&gt;
      &lt;p&gt;
      The integration consists of four main steps:
      &lt;/p&gt;
      &lt;ol&gt;

      &lt;li&gt;Define the conditions and best place to ask for a review

      &lt;li&gt;Request the review flow to the API

      &lt;li&gt;Launch the review at an appropriate moment

      &lt;li&gt;Continue the flow after the review is completed
      &lt;/li&gt;
      &lt;/ol&gt;
      &lt;p&gt;
      Whether the user leaves a review or not, the app must continue without altering the user flow. The in-app review API is designed to be seamless for users.
      &lt;/p&gt;
      &lt;p&gt;
      You can see the in-app review API in action in our &lt;a href="https://github.com/android/app-bundle-samples/tree/master/PlayCoreKtx"&gt;newly published sample&lt;/a&gt;, which showcases calling the API through the Play Core Kotlin extensions (KTX) library, alongside other Play Core APIs such as in-app updates and on-demand feature modules installation.
      &lt;/p&gt;
      &lt;h2&gt;Gathering the best feedback&lt;/h2&gt;


      &lt;p&gt;
      The API will make it much easier for users to share valuable insights about your app.
      &lt;/p&gt;
      &lt;p&gt;
      Here’s what some of our partners said during the early-access program:
      &lt;/p&gt;

      &lt;div&gt;
      &lt;a href="https://4.bp.blogspot.com/-srSNDWYJRuE/Xym2KX0I27I/AAAAAAAAPag/yixV_ynkC88Z7ZqQb6DFDn9G3PafWUUggCLcBGAsYHQ/s1600/image3.png" imageanchor="1" &gt;&lt;img id="floatLeft" style="width:20%; padding:0 1em 1em 0;" border="0" src="https://4.bp.blogspot.com/-srSNDWYJRuE/Xym2KX0I27I/AAAAAAAAPag/yixV_ynkC88Z7ZqQb6DFDn9G3PafWUUggCLcBGAsYHQ/s1600/image3.png" data-original-width="360" data-original-height="360" alt="Calm logo"/&gt;&lt;/a&gt;
      &lt;blockquote&gt;&lt;em&gt;“It was quick and easy to integrate with the new In-App Review API changes, and we saw an almost immediate increase in positive ratings and reviews after releasing those changes.” &lt;/em&gt;
      &lt;p&gt;- Chris Scoville, Engineering Manager at Calm&lt;/p&gt;
      &lt;/blockquote&gt;
      &lt;/div&gt;
      &lt;br&gt;&lt;/br&gt;

      &lt;div&gt;
      &lt;a href="https://1.bp.blogspot.com/-1P4OD29MUM8/Xym0oHudNqI/AAAAAAAAPaI/44il2x0yd8g1VF7gs85JV53Zv_WYthCFgCLcBGAsYHQ/s1600/image1.png" imageanchor="1" &gt;&lt;img id="floatLeft" style="width:20%; padding:0 1em 1em 0;" border="0" src="https://1.bp.blogspot.com/-1P4OD29MUM8/Xym0oHudNqI/AAAAAAAAPaI/44il2x0yd8g1VF7gs85JV53Zv_WYthCFgCLcBGAsYHQ/s1600/image1.png" data-original-width="360" data-original-height="360" alt="Duolingo logo"/&gt;&lt;/a&gt;
      &lt;blockquote&gt;&lt;em&gt;“The in-app review API allows our customers to rate without leaving the application. Our 5-star ratings since implementing the API has increased by 4x.”&lt;/em&gt; &lt;p&gt;- Nathaniel Khuana, Technical Architect, Tokopedia&lt;/p&gt;
      &lt;/blockquote&gt;
      &lt;/div&gt;
      &lt;/br&gt;&lt;/br&gt;

      &lt;div&gt;
      &lt;a href="https://3.bp.blogspot.com/-TA6LABKTEf8/Xym1ZV59PSI/AAAAAAAAPaU/j4e-Ed-setco9KUixmzqtTupd-A2d2o2wCLcBGAsYHQ/s1600/image4.png" imageanchor="1" &gt;&lt;img id="floatLeft" style="width:20%; padding:0 1em 1em 0;" border="0" src="https://3.bp.blogspot.com/-TA6LABKTEf8/Xym1ZV59PSI/AAAAAAAAPaU/j4e-Ed-setco9KUixmzqtTupd-A2d2o2wCLcBGAsYHQ/s1600/image4.png" data-original-width="360" data-original-height="360" alt="Traveloka logo"/&gt;&lt;/a&gt;
      &lt;blockquote&gt;&lt;em&gt;"We saw our all-time highest rating just a week after we implemented in-app reviews."&lt;/em&gt;
      &lt;/p&gt;
      &lt;p&gt;
      - Welly Chandra, Associate Product Manager at Traveloka
      &lt;/p&gt;
      &lt;/blockquote&gt;
      &lt;/div&gt;
      &lt;/br&gt;&lt;/br&gt;
      &lt;br&gt;&lt;/br&gt;
      &lt;br&gt;&lt;/br&gt;
      &lt;p&gt;
      Because the best feedback is honest and unbiased, we designed the API to be self-contained and not require additional prompting other than to invoke the API. We’ve also placed cap limits to ensure that users won’t be prompted excessively should they choose not to leave a review.
      &lt;/p&gt;
      &lt;p&gt;
      We encourage developers to explore integrating the in-app review API as it will unlock the type of feedback that only your dedicated users can provide. And remember, once you receive those reviews, there are a multitude of &lt;a href="https://play.google.com/console/about/ratings/"&gt;ratings&lt;/a&gt; and &lt;a href="https://play.google.com/console/about/reviews/"&gt;reviews&lt;/a&gt; tools available to you on the Google Play Console to help you analyze the reviews and respond to users' concerns directly.
      &lt;/p&gt;





      &lt;center&gt;
      &lt;p&gt;
      How useful did you find this blog post?
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=PlayinappreviewAPI-08/20" style="color: gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=PlayinappreviewAPI-08/20" style="color: gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=PlayinappreviewAPI-08/20" style="color: gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;erelease-form-repository@google.comntry.2056663615&amp;entry.646747778=PlayinappreviewAPI-08/20" style="color: gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=PlayinappreviewAPI-08/20" style="color: gold;"&gt;★&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://4.bp.blogspot.com/-1LBva3U1LCI/W6kL2pl9ZYI/AAAAAAAAFys/grkBZRKkAWE1eLAh6DPffThJ7gP__SREACLcBGAs/s1600/play_logo_16_9%2B%25285%2529.png" imageanchor="1" &gt;&lt;img id="imgHalf" style="width:40%;" border="0" src="https://4.bp.blogspot.com/-1LBva3U1LCI/W6kL2pl9ZYI/AAAAAAAAFys/grkBZRKkAWE1eLAh6DPffThJ7gP__SREACLcBGAs/s1600/play_logo_16_9%2B%25285%2529.png" data-original-width="499" data-original-height="281" /&gt;&lt;/a&gt;
      &lt;/p&gt;
      &lt;/center&gt;
      &lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=yJp3-B6bOEQ:MdR-P0d6sz8:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=yJp3-B6bOEQ:MdR-P0d6sz8:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=yJp3-B6bOEQ:MdR-P0d6sz8:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/yJp3-B6bOEQ" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5110715654606143022" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5110715654606143022" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/yJp3-B6bOEQ/in-app-review-api.html" title="Leverage the In-App Review API for your Google Play reviews" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/--nhQBfqIbWU/XymyMRgZYeI/AAAAAAAAPZ0/hfN_M3Y6aHY4nz1qFm-0KguS5r1A9homwCLcBGAsYHQ/s72-c/twittter_In_App_Review.jpg" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/in-app-review-api.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-181688006833617487</id>
    <published>2020-08-04T06:00:00.000-07:00</published>
    <updated>2020-08-04T11:49:34.870-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="android developers" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Play Console" />
    <title type="text">Recent Android App Bundle improvements and timeline for new apps on Google Play</title>
    <content type="html">&lt;meta name="twitter:image" content="https://2.bp.blogspot.com/-CrYLg_oRtrU/Xylish5hxyI/AAAAAAAAPZg/feBSJWyKm0IzTcEroCB8bS9i4ZbMXnPpQCLcBGAsYHQ/s1600/AD%2BBLOG_Easy%2Bmodular%2Bdevelopment_v2.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Dom Elliott and Yafit Becher, Product Managers at Google Play&lt;/em&gt;&lt;/p&gt;
      &lt;img style="display:none" src="https://2.bp.blogspot.com/-CrYLg_oRtrU/Xylish5hxyI/AAAAAAAAPZg/feBSJWyKm0IzTcEroCB8bS9i4ZbMXnPpQCLcBGAsYHQ/s1600/AD%2BBLOG_Easy%2Bmodular%2Bdevelopment_v2.png"&gt;

      &lt;center&gt; &lt;a href="https://2.bp.blogspot.com/-CrYLg_oRtrU/Xylish5hxyI/AAAAAAAAPZg/feBSJWyKm0IzTcEroCB8bS9i4ZbMXnPpQCLcBGAsYHQ/s1600/AD%2BBLOG_Easy%2Bmodular%2Bdevelopment_v2.png" imageanchor="1" &gt;&lt;img style="width: 650px" border="0" src="https://2.bp.blogspot.com/-CrYLg_oRtrU/Xylish5hxyI/AAAAAAAAPZg/feBSJWyKm0IzTcEroCB8bS9i4ZbMXnPpQCLcBGAsYHQ/s1600/AD%2BBLOG_Easy%2Bmodular%2Bdevelopment_v2.png" data-original-width="1600" data-original-height="477" alt= Google Play graphic /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;a href="https://3.bp.blogspot.com/-cNIEo80Tc0M/Xyhu9KjXeiI/AAAAAAAAPYw/QzPNDDIGHMYkXGuVnfek45u_qg1v4IlMwCLcBGAsYHQ/s1600/android%2Bapp%2Bbundle%2Blogo%2Bhorizontal_RGB.png" imageanchor="1" &gt;&lt;img style= "width: 350px" border="0" src="https://3.bp.blogspot.com/-cNIEo80Tc0M/Xyhu9KjXeiI/AAAAAAAAPYw/QzPNDDIGHMYkXGuVnfek45u_qg1v4IlMwCLcBGAsYHQ/s1600/android%2Bapp%2Bbundle%2Blogo%2Bhorizontal_RGB.png" data-original-width="1600" data-original-height="566"align="right" alt= Android bundle graphic /&gt;&lt;/a&gt;

      &lt;p&gt;
      In a little over two years, the &lt;a href="https://developer.android.com/platform/technology/app-bundle"&gt;Android App Bundle&lt;/a&gt; has become the gold standard for publishing on Google Play. Over 600,000 apps and games currently use the app bundle in production, representing over 40% of all releases on Google Play. App bundles are used by 50% of the top developers on Google Play — such as Adobe, which used app bundles to &lt;a href="https://developer.android.com/stories/apps/adobe-app-bundle"&gt;reduce the size of Adobe Acrobat Reader by 20%&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      We recently launched &lt;a href="https://developer.android.com/guide/app-bundle/asset-delivery"&gt;Play Asset Delivery&lt;/a&gt; (PAD), bringing the great benefits of app bundles to games and allowing developers to improve the user experience while cutting delivery costs and reducing the size of their games. &lt;a href="https://developer.android.com/stories/games/gameloft-pad"&gt;Gameloft&lt;/a&gt; used PAD to improve user retention, resulting in 10% more new players than with their previous asset delivery system.
      &lt;/p&gt;
      &lt;p&gt;
      For those of you making the switch, we’ve published some &lt;a href="https://medium.com/androiddevelopers/answers-to-common-questions-about-app-signing-by-google-play-b28fef836af0"&gt;FAQs on Play App Signing&lt;/a&gt; — required for app bundles — as well as guidance on &lt;a href="https://developer.android.com/guide/app-bundle/test"&gt;how to test your app bundle&lt;/a&gt;. Read on to find out more about the recent improvements we’ve made to developing, testing, and publishing with app bundles.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Play Feature Delivery&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      The app bundle enables &lt;a href="https://developer.android.com/guide/app-bundle/dynamic-delivery#modularize"&gt;modular app development&lt;/a&gt; using dynamic feature modules with a range of customizable delivery options. It’s now possible to &lt;strong&gt;shrink resources &lt;/strong&gt;in dynamic feature modules as well as your base module when building modular apps. This long-requested feature can result in significantly greater size reduction of your apps. The feature is available from Android Studio 4.2, currently in Canary, under the experimental flag: &lt;code&gt;android.experimental.enableNewResourceShrinker=true&lt;/code&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      By default, &lt;strong&gt;install time modules are now automatically fused&lt;/strong&gt; when app bundles are processed into distribution APKs (starting in bundletool 1.0.0). This means you can separate your app into modules during development while reducing the number of APKs distributed to each device, which will speed up your app’s download and installation. You can choose to set a “removable flag” for install-time modules to prevent fusing, which allows you to uninstall a module on the device after it’s been used. It’s a good idea to remove large modules once they’re no longer needed — reducing the size of your app can make it less likely to be uninstalled.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Feature-to-feature dependency&lt;/strong&gt; is now stable in &lt;a href="https://android-developers.googleblog.com/2020/05/android-studio-4.html"&gt;Android Studio 4.0&lt;/a&gt;, so you can specify that a dynamic feature module depends on another feature module. Being able to define this relationship ensures that your app has the required modules to unlock additional functionality, resulting in fewer requests and easier modularization of your app.
      &lt;/p&gt;
      &lt;p&gt;
      We know that it is critical for you to &lt;strong&gt;test your app delivery&lt;/strong&gt; and get the same experience as your users would in the wild. &lt;a href="https://support.google.com/googleplay/android-developer/answer/9303479?hl=en"&gt;Internal app sharing&lt;/a&gt; lets you upload test builds to Play and get a sharable link to download your app. When downloading your app from this link, you get an identical binary as would be served to users once your app is released to Play.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Play Asset Delivery&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      Play Asset Delivery extends the app bundle format, allowing you to package &lt;strong&gt;up to 2GB of game assets&lt;/strong&gt; alongside the binary in a single artifact published on Google Play. PAD lets games larger than 150MB replace the legacy expansion files (OBBs) and rely on Play to keep assets up to date, just like you do with your game binary. It also takes care of compression and delta patching, minimizing the size of the download and getting your game to update faster.
      &lt;/p&gt;

      &lt;center&gt; &lt;a href="https://4.bp.blogspot.com/-P6faKNdBFNc/XyljSFTlFEI/AAAAAAAAPZo/AouepxZ0xFwORt5NxNAMdsLryC3ZyOMZwCLcBGAsYHQ/s1600/Android%2BApp%2BBundle%2B.png" imageanchor="1" &gt;&lt;img style = "width: 500px" border="0" src="https://4.bp.blogspot.com/-P6faKNdBFNc/XyljSFTlFEI/AAAAAAAAPZo/AouepxZ0xFwORt5NxNAMdsLryC3ZyOMZwCLcBGAsYHQ/s1600/Android%2BApp%2BBundle%2B.png" data-original-width="1600" data-original-height="1150" alt= Google Play graphic /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;center&gt; &lt;p style= "font-size: 12px"&gt; &lt;id="imgCaption"&gt; The contents of an Android App Bundle with one base module, two dynamic feature modules, and two asset packs.&lt;/p&gt; &lt;/center&gt;

      &lt;p&gt;
      You can then choose one of three delivery modes, depending on when you want those assets to be served to users: &lt;strong&gt;install-time&lt;/strong&gt;, as part of the initial game installation; &lt;strong&gt;on-demand&lt;/strong&gt;, so assets will be delivered only upon request; or &lt;strong&gt;fast-follow&lt;/strong&gt;, which will trigger an additional download immediately after the game installation completes, independently of the user opening the app. Fast-follow lets you minimize time to first interaction while getting assets to users as quickly as possible.
      &lt;/p&gt;
      &lt;p&gt;
      In the coming months, we’ll release &lt;strong&gt;texture compression format targeting&lt;/strong&gt;, which will allow you to include multiple texture compression format assets and rely on us to deliver them to the most advanced format supported by the requesting device.
      &lt;/p&gt;
      &lt;p&gt;
      Learn more in this &lt;a href="https://www.youtube.com/watch?v=WW9GevpEo1s&amp;t=2s"&gt;session&lt;/a&gt; from our Game Developer Summit and check out the &lt;a href="https://developer.android.com/guide/app-bundle/asset-delivery"&gt;documentation&lt;/a&gt; to see integration options for Unity, Unreal Engine, Gradle, Native, and Java support.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Google Play’s best-in-class distribution&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      Google Play delivers billions of apps, games, updates, and dynamic feature modules every month to Android users on thousands of device types around the world. We invest a lot of time and energy into making sure your content is delivered to users as seamlessly and efficiently as possible while hiding the complexity from the user experience.
      &lt;/p&gt;
      &lt;p&gt;
      For example, we recently &lt;strong&gt;upgraded the download service&lt;/strong&gt; Google Play uses. This change alone has sped up the installation of app bundle apps by an average of 6% and increased install success globally by 1%, resulting in millions more new installs for developers every week.
      &lt;/p&gt;
      &lt;p&gt;
      We’re also rolling out multiple &lt;strong&gt;improvements to dynamic feature module distribution&lt;/strong&gt;, such as allowing them to be installed when your app is &lt;a href="https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo#IMPORTANCE_VISIBLE"&gt;VISIBLE&lt;/a&gt; or higher, lowering the free storage threshold that triggers insufficient storage errors, and removing user confirmation for large dynamic features over Wi-Fi. This alone has resulted in 12% more successful deferred module downloads. Apps using dynamic features will benefit from these changes automatically.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Requirement for new apps in the second half of 2021&lt;/strong&gt;
      &lt;/p&gt;
      &lt;p&gt;
      We’re continuing to make app bundles a better publishing format than APKs on Google Play. For example, the new &lt;strong&gt;&lt;a href="https://play.google.com/console/about/app-bundle-explorer/"&gt;app bundle explorer&lt;/a&gt;&lt;/strong&gt; lets you manage all your app bundles in one place. You can download and attest the exact APKs that Play generates for delivery, as well as a signed, universal APK (a single, installable APK that includes all code and resources needed for supported devices) that you can use on other distribution channels.
      &lt;/p&gt;
      &lt;p&gt;
      We’ve been thrilled to see the app bundle embraced by the app and game ecosystem, and we’re excited to continue to improve it. As we &lt;a href="https://www.youtube.com/watch?v=cMr-b660Esw"&gt;announced&lt;/a&gt; in the Android 11 event, to help us invest in future improvements, we intend to &lt;strong&gt;require new apps and games to publish with the &lt;a href="https://developer.android.com/platform/technology/app-bundle"&gt;Android App Bundle&lt;/a&gt; on Google Play in the second half of 2021&lt;/strong&gt;. In the same timeframe, we will deprecate legacy APK expansion files (OBBs), making &lt;a href="https://developer.android.com/guide/app-bundle/asset-delivery"&gt;Play Asset Delivery&lt;/a&gt; the standard option for publishing games over 150MB. We will also require instant experiences to be published via &lt;a href="https://developer.android.com/topic/google-play-instant/getting-started/instant-enabled-app-bundle"&gt;instant-enabled app bundles&lt;/a&gt;, deprecating the legacy instant app ZIP format.
      &lt;/p&gt;
      &lt;p&gt;
      Thank you to everyone who has already made the switch to the Android App Bundle, and a special thanks to those of you who’ve shared your feedback. Your comments help us shape the future of app bundles and improve the technology for everyone, so please continue to let us know what you think.
      &lt;/p&gt;
      &lt;br&gt;

      &lt;center&gt;
      &lt;p&gt;
      How useful did you find this blog post?
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href=" " style="color: gold;"&gt;★&lt;/a&gt; &lt;a href=" " style="color: gold;"&gt;★&lt;/a&gt; &lt;a href=" " style="color: gold;"&gt;★&lt;/a&gt; &lt;a href=" " style="color: gold;"&gt;★&lt;/a&gt; &lt;a href=" " style="color: gold;"&gt;★&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://4.bp.blogspot.com/-1LBva3U1LCI/W6kL2pl9ZYI/AAAAAAAAFys/grkBZRKkAWE1eLAh6DPffThJ7gP__SREACLcBGAs/s1600/play_logo_16_9%2B%25285%2529.png" imageanchor="1" &gt;&lt;img id="imgHalf" style="width:40%;" border="0" src="https://4.bp.blogspot.com/-1LBva3U1LCI/W6kL2pl9ZYI/AAAAAAAAFys/grkBZRKkAWE1eLAh6DPffThJ7gP__SREACLcBGAs/s1600/play_logo_16_9%2B%25285%2529.png" data-original-width="499" data-original-height="281" /&gt;&lt;/a&gt;
      &lt;/p&gt;
      &lt;/center&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=o5r3Fxrh4j4:SurehLBjoKc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=o5r3Fxrh4j4:SurehLBjoKc:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=o5r3Fxrh4j4:SurehLBjoKc:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/o5r3Fxrh4j4" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/181688006833617487" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/181688006833617487" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/o5r3Fxrh4j4/recent-android-app-bundle-improvements.html" title="Recent Android App Bundle improvements and timeline for new apps on Google Play" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-CrYLg_oRtrU/Xylish5hxyI/AAAAAAAAPZg/feBSJWyKm0IzTcEroCB8bS9i4ZbMXnPpQCLcBGAsYHQ/s72-c/AD%2BBLOG_Easy%2Bmodular%2Bdevelopment_v2.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/recent-android-app-bundle-improvements.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-6611784671648681417</id>
    <published>2020-08-03T08:21:00.000-07:00</published>
    <updated>2020-08-03T11:31:43.673-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Developers Best Practices" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play Console" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Play Console" />
    <category scheme="http://www.blogger.com/atom/ns#" term="safety" />
    <title type="text">Protecting your Google Play Console account with 2-Step Verification</title>
    <content type="html">&lt;meta name="twitter:image" content="https://2.bp.blogspot.com/-7TUUb_vrnX0/XygzqbjYeiI/AAAAAAAAPYk/VsCPDKONHLwbkd3O6ljQUDbCWCOhv4r-gCLcBGAsYHQ/s1600/2fa.png"&gt;
      &lt;img style="display:none" src="https://2.bp.blogspot.com/-7TUUb_vrnX0/XygzqbjYeiI/AAAAAAAAPYk/VsCPDKONHLwbkd3O6ljQUDbCWCOhv4r-gCLcBGAsYHQ/s1600/2fa.png"&gt;
      &lt;img style="display:none"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Tom Grinsted, Product Manager, Google Play Console &lt;/em&gt;&lt;p&gt;


      &lt;p&gt;
      Google Play Console has something for everyone, from QAs and PMs to engineers and marketing managers. The &lt;a href="https://android-developers.googleblog.com/2020/06/introducing-new-google-play-console-beta.html"&gt;new Google Play Console beta&lt;/a&gt;, available now at &lt;a href="https://play.google.com/console"&gt;play.google.com/console&lt;/a&gt;, offers customized, secure access to everyone on your team. For a closer look at some of its new features and workflows, tune in to this week’s &lt;a href="https://goo.gle/play-console-webinars"&gt;series of live webinars&lt;/a&gt;, which will also be available on demand. &lt;a href="https://play.google.com/console/about/teamandusermanagement/"&gt; &lt;/P&gt;

      &lt;p&gt; Granting your team members safe access to specific features in your developer account&lt;/a&gt; is one of the best ways to increase the value of our tools for your organization. We want to make sure that your developer account is as safe as possible so you feel confident when granting access. A key way to do that is to make sure that every person who has access to your account signs in using secure methods that follow best practices. That’s why, towards the end of this year, we’re going to start requiring users of Google Play Console to sign in using &lt;strong&gt;&lt;a href="https://www.google.com/landing/2step/#tab=why-you-need-it"&gt;Google's 2-Step Verification&lt;/a&gt;&lt;/strong&gt;.&lt;P&gt;


      &lt;center&gt; &lt;a href="https://4.bp.blogspot.com/--mokNZ-heNA/Xygm9YcQ1gI/AAAAAAAAPYY/-WosPHA24aEUZRdG28TZhYkdoDatU1haACLcBGAsYHQ/s1600/Play%2BConsole%2BImage.png" imageanchor="1" &gt;&lt;img style= "width: 300px" border="0" src="https://4.bp.blogspot.com/--mokNZ-heNA/Xygm9YcQ1gI/AAAAAAAAPYY/-WosPHA24aEUZRdG28TZhYkdoDatU1haACLcBGAsYHQ/s1600/Play%2BConsole%2BImage.png" data-original-width="280" data-original-height="260" alt= Google Play image /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;/p&gt;
      &lt;p&gt;
      2-Step Verification uses both your password and a second way to identify you for added security. This could be a text message to a registered phone, an authenticator app, alerts on supported devices, or a hardware security key. Normally, you only have to do this when you sign in for the first time on a new computer. It’s one of the easiest ways to increase the level of security for you and your team members’ accounts.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://www.google.com/landing/2step/"&gt;Learn more about 2-Step Verification here&lt;/a&gt;, and &lt;a href="https://support.google.com/accounts/answer/185839"&gt;how to set it up for your own account&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      If you have any comments or concerns about using 2-Step Verification to sign in to Google Play Console, or if you think it will impact you or your teams’ use of Google Play Console, &lt;a href="https://forms.gle/mgxiuYcBGZEpvgt49"&gt;use this form to let us know&lt;/a&gt;. All responses will be read by our product team and will help us shape our future plans.
      &lt;/p&gt;
      &lt;p&gt;
      Your team won’t be required to use 2-Step Verification immediately, although we recommend that you &lt;a href="https://myaccount.google.com/security/signinoptions/two-step-verification/enroll-welcome"&gt;set it up now&lt;/a&gt;. We will start mandating 2-Step Verification with new users to Google Play Console towards the end of Q3, followed by existing users with high-risk permissions like app publishing or changing the prices in in-app products, later in the year. We’ll also remind every impacted user in Google Play Console at least 30 days before the change takes effect. We may also start to re-verify when you’re undertaking a sensitive action like changing your developer name or transferring ownership of an app.
      &lt;/p&gt;
      &lt;p&gt;
      Hundreds of thousands of Google Play Console users already use 2-Step Verification to keep their accounts safe, and it's been the default for G Suite customers for years. But we understand that requiring this may impact some of your existing workflows, which is why we’re giving advance notice of this change and asking for your &lt;a href="https://forms.gle/mgxiuYcBGZEpvgt49"&gt;feedback&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      We can all take steps to keep our accounts and the developer community safe. Thanks for publishing your apps on Google Play.
      &lt;/p&gt;
      &lt;/p&gt;

      &lt;br&gt;

      &lt;center&gt;
      &lt;p&gt;
      How useful did you find this blog post?
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href=" " style="color: gold;"&gt;★&lt;/a&gt; &lt;a href=" " style="color: gold;"&gt;★&lt;/a&gt; &lt;a href=" " style="color: gold;"&gt;★&lt;/a&gt; &lt;a href=" " style="color: gold;"&gt;★&lt;/a&gt; &lt;a href=" " style="color: gold;"&gt;★&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://4.bp.blogspot.com/-1LBva3U1LCI/W6kL2pl9ZYI/AAAAAAAAFys/grkBZRKkAWE1eLAh6DPffThJ7gP__SREACLcBGAs/s1600/play_logo_16_9%2B%25285%2529.png" imageanchor="1" &gt;&lt;img id="imgHalf" style="width:40%;" border="0" src="https://4.bp.blogspot.com/-1LBva3U1LCI/W6kL2pl9ZYI/AAAAAAAAFys/grkBZRKkAWE1eLAh6DPffThJ7gP__SREACLcBGAs/s1600/play_logo_16_9%2B%25285%2529.png" data-original-width="499" data-original-height="281" /&gt;&lt;/a&gt;
      &lt;/p&gt;
      &lt;/center&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=r3_tjg2osbg:kFd1QRuNOjY:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=r3_tjg2osbg:kFd1QRuNOjY:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=r3_tjg2osbg:kFd1QRuNOjY:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/r3_tjg2osbg" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6611784671648681417" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6611784671648681417" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/r3_tjg2osbg/android-developers.googplay-console-2-step-verification.html" title="Protecting your Google Play Console account with 2-Step Verification" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-7TUUb_vrnX0/XygzqbjYeiI/AAAAAAAAPYk/VsCPDKONHLwbkd3O6ljQUDbCWCOhv4r-gCLcBGAsYHQ/s72-c/2fa.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/08/android-developers.googplay-console-2-step-verification.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-5569607961131204039</id>
    <published>2020-07-31T16:00:00.000-07:00</published>
    <updated>2020-07-31T16:00:07.834-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Studio" />
    <category scheme="http://www.blogger.com/atom/ns#" term="androidstudio" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
    <category scheme="http://www.blogger.com/atom/ns#" term="latest" />
    <title type="text">11 Weeks of Android: Android Developer Tools</title>
    <content type="html">&lt;meta name="twitter:image" content="https://2.bp.blogspot.com/-C_Tg_Yn__dY/XySSIOVMrcI/AAAAAAAAPX4/HGrPWizqxeEvWeRcB0TaUs-A2RCb6JPxACLcBGAsYHQ/s1600/android_dev_tools_week.png"&gt;
      &lt;img style="display:none" src="https://2.bp.blogspot.com/-C_Tg_Yn__dY/XySSIOVMrcI/AAAAAAAAPX4/HGrPWizqxeEvWeRcB0TaUs-A2RCb6JPxACLcBGAsYHQ/s1600/android_dev_tools_week.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by &lt;a href="https://twitter.com/jamaleason"&gt;Jamal Eason&lt;/a&gt;, Product Manager, Android&lt;/em&gt;&lt;p&gt;

      &lt;a href="https://2.bp.blogspot.com/-C_Tg_Yn__dY/XySSIOVMrcI/AAAAAAAAPX4/HGrPWizqxeEvWeRcB0TaUs-A2RCb6JPxACLcBGAsYHQ/s1600/android_dev_tools_week.png" imageanchor="1" &gt;&lt;img id="imgFull" style="width:100%;" border="0" src="https://2.bp.blogspot.com/-C_Tg_Yn__dY/XySSIOVMrcI/AAAAAAAAPX4/HGrPWizqxeEvWeRcB0TaUs-A2RCb6JPxACLcBGAsYHQ/s1600/android_dev_tools_week.png" data-original-width="1600" data-original-height="900" alt="11 Weeks of Android, Week 7 with badge"/&gt;&lt;/a&gt;

      &lt;p&gt;
      &lt;em&gt;This blog post is part of a weekly series for &lt;a href="https://twitter.com/search?q=%2311WeeksOfAndroid&amp;src=typed_query"&gt;#11WeeksOfAndroid&lt;/a&gt;. For each of the &lt;a href="https://developer.android.com/11weeksofandroid"&gt;#11WeeksOfAndroid&lt;/a&gt;, we’re diving into a key area so you don’t miss anything. This week, we spotlighted &lt;strong&gt;Android Developer Tools&lt;/strong&gt;; here’s a look at what you should know.&lt;/em&gt;
      &lt;/p&gt;
      &lt;h2&gt;The big news &lt;/h2&gt;


      &lt;p&gt;
      During the 11 weeks of Android, we launched a range of developer tool updates in Android Studio. As of today, you can find version 4.0 of Android Studio on the stable release channel,  version 4.1 on the beta channel, and the very latest features of version 4.2 on the canary channel. The focus across each of these versions is a balance of app productivity and delivery of a high quality product that you can rely on for app development. For each day of this past week we highlighted improvements and tips in the key points of your development flow from app design, coding, deployment, build, app testing with the emulator, to app performance profiling. This blog highlights the content that we released during the Android Developer Tools week of 11 Weeks of Android.
      &lt;/p&gt;
      &lt;h2&gt;What to watch and read&lt;/h2&gt;


      &lt;p&gt;
      To see an overview of what is new in Android Developer Tools across the recent releases of Android Studio, check out this video from the #Android11 Beta launch which includes an exciting and in-depth demo.
      &lt;/p&gt;

      &lt;iframe id=imgFull width="560" height="315" src="https://www.youtube.com/embed/NMFGuy6TRqk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
      &lt;p id="imgCaption"&gt;What’s New in Android Development Tools
      &lt;/p&gt;

      &lt;h3&gt;Design&lt;/h3&gt;
      &lt;p&gt;
      At the beginning of the week we had a day of content focused on app design tools for developers. To start, watch this overview video of the latest updates in design tools:
      &lt;/p&gt;

      &lt;iframe id=imgFull width="560" height="315" src="https://www.youtube.com/embed/ns67AAuDs4s" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;p id="imgCaption"&gt;What’s new in Design Tools&lt;/p&gt;

      &lt;p&gt;
      We also posted two in-depth blog posts for the design tools day:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;a href="https://medium.com/androiddevelopers/design-tools-suite-ux-enhancements-in-android-studio-4-1-60c11f54ddb0"&gt;Design Tools Suite UX enhancements in Android Studio 4.1&lt;/a&gt; - details the various changes to the Layout Editor, Resource Manager, Navigation Editor, and updates to keyboard shortcuts to accelerate your UI design flow.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;a href="https://android-developers.googleblog.com/2020/07/introducing-motion-editor.html?linkId=95203859"&gt;Introducing the Motion Editor&lt;/a&gt; -  provides a quick tour of the new Motion Editor and how to use the latest features to create animations for your app.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      To debug your layouts, watch our video on the updates to the layout inspector:
      &lt;/p&gt;

      &lt;iframe id=imgFull width="560" height="315" src="https://www.youtube.com/embed/jyMo18IERLc" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;p id="imgCaption"&gt;Debugging UI issues with Layout Inspector&lt;/p&gt;

      &lt;p&gt;And lastly for design tools, we released a video about the latest developments for Jetpack Compose Design tools:&lt;/p&gt;

      &lt;iframe id=imgFull width="560" height="315" src="https://www.youtube.com/embed/exjL2kGPngI" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;p id="imgCaption"&gt;What's new in Compose Design Tools&lt;/p&gt;

      &lt;h3&gt;Coding &amp; Deployment&lt;/h3&gt;
      &lt;p&gt;
      During the week, we posted tips and tricks to improve your coding experience and app deployment flow in Android Studio. Check out the following social media channels to review the latest postings:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;a href="https://twitter.com/androidstudio"&gt;@androidstudio&lt;/a&gt; - the Twitter channel for the official IDE for Android app development.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;center&gt;
      &lt;div&gt;
      &lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;A next-gen code-shrinker needs smart editor features for your code shrinker rules. Studio 4.0 brings you syntax highlighting, code completion, and error checking when writing rules for R8! &lt;a href="https://t.co/5lSANdYm5F"&gt;pic.twitter.com/5lSANdYm5F&lt;/a&gt;&lt;/p&gt;&amp;mdash; Android Studio (@androidstudio) &lt;a href="https://twitter.com/androidstudio/status/1288140349303644161?ref_src=twsrc%5Etfw"&gt;July 28, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
      &lt;/div&gt;
      &lt;/center&gt;
      &lt;ul&gt;
      &lt;li&gt;&lt;a href="https://twitter.com/androiddev"&gt;@androiddev&lt;/a&gt; - delivers news and announcements for developers from the Android team at Google
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;center&gt;
      &lt;div&gt;
      &lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;&#x1f916; Crash reports made easy with Android Gradle plugin&lt;br&gt; &lt;br&gt;Make your Android Vitals crash reports for production native code more actionable. The trick: packaging native debug symbols in your app bundle with a flip of a flag. &lt;a href="https://twitter.com/hashtag/11WeeksOfAndroid?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#11WeeksOfAndroid&lt;/a&gt;&lt;br&gt; &lt;br&gt;Learn more → &lt;a href="https://t.co/zLlKROUZIO"&gt;https://t.co/zLlKROUZIO&lt;/a&gt; &lt;a href="https://t.co/XUhgP6z8bF"&gt;pic.twitter.com/XUhgP6z8bF&lt;/a&gt;&lt;/p&gt;&amp;mdash; Android Developers (@AndroidDev) &lt;a href="https://twitter.com/AndroidDev/status/1288100265778962432?ref_src=twsrc%5Etfw"&gt;July 28, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
      &lt;/div&gt;
      &lt;/center&gt;
      &lt;p&gt;
      We also shared a new video on how to use the new database inspector in Android Studio:
      &lt;/p&gt;
      &lt;iframe id=imgFull width="560" height="315" src="https://www.youtube.com/embed/UMc7Tu0nKYQ" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;p id="imgCaption"&gt;Database Inspector&lt;/p&gt;

      &lt;p&gt;
      Additionally, you will find an updated blog on the development tools we have in place for Jetpack Hilt:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;a href="https://medium.com/androiddevelopers/dagger-navigation-support-in-android-studio-49aa5d149ec9"&gt;Dagger and Hilt navigation support in Android Studio&lt;/a&gt; - highlights tips and tool accelerators for using Dagger and Hilt APIs in Android Studio.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;Build&lt;/h3&gt;
      &lt;p&gt;
      In the middle of the week, we released four blogs posts around the build system in Android developer tools, which included:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;a href="https://medium.com/androiddevelopers/new-apis-in-the-android-gradle-plugin-f5325742e614"&gt;New APIs in the Android Gradle Plugin&lt;/a&gt; - details the new Domain Specific Language (DSL) interface and documents the new direction for extending the built-in build APIs.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;a href="https://medium.com/androiddevelopers/understanding-your-build-with-the-build-analyzer-5c15688ec72e"&gt;Understanding your build with the Build Analyzer&lt;/a&gt; - a thorough walkthrough of the new build tool that can help you uncover bottlenecks in your build process.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;a href="https://medium.com/androiddevelopers/configuration-caching-deep-dive-bcb304698070"&gt;Configuration Caching deep dive&lt;/a&gt; - a technical explanation on this new preview feature from Gradle  and how to try it out in your project to speed up your builds.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;a href="https://medium.com/androiddevelopers/shrinking-your-app-with-r8-909efac25de4"&gt;Shrinking Your App with R8&lt;/a&gt; - provides an overview of the features available in R8, the reduction in code size you might expect, and show how to enable these features in R8.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;Android Emulator&lt;/h3&gt;
      &lt;p&gt;
      On top of sharing a series of best practices and tips on social media about using the Android Emulator during the week, you can also a full summary in the following in-depth article:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;a href="https://medium.com/androiddevelopers/developing-for-android-11-with-the-android-emulator-a9486af2d7ef"&gt;Developing for Android 11 with the Android Emulator&lt;/a&gt; -  outlines new feature areas like 5G connectivity and foldable device support, and other advantages for using the Android Emulator as a part of your daily development workflow.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;Performance Profilers&lt;/h3&gt;
      &lt;p&gt;
      We know improving app performance is critical for a great user experience. Therefore, we ended the week with a day on performance profilers content.  To start, we posted a video about System Trace and how you can use it to troubleshoot app performance issues:
      &lt;/p&gt;

      &lt;iframe id=imgFull width="560" height="315" src="https://www.youtube.com/embed/EjmIit_amnE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;p id="imgCaption"&gt;Troubleshooting app performance issues with System Trace in Android Studio&lt;/p&gt;

      &lt;p&gt;
      Plus, we published a blog post on C++ memory profiling:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;a href="https://medium.com/androiddevelopers/native-memory-profiling-with-android-studio-4-1-33a9e6b44be"&gt;Native memory profiling with Android Studio 4.1&lt;/a&gt; - explains how to use the new native memory profiler to diagnose memory issues in your C++ code.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h2&gt;&lt;strong&gt;Learning path&lt;/strong&gt;&lt;/h2&gt;


      &lt;p&gt;
      If you’re looking for an easy way to pick up the highlights of this week, check out the &lt;em&gt;&lt;a href="https://developer.android.com/courses/pathways/android-week7-developer-tools"&gt;Developer Tools pathway&lt;/a&gt;&lt;/em&gt;. A pathway is an ordered tutorial that allows users to complete a pre-defined module that culminates in a quiz. It includes videos and blog posts. A virtual badge is awarded to each user who passes the quiz. Test your knowledge of key takeaways about &lt;em&gt;Developer Tools&lt;/em&gt; to earn a limited edition badge.
      &lt;/p&gt;
      &lt;h2&gt;&lt;strong&gt;Key takeaways&lt;/strong&gt;&lt;/h2&gt;


      &lt;p&gt;
      Thank you for tuning in and learning about the latest in Android Development tools. Thanks to all of you who chatted with us during the &lt;a href="https://www.reddit.com/r/androiddev/comments/hwiffd/were_on_the_engineering_team_for_android_studio/"&gt;Reddit AMA this week&lt;/a&gt;. Throughout this past week, we showcased features that can be found either in the latest &lt;a href="https://developer.android.com/studio/"&gt;stable&lt;/a&gt; release or the &lt;a href="https://developer.android.com/studio/preview"&gt;canary&lt;/a&gt; release channel of Android Studio. If you want to try out what you learned this week, &lt;a href="https://developer.android.com/studio"&gt;download Android Studio&lt;/a&gt; today.
      &lt;/p&gt;
      &lt;p&gt;
      Below, you will find a quick listing of where you will find each of the major features. Note, that features in non-stable versions may not land in a particular version until they have reached our quality bar:
      &lt;/p&gt;
      &lt;h3&gt;Features found in Android Studio 4.0 (Stable Channel)&lt;/h3&gt;
      &lt;ul&gt;

      &lt;li&gt;Motion Editor

      &lt;li&gt;Layout Inspector

      &lt;li&gt;Layout Validation

      &lt;li&gt;Custom View Preview

      &lt;li&gt;CPU Profiler Update

      &lt;li&gt;R8 Rules Editing

      &lt;li&gt;Build Analyzer

      &lt;li&gt;Dynamic Feature Dependency

      &lt;li&gt;Clangd support

      &lt;li&gt;Intellij 2019.3
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;Features found in Android Studio 4.1 (Beta Channel)&lt;/h3&gt;
      &lt;ul&gt;

      &lt;li&gt;Database Inspector

      &lt;li&gt;Dependency Injection Tools

      &lt;li&gt;Faster Apply Changes

      &lt;li&gt;Gradle Configuration Caching (Preview)

      &lt;li&gt;Custom View Preview

      &lt;li&gt;Android Emulator in IDE

      &lt;li&gt;Instrumentation Testing

      &lt;li&gt;Profiler UI  Updates

      &lt;li&gt;Native Memory Profiling

      &lt;li&gt;System Trace 2.0

      &lt;li&gt;New Gradle API

      &lt;li&gt;MLKit &amp; TFLite Model Import

      &lt;li&gt;Intellij 2020.1
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;Features found in Android Studio 4.2 + (Canary Channel) &lt;/h3&gt;
      &lt;ul&gt;

      &lt;li&gt;Compose Interactive Preview

      &lt;li&gt;Compose Animation Visualization

      &lt;li&gt;Compose Deploy to Device

      &lt;li&gt;Sample Data API for Compose

      &lt;li&gt;Compose Editing Support

      &lt;li&gt;Test Failure Retention

      &lt;li&gt;Android Emulator- 5G Connectivity and Foldable Support

      &lt;li&gt;Intellij 2020.2 - coming soon
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;Resources&lt;/h3&gt;
      &lt;p&gt;
      &lt;em&gt;You can find the entire playlist of #11WeeksOfAndroid video content &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;here&lt;/a&gt;, and learn more about each week &lt;a href="http://d.android.com/android11"&gt;here&lt;/a&gt;. We’ll continue to spotlight new areas each week, so &lt;a href="https://android-developers.googleblog.com/"&gt;keep an eye out&lt;/a&gt; and follow us on &lt;a href="http://www.twitter.com/androidstudio"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;YouTube&lt;/a&gt;. Thanks so much for letting us be a part of this experience with you! &lt;/em&gt;
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=mcwc8NGZj0A:TPHj8hDoT10:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=mcwc8NGZj0A:TPHj8hDoT10:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=mcwc8NGZj0A:TPHj8hDoT10:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/mcwc8NGZj0A" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5569607961131204039" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5569607961131204039" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/mcwc8NGZj0A/11-weeks-of-android-android-developer.html" title="11 Weeks of Android: Android Developer Tools" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-C_Tg_Yn__dY/XySSIOVMrcI/AAAAAAAAPX4/HGrPWizqxeEvWeRcB0TaUs-A2RCb6JPxACLcBGAsYHQ/s72-c/android_dev_tools_week.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/07/11-weeks-of-android-android-developer.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-8604390750480519355</id>
    <published>2020-07-27T18:00:00.000-07:00</published>
    <updated>2020-07-27T18:00:14.075-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Studio" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Animation" />
    <category scheme="http://www.blogger.com/atom/ns#" term="constraintlayout" />
    <category scheme="http://www.blogger.com/atom/ns#" term="MotionLayout" />
    <title type="text">Introducing the Motion Editor</title>
    <content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-OHB4Yt-SbDA/XxtnmCc8YuI/AAAAAAAAPUs/2_1T6zWdtkklT_5V6odsBhqSA2RXXhGpwCLcBGAsYHQ/s1600/fourmainpanels.png"&gt;
      &lt;img style="display:none" src="https://1.bp.blogspot.com/-OHB4Yt-SbDA/XxtnmCc8YuI/AAAAAAAAPUs/2_1T6zWdtkklT_5V6odsBhqSA2RXXhGpwCLcBGAsYHQ/s1600/fourmainpanels.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Scott Swarthout, Product Manager
      &lt;/em&gt;&lt;p&gt;
      &lt;p&gt;
      We spoke with the Android developer community and learned that animations are important for making UIs more intuitive and memorable. However, we also heard that adding complex animation to Android apps has been a difficult task.To address this problem, we created a powerful set of APIs with Motion Layout and a corresponding tool – Motion Editor, that when combined make it easier to build pixel-perfect animations. This blog is a quick tour of the new Motion Editor and how to use the latest features during your animation development. Additionally today, you can now watch a new video series specifically created to teach you about the various APIs included with MotionLayout. &lt;a href="https://youtu.be/o8c1RO3WgBA"&gt;Watch here&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      Motion Editor is a visual design editor for the MotionLayout layout type, making it easier to create and preview animations. We just released the stable version Motion Editor in Android Studio 4.0 and we already see many developers using it to  build animations.
      &lt;/p&gt;
      &lt;a href="https://3.bp.blogspot.com/-PzIozD8pPIM/XxtnJe7xOVI/AAAAAAAAPUk/KU40_iz5oSIU1FRCumhEmvWKcLZEv7XlACLcBGAsYHQ/s1600/animationrunning.gif" imageanchor="1" &gt;&lt;img border="0" id="imgFull" src="https://3.bp.blogspot.com/-PzIozD8pPIM/XxtnJe7xOVI/AAAAAAAAPUk/KU40_iz5oSIU1FRCumhEmvWKcLZEv7XlACLcBGAsYHQ/s1600/animationrunning.gif" data-original-width="1600" data-original-height="949" /&gt;&lt;/a&gt;
      &lt;p id="imgCaption"&gt;Animation running in the Motion Editor&lt;/p&gt;
      &lt;p&gt;The Motion Editor is an extension of Android Studio’s layout editor, and automatically opens when you select the Design or Split view on an XML file containing a MotionLayout. From there, you can edit your layout and Motion Scene files using the familiar interactive tools of the Layout Editor as well as preview your animations right from the Android Studio preview pane.&lt;/p&gt;
      &lt;h2&gt;Motion Editor&lt;/h2&gt;
      &lt;p&gt;
      The Motion Editor is broken up into several panels which we will describe in this article. The main panels are: &lt;strong&gt;Overview, Selection, Attribute, &lt;/strong&gt;and &lt;strong&gt;Preview&lt;/strong&gt;.
      &lt;/p&gt;
      &lt;a href="https://1.bp.blogspot.com/-OHB4Yt-SbDA/XxtnmCc8YuI/AAAAAAAAPUs/2_1T6zWdtkklT_5V6odsBhqSA2RXXhGpwCLcBGAsYHQ/s1600/fourmainpanels.png" imageanchor="1" &gt;&lt;img border="0" id="imgFull" src="https://1.bp.blogspot.com/-OHB4Yt-SbDA/XxtnmCc8YuI/AAAAAAAAPUs/2_1T6zWdtkklT_5V6odsBhqSA2RXXhGpwCLcBGAsYHQ/s1600/fourmainpanels.png" data-original-width="1600" data-original-height="952" /&gt;&lt;/a&gt;
      &lt;p id="imgCaption"&gt;The Motion Editor has four main panels&lt;/p&gt;
      &lt;br&gt;
      &lt;h2&gt;Overview panel&lt;/h2&gt;
      MotionLayout helps you animate layout changes, which you specify as transitions between &lt;a href="https://developer.android.com/reference/androidx/constraintlayout/widget/ConstraintSet"&gt;ConstraintSets&lt;/a&gt;. The Motion Editor helps you visualize these states with the Overview panel. To edit constraints in a ConstraintSet, click on the corresponding box in the Overview panel.
      &lt;a href="https://2.bp.blogspot.com/-d0JkLjMKWw8/Xxto0v2d7sI/AAAAAAAAPU4/lajvEO3BptcbAswpJ0v7OLJXQdIrH60JQCLcBGAsYHQ/s1600/twoconstraintsets.gif" imageanchor="1" &gt;&lt;img border="0" id="imgHalf" src="https://2.bp.blogspot.com/-d0JkLjMKWw8/Xxto0v2d7sI/AAAAAAAAPU4/lajvEO3BptcbAswpJ0v7OLJXQdIrH60JQCLcBGAsYHQ/s1600/twoconstraintsets.gif" data-original-width="465" data-original-height="444" /&gt;&lt;/a&gt;
      &lt;p id="imgCaption"&gt;MotionLayout Scene with two ConstraintSets, start and end, and a Transition between them&lt;/p&gt;
      &lt;br&gt;
      &lt;h2&gt;Selection panel&lt;/h2&gt;
      &lt;p&gt;
      The Selection panel provides detailed controls based on the state of the Overview panel. It has three modes:
      &lt;/p&gt;
      &lt;ol&gt;
      &lt;li&gt;Motion Layout selected
      &lt;li&gt;ConstraintSet selected
      &lt;li&gt;Transition selected
      &lt;/li&gt;
      &lt;/ol&gt;
      &lt;a href="https://3.bp.blogspot.com/-8cJHzjIqoHI/XxtpOYRmO0I/AAAAAAAAPVA/hFz_RUjTnww6Z-4L1sny8M5Jbq0RQgHFwCLcBGAsYHQ/s1600/selectionpanelthreemodes.png" imageanchor="1" &gt;&lt;img id="imgHalf" border="0" src="https://3.bp.blogspot.com/-8cJHzjIqoHI/XxtpOYRmO0I/AAAAAAAAPVA/hFz_RUjTnww6Z-4L1sny8M5Jbq0RQgHFwCLcBGAsYHQ/s1600/selectionpanelthreemodes.png" data-original-width="1306" data-original-height="1484" /&gt;&lt;/a&gt;
      &lt;p id="imgCaption"&gt;The selection panel has three modes depending on the state of the Overview panel&lt;/p&gt;
      &lt;h3&gt;MotionLayout selected&lt;/h3&gt;
      The Motion Editor supports editing of the base &lt;b&gt;Motion Layout&lt;/b&gt;. When Motion Layout is selected in the Overview panel, you can select components to see if they are properly constrained.
      &lt;center&gt;&lt;a href="https://4.bp.blogspot.com/-O3DvcNC5NzY/XxtpeT0rziI/AAAAAAAAPVI/l_-O0AugBT8gDpEaMm3h1NqUmFgAJCfHwCLcBGAsYHQ/s1600/checkcomponents.png" imageanchor="1" &gt;&lt;img style="width:300px" border="0" src="https://4.bp.blogspot.com/-O3DvcNC5NzY/XxtpeT0rziI/AAAAAAAAPVI/l_-O0AugBT8gDpEaMm3h1NqUmFgAJCfHwCLcBGAsYHQ/s1600/checkcomponents.png" data-original-width="442" data-original-height="768" /&gt;&lt;/a&gt;&lt;/center&gt;
      &lt;p id="imgCaption"&gt;Check if components are properly constrained with the Selection panel&lt;/p&gt;
      &lt;h3&gt;ConstraintSet selected&lt;/h3&gt;
      When a ConstraintSet is selected, the Selection panel displays the list of components and a checkmark to indicate if the component is constrained in this ConstraintSet.
      &lt;a href="https://2.bp.blogspot.com/-HWTV9c0oRzM/Xxtqa7ApewI/AAAAAAAAPVU/30kSv1_2yXcooLfXv6u3cI9DwkvO4nYJgCLcBGAsYHQ/s1600/selectcomponents.png" imageanchor="1" &gt;&lt;img border="0" id="imgHalf" src="https://2.bp.blogspot.com/-HWTV9c0oRzM/Xxtqa7ApewI/AAAAAAAAPVU/30kSv1_2yXcooLfXv6u3cI9DwkvO4nYJgCLcBGAsYHQ/s1600/selectcomponents.png" data-original-width="440" data-original-height="766" /&gt;&lt;/a&gt;
      &lt;p id="imgCaption"&gt;Select components to be included in the ConstraintSet&lt;/p&gt;
      &lt;br&gt;
      &lt;h3&gt;Transition selected&lt;/h3&gt;
      When a transition is selected, you can control the playback of the animation with the animation toolbar. When an animation is selected, click Play ▶️ above the timeline to preview the animation.
      &lt;a href="https://3.bp.blogspot.com/-U0tnyL3QVJI/XxtrDvfnMsI/AAAAAAAAPVc/DlKCzW2a8_gdMSiybbFtoxIBGETUpRQ-wCLcBGAsYHQ/s1600/previewanimations.gif" imageanchor="1" &gt;&lt;img id="imgHalf" border="0" src="https://3.bp.blogspot.com/-U0tnyL3QVJI/XxtrDvfnMsI/AAAAAAAAPVc/DlKCzW2a8_gdMSiybbFtoxIBGETUpRQ-wCLcBGAsYHQ/s1600/previewanimations.gif" data-original-width="433" data-original-height="754" /&gt;&lt;/a&gt;
      &lt;p id="imgCaption"&gt;Preview animations on the Motion Editor timeline&lt;/p&gt;
      &lt;h3&gt;Keyframes&lt;/h3&gt;
      Sometimes you want to modify the path a view takes during an animation. To do this, MotionLayout uses keyframes. We build keyframe editing into the editor to make it easy to tweak animations. To create a new keyframe, click on the new keyframe icon in the top right of the selection panel. This action opens a dialog where you can set attributes for the keyframe. To edit a keyframe, click on the diamond ◆ icon to open the KeyFrame attribute panel.
      &lt;a href="https://3.bp.blogspot.com/-tZxKqvnG1ec/XxttBBGJ5LI/AAAAAAAAPVo/dXgEks0RwZEbqisstvreqoWYadEWVMysgCLcBGAsYHQ/s1600/createkeyframes.png" imageanchor="1" &gt;&lt;img id="imgHalf" border="0" src="https://3.bp.blogspot.com/-tZxKqvnG1ec/XxttBBGJ5LI/AAAAAAAAPVo/dXgEks0RwZEbqisstvreqoWYadEWVMysgCLcBGAsYHQ/s1600/createkeyframes.png" data-original-width="512" data-original-height="505" /&gt;&lt;/a&gt;
      &lt;p id="imgCaption"&gt;Create keyframes with the selection panel&lt;/p&gt;
      &lt;br&gt;
      &lt;h2&gt;Attribute panel&lt;/h2&gt;
      Creating animations in MotionLayout involves editing lots of view parameters, so we brought the Attribute panel from the Layout Editor into the Motion Editor. The Attribute panel includes handy visualizations for Constraints as well as all the attributes set on each view in the Motion Scene file. &lt;br&gt;
      &lt;a href="https://2.bp.blogspot.com/--zOHy3xOeRs/Xxtts0EDCQI/AAAAAAAAPVw/TJqWI_T_hEAlY4aUyi2ooltLDhWBq9rrgCLcBGAsYHQ/s1600/constraintvisualization.png" imageanchor="1" &gt;&lt;img id="imgHalf" border="0" src="https://2.bp.blogspot.com/--zOHy3xOeRs/Xxtts0EDCQI/AAAAAAAAPVw/TJqWI_T_hEAlY4aUyi2ooltLDhWBq9rrgCLcBGAsYHQ/s1600/constraintvisualization.png" data-original-width="283" data-original-height="321" /&gt;&lt;/a&gt;
      &lt;p id="imgCaption"&gt;Constraint visualization in the Attribute panel&lt;/p&gt;
      The Attribute panel is also where you can create custom attributes. You use custom attributes when you want to animate view properties that are not part of the ConstraintLayout or MotionLayout APIs, such as backgroundColor. We made it easy to create custom attributes with autocomplete and input validation for all view properties.
      &lt;center&gt;&lt;a href="https://3.bp.blogspot.com/-BGhNftkvSl4/Xxtu6ZwlbtI/AAAAAAAAPV8/SPXrGihDqjUD4vCoLQX0A-ExVndwI6biwCLcBGAsYHQ/s1600/customattributes.png" imageanchor="1" &gt;&lt;img style="width:500px" border="0" src="https://3.bp.blogspot.com/-BGhNftkvSl4/Xxtu6ZwlbtI/AAAAAAAAPV8/SPXrGihDqjUD4vCoLQX0A-ExVndwI6biwCLcBGAsYHQ/s1600/customattributes.png" data-original-width="500" data-original-height="358" /&gt;&lt;/a&gt;&lt;/center&gt;
      &lt;h2&gt;Preview panel&lt;/h2&gt;
      &lt;p&gt;We wanted to make it easy to quickly edit and get immediate feedback when working on animations, so you can view animations right from the Preview panel. Now you don’t have to recompile and redeploy your app every time you want to make a small tweak to your animation.
      &lt;/p&gt;
      &lt;p&gt;
      We also added a number of features to the Preview panel to make it easier to understand how views are animating. You can preview animations with the Design view and Blueprint view to get a clearer idea of how your views are moving with fewer visual distractions.
      &lt;/p&gt;
      &lt;a href="https://3.bp.blogspot.com/-8navaxj0TLo/XxtvFZPZNdI/AAAAAAAAPWA/mEmBHG_R_ZguSmoMU9BgPNJ_hDRNIWwfgCLcBGAsYHQ/s1600/previewpanel.gif" imageanchor="1" &gt;&lt;img id="imgFull" border="0" src="https://3.bp.blogspot.com/-8navaxj0TLo/XxtvFZPZNdI/AAAAAAAAPWA/mEmBHG_R_ZguSmoMU9BgPNJ_hDRNIWwfgCLcBGAsYHQ/s1600/previewpanel.gif" data-original-width="1462" data-original-height="952" /&gt;&lt;/a&gt;
      &lt;br&gt;&lt;/br&gt;
      We also added visualizations for the paths views take across the screen, including markers for keyframes. We hope these features make it easier to parse complex transitions and simplify the creation experience.
      &lt;br&gt;&lt;/br&gt;
      &lt;a href="https://4.bp.blogspot.com/-VgI0izcaOTs/XxtvOWXi9TI/AAAAAAAAPWI/lhEGlLnpoSscHoRCP7-zmuxTKTzAg-g2QCLcBGAsYHQ/s1600/previewlines.gif" imageanchor="1" &gt;&lt;img id="imgHalf" border="0" src="https://4.bp.blogspot.com/-VgI0izcaOTs/XxtvOWXi9TI/AAAAAAAAPWI/lhEGlLnpoSscHoRCP7-zmuxTKTzAg-g2QCLcBGAsYHQ/s1600/previewlines.gif" data-original-width="586" data-original-height="935" /&gt;&lt;/a&gt;
      &lt;br&gt;&lt;/br&gt;
      &lt;p&gt;
      The Motion Editor is available in Android Studio 4.0, give it a try and let us know what you think! We are eager to see what the community builds with MotionLayout and the Motion Editor. The Android Studio team is constantly gathering feedback to improve the experience of using our tools, so if you have any ideas for new features or run into any issues using these tools, please &lt;a href="https://issuetracker.google.com/issues/new?component=192747&amp;template=1023344"&gt;file a bug&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      The code used in this example, along with several other MotionLayout examples, are available on our GitHub sample page, found &lt;a href="https://github.com/android/views-widgets-samples/blob/master/ConstraintLayoutExamples/motionlayout/src/main/res/layout/motion_24_youtube.xml"&gt;here&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      For more information on MotionLayout, see the following links:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;&lt;a href="https://developer.android.com/training/constraint-layout/motionlayout"&gt;Manage motion and widget animation with MotionLayout&lt;/a&gt;

      &lt;li&gt;&lt;a href="https://codelabs.developers.google.com/codelabs/motion-layout"&gt;Using MotionLayout to Animate Android Apps (codelab)&lt;/a&gt;

      &lt;li&gt;&lt;a href="https://developer.android.com/training/constraint-layout/motion-layout-examples"&gt;MotionLayout examples&lt;/a&gt;

      &lt;li&gt;&lt;a href="https://github.com/android/views-widgets-samples/tree/master/ConstraintLayoutExamples"&gt;MotionLayout / ConstraintLayout Samples (GitHub)&lt;/a&gt;
      &lt;/li&gt;
      &lt;/ul&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=XFcaOfPtGEw:M8ZlqQDpQ4Q:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=XFcaOfPtGEw:M8ZlqQDpQ4Q:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=XFcaOfPtGEw:M8ZlqQDpQ4Q:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/XFcaOfPtGEw" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8604390750480519355" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8604390750480519355" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/XFcaOfPtGEw/introducing-motion-editor.html" title=" Introducing the Motion Editor" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-OHB4Yt-SbDA/XxtnmCc8YuI/AAAAAAAAPUs/2_1T6zWdtkklT_5V6odsBhqSA2RXXhGpwCLcBGAsYHQ/s72-c/fourmainpanels.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/07/introducing-motion-editor.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-45914310112476241</id>
    <published>2020-07-27T08:28:00.001-07:00</published>
    <updated>2020-07-27T08:28:56.936-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="android developers" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Game Development" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play Indie Games Festival" />
    <category scheme="http://www.blogger.com/atom/ns#" term="indie developers" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Indie Games" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Indie Games Festival" />
    <title type="text">The winners of the Google Play Indie Games Festival are...</title>
    <content type="html">&lt;meta name="twitter:image" content="https://2.bp.blogspot.com/-W5Ww1ZIjjt4/Xx7f2ObjE7I/AAAAAAAAPWs/OMgLOvxcVRQ-1Xn265TYZxr7CjDjrsfOQCLcBGAsYHQ/s1600/Indie%2BGame%2BFestival%2B.png"&gt;
      &lt;img style="display:none" src=" "&gt;

      &lt;p&gt;&lt;em&gt;Posted by Leticia Lago, Head of Developer Marketing, EMEA&lt;/em&gt;&lt;p&gt;

      &lt;p&gt;
      We wrapped up the Indie Games Festivals in Europe, Japan, and South Korea. You can now check out the three winners and Top 10 finalists from each of the contests.

      &lt;center&gt; &lt;a href="https://2.bp.blogspot.com/-W5Ww1ZIjjt4/Xx7f2ObjE7I/AAAAAAAAPWs/OMgLOvxcVRQ-1Xn265TYZxr7CjDjrsfOQCLcBGAsYHQ/s1600/Indie%2BGame%2BFestival%2B.png" imageanchor="1" &gt;&lt;img style= "width: 600px" border="0" src="https://2.bp.blogspot.com/-W5Ww1ZIjjt4/Xx7f2ObjE7I/AAAAAAAAPWs/OMgLOvxcVRQ-1Xn265TYZxr7CjDjrsfOQCLcBGAsYHQ/s1600/Indie%2BGame%2BFestival%2B.png" data-original-width="1200" data-original-height="600" alt= Indie Game graphic /&gt;&lt;/a&gt;  &lt;/center&gt;
      &lt;/p&gt;
      &lt;p&gt;
      The Google Play &lt;a href="https://events.withgoogle.com/indie-games-festival/"&gt;Indie Games Festival&lt;/a&gt; celebrates the creativity and innovation that small games developers bring to the Play Store.
      &lt;/p&gt;
      &lt;p&gt;
      We shortlisted 20 finalists for each contest after receiving hundreds of submissions. The finalists were to showcase their art at events in Warsaw, Tokyo, and Seoul. However, this year’s unprecedented events saw the finalists presenting to jury members online. The juries then deliberated to select the winners.
      &lt;/p&gt;

      &lt;p&gt;
      Winning developers receive prize packages designed to help them grow their business on Android and Google Play. Each package offers promotions on the Google Play Store, consultations with members of the Google Play team, Google hardware, promotion campaigns, and more.
      &lt;/p&gt;
      &lt;p&gt;
      Join us in congratulating the developers and try out their games.
      &lt;/p&gt;
      &lt;h2&gt;&lt;strong&gt;Europe&lt;/strong&gt;&lt;/h2&gt;

      &lt;a href="https://1.bp.blogspot.com/-NhQULoL6zfU/Xx7hy8pg8wI/AAAAAAAAPW4/QLsZcbjJH0I2hpdDRO0rzYm7LkuvemoVQCLcBGAsYHQ/s1600/Android%2BDevelopers%2BBlog%2B-%2BEurope%2B-%2BWinners%2B%25281200x600%2529.png" imageanchor="1" &gt;&lt;img style = "width: 600px" border="0" src="https://1.bp.blogspot.com/-NhQULoL6zfU/Xx7hy8pg8wI/AAAAAAAAPW4/QLsZcbjJH0I2hpdDRO0rzYm7LkuvemoVQCLcBGAsYHQ/s1600/Android%2BDevelopers%2BBlog%2B-%2BEurope%2B-%2BWinners%2B%25281200x600%2529.png" data-original-width="1200" data-original-height="600" alt= Image of Europe winners /&gt;&lt;/a&gt;


      &lt;p&gt;
      (In alphabetical order)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.rebeltwins.cookiesmustdie"&gt;Cookies Must Die&lt;/a&gt; by Rebel Twins (Poland)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.Afterburn.Inbento"&gt;inbento&lt;/a&gt; by Afterburn (Poland)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=air.com.RustyLake.WhiteDoor"&gt;The White Door&lt;/a&gt; by Rusty Lake (Netherlands)
      &lt;/p&gt;
      &lt;p&gt;
      The other finalist to make the Top 10 as selected by the jury members are, in alphabetical order:
      &lt;/p&gt;

      &lt;a href="https://3.bp.blogspot.com/-5Wm5xHRz_a4/Xx7ibhOlieI/AAAAAAAAPXA/MLhGDh7D-KUOSKU2pZdRLcRMK-O1l1ZkwCLcBGAsYHQ/s1600/top%2B10%2Beurope%2B.png" imageanchor="1" &gt;&lt;img style= "width: 600px" border="0" src="https://3.bp.blogspot.com/-5Wm5xHRz_a4/Xx7ibhOlieI/AAAAAAAAPXA/MLhGDh7D-KUOSKU2pZdRLcRMK-O1l1ZkwCLcBGAsYHQ/s1600/top%2B10%2Beurope%2B.png" data-original-width="512" data-original-height="256" alt= top 10 finalists/&gt;&lt;/a&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.RobotGentleman.sixtyParsecs.mobile"&gt;60 Parsecs!&lt;/a&gt; by Robot Gentleman (Poland)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.korion.alienescape"&gt;Alien Escape&lt;/a&gt; by KORION Interactive (Germany)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.accidentalqueens.altfrequenciesandroid&amp;hl=us"&gt;Alt-Frequencies&lt;/a&gt; by Accidental Queens (France)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.snapbreak.doors"&gt;Doors: Awakening&lt;/a&gt; by Big Loop Studios (Bulgaria)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.kingbirdgames.dig"&gt;My Diggy Dog 2&lt;/a&gt; by King Bird Games (Russia)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.infinity.traffix"&gt;Traffix&lt;/a&gt; by WebAvenue Unipessoal Lda (Portugal)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.armorgames.voidtyrant"&gt;Void Tyrant&lt;/a&gt; by Quite Fresh Ltd. (United Kingdom)
      &lt;/p&gt;
      &lt;br&gt;

      &lt;h2&gt;&lt;strong&gt;Japan&lt;/strong&gt;&lt;/h2&gt;

      &lt;a href="https://3.bp.blogspot.com/-mrOBUizS7rs/Xx7iw4ioo0I/AAAAAAAAPXI/clZADKi3DxwRczaSUIOd7a1Y2Jlhs6E2wCLcBGAsYHQ/s1600/Android%2BDevelopers%2BBlog%2B-%2BJapan%2B-%2BWinners%2B%25281200x600%2529.png" imageanchor="1" &gt;&lt;img style= "width: 600px" border="0" src="https://3.bp.blogspot.com/-mrOBUizS7rs/Xx7iw4ioo0I/AAAAAAAAPXI/clZADKi3DxwRczaSUIOd7a1Y2Jlhs6E2wCLcBGAsYHQ/s1600/Android%2BDevelopers%2BBlog%2B-%2BJapan%2B-%2BWinners%2B%25281200x600%2529.png" data-original-width="1200" data-original-height="600" alt= winners from Japan /&gt;&lt;/a&gt;


      &lt;p&gt;
      (In alphabetical order)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.ShikiGameStudio.GIGAFALL&amp;hl=ja"&gt;GIGAFALL&lt;/a&gt; by Shiki Game Studio
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.rebuild.met"&gt;METBOY!&lt;/a&gt;  by REBUILD GAMES
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=jp.co.gagex.virgo"&gt;Wasurenaide, otona ni natte mo&lt;/a&gt; by GAGEX Co.,Ltd.
      &lt;/p&gt;
      &lt;p&gt;
      The other final list to make the Top 10 as selected by the jury members are, in alphabetical order:
      &lt;/p&gt;
      &lt;p&gt;

      &lt;a href="https://3.bp.blogspot.com/-HOOMi6x98jU/Xx7jIhnz-RI/AAAAAAAAPXQ/7xIsMhBAcxQlMaskW9VlzovAFfxAJEzJQCLcBGAsYHQ/s1600/top%2B10%2BJapan.png" imageanchor="1" &gt;&lt;img style= "width: 600px"border="0" src="https://3.bp.blogspot.com/-HOOMi6x98jU/Xx7jIhnz-RI/AAAAAAAAPXQ/7xIsMhBAcxQlMaskW9VlzovAFfxAJEzJQCLcBGAsYHQ/s1600/top%2B10%2BJapan.png" data-original-width="512" data-original-height="256" alt= top 10 Japan /&gt;&lt;/a&gt;
      &lt;br&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=jp.oridio.museum&amp;hl=ja"&gt;Boku to hakubutsukan&lt;/a&gt; by oridio Inc.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.simatten.gummy_shooter"&gt;GummyShooter&lt;/a&gt; by simatten
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=air.jp.ne.hap.fighter"&gt;Home Fighter&lt;/a&gt; by hap Inc.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=jp.pya.tenten.app.monstertrader"&gt;MonsterTrader&lt;/a&gt; by Mitsuhiro Okada
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.rpgsnack.snowman"&gt;Snowman Story&lt;/a&gt; by Odencat
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=jp.co.seventhrank.worldfortwo"&gt;World for Two&lt;/a&gt; by Seventh rank
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.odencat.zelle"&gt;Zelle&lt;/a&gt; by Odencat
      &lt;/p&gt;
      &lt;br&gt;
      &lt;h2&gt;&lt;strong&gt;South Korea&lt;/strong&gt;&lt;/h2&gt;

      &lt;a href="https://2.bp.blogspot.com/-GvCWQXJvn6k/Xx7jbfQPzSI/AAAAAAAAPXY/YYTGWV_jBEQ5UKuO3PaOv8KPw5CFAhXvgCLcBGAsYHQ/s1600/Android%2BDevelopers%2BBlog%2B-%2BKorea%2B-%2BWinners%2B%25281200x600%2529.png" imageanchor="1" &gt;&lt;img style= "width: 600px" border="0" src="https://2.bp.blogspot.com/-GvCWQXJvn6k/Xx7jbfQPzSI/AAAAAAAAPXY/YYTGWV_jBEQ5UKuO3PaOv8KPw5CFAhXvgCLcBGAsYHQ/s1600/Android%2BDevelopers%2BBlog%2B-%2BKorea%2B-%2BWinners%2B%25281200x600%2529.png" data-original-width="1200" data-original-height="600" alt= winners from South Korea /&gt;&lt;/a&gt;


      &lt;p&gt;
      (In alphabetical order)
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.tapas.heroesrestaurant&amp;hl=ko"&gt;Heroes Restaurant&lt;/a&gt; by Team Tapas
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.vkslrzm.Zombie&amp;hl=ko"&gt;Magic Survival&lt;/a&gt; by LEME
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.moontm.P_MARS"&gt;Project Mars&lt;/a&gt; by Moontm
      &lt;/p&gt;
      &lt;p&gt;
      The other finalist to make the Top 10 as selected by the online audience and the jury are, in alphabetical order:
      &lt;/p&gt;

      &lt;a href="https://1.bp.blogspot.com/-kuROWilj6cU/Xx7j0OOlrEI/AAAAAAAAPXg/51Fi1CVl7wQDBhtmEOF11rb4MCnSfBL8gCLcBGAsYHQ/s1600/Top%2B10%2BKorea%2B.png" imageanchor="1" &gt;&lt;img style= "width: 600px" border="0" src="https://1.bp.blogspot.com/-kuROWilj6cU/Xx7j0OOlrEI/AAAAAAAAPXg/51Fi1CVl7wQDBhtmEOF11rb4MCnSfBL8gCLcBGAsYHQ/s1600/Top%2B10%2BKorea%2B.png" data-original-width="512" data-original-height="256" alt= Top 10 from South Korea /&gt;&lt;/a&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.CatsByStudio.CatTheDj"&gt;CAT THE DJ&lt;/a&gt; by CATSBY STUDIO
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.iEye.dust&amp;hl=ko"&gt;Dust&lt;/a&gt; by I-eye studio
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.ninemgames.football&amp;hl=ko"&gt;Extreme Football&lt;/a&gt; by 9M Interactive
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.olivecrow.greatsword&amp;hl=ko"&gt;Great Sword&lt;/a&gt; by olivecrow
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.izzle.QV&amp;hl=ko"&gt;QV&lt;/a&gt; by izzle
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.Gabangman.SandShark"&gt;Sand Shark: The Boy and The Sea&lt;/a&gt; by GABANGMAN STUDIO
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://play.google.com/store/apps/details?id=com.sword.master&amp;hl=ko"&gt;Sword Master Story&lt;/a&gt; by CodeCAT
      &lt;/p&gt;
      &lt;p&gt;
      Congratulations to all the winners! And thanks to everyone who entered.
      &lt;/p&gt;
      &lt;br&gt;
      &lt;br&gt;
      &lt;p&gt;
      How useful did you find this blog post?
      &lt;/p&gt;

      &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=changeme-mm/yy" style="color: gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=changeme-mm/yy" style="color: gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=changeme-mm/yy" style="color: gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;entry.2056663615&amp;entry.646747778=changeme-mm/yy" style="color: gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=changeme-mm/yy" style="color: gold;"&gt;★&lt;/a&gt;
      &lt;/p&gt;

      &lt;p&gt;
      &lt;a href="https://4.bp.blogspot.com/-1LBva3U1LCI/W6kL2pl9ZYI/AAAAAAAAFys/grkBZRKkAWE1eLAh6DPffThJ7gP__SREACLcBGAs/s1600/play_logo_16_9%2B%25285%2529.png" imageanchor="1" &gt;&lt;img id="imgHalf" style="width:40%;" border="0" src="https://4.bp.blogspot.com/-1LBva3U1LCI/W6kL2pl9ZYI/AAAAAAAAFys/grkBZRKkAWE1eLAh6DPffThJ7gP__SREACLcBGAs/s1600/play_logo_16_9%2B%25285%2529.png" data-original-width="499" data-original-height="281" /&gt;&lt;/a&gt;
      &lt;/p&gt;




      &lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=e0tc2uXVu3I:6mGEHA9GFdE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=e0tc2uXVu3I:6mGEHA9GFdE:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=e0tc2uXVu3I:6mGEHA9GFdE:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/e0tc2uXVu3I" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/45914310112476241" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/45914310112476241" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/e0tc2uXVu3I/the-winners-of-google-play-indie-games.html" title="The winners of the Google Play Indie Games Festival are..." />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-W5Ww1ZIjjt4/Xx7f2ObjE7I/AAAAAAAAPWs/OMgLOvxcVRQ-1Xn265TYZxr7CjDjrsfOQCLcBGAsYHQ/s72-c/Indie%2BGame%2BFestival%2B.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/07/the-winners-of-google-play-indie-games.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-8623297583699424178</id>
    <published>2020-07-24T10:01:00.000-07:00</published>
    <updated>2020-07-24T10:01:04.143-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Architecture" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Architecture Components" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Developer" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Jetpack" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Jetpack" />
    <category scheme="http://www.blogger.com/atom/ns#" term="latest" />
    <title type="text">11 Weeks of Android: Jetpack</title>
    <content type="html">&lt;meta name="twitter:image" content="https://2.bp.blogspot.com/-bVoOhOXrtJc/XxoUMnqaeBI/AAAAAAAAPUU/82DBnqY5nkQ_HblLRelQw_ZzjLjCUPW0wCLcBGAsYHQ/s1600/week6updatedbanner.png"&gt;
      &lt;img style="display:none" src="https://2.bp.blogspot.com/-bVoOhOXrtJc/XxoUMnqaeBI/AAAAAAAAPUU/82DBnqY5nkQ_HblLRelQw_ZzjLjCUPW0wCLcBGAsYHQ/s1600/week6updatedbanner.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by Diana Wong, Product Manager, Android Jetpack&lt;/em&gt;&lt;p&gt;
      &lt;a href="https://2.bp.blogspot.com/-bVoOhOXrtJc/XxoUMnqaeBI/AAAAAAAAPUU/82DBnqY5nkQ_HblLRelQw_ZzjLjCUPW0wCLcBGAsYHQ/s1600/week6updatedbanner.png" imageanchor="1" &gt;&lt;img border="0" style="width:100%" src="https://2.bp.blogspot.com/-bVoOhOXrtJc/XxoUMnqaeBI/AAAAAAAAPUU/82DBnqY5nkQ_HblLRelQw_ZzjLjCUPW0wCLcBGAsYHQ/s1600/week6updatedbanner.png" data-original-width="1600" data-original-height="900" alt="Android Jetpack Week 6 banner"/&gt;&lt;/a&gt;
      &lt;p&gt;
      &lt;em&gt;This blog post is part of a weekly series for &lt;a href="https://twitter.com/search?q=%2311WeeksOfAndroid&amp;src=typed_query"&gt;#11WeeksOfAndroid&lt;/a&gt;. For each of the &lt;a href="https://developer.android.com/11weeksofandroid"&gt;#11WeeksOfAndroid&lt;/a&gt;, we’re diving into a key area so you don’t miss anything.This week, we spotlighted &lt;strong&gt;Jetpack&lt;/strong&gt;; here’s a look at what you should know.&lt;/em&gt;
      &lt;/p&gt;
      &lt;h2&gt;The big news&lt;/h2&gt;
      &lt;p&gt;
      In 2018, we launched &lt;a href="https://developer.android.com/jetpack"&gt;Android Jetpack&lt;/a&gt; as a suite of libraries to help developers follow best practices, reduce boilerplate code, and write code that works consistently across Android versions and devices. We are excited about the growth we’ve seen and the incredible feedback that developers like you have shared with us. 47% of the top 1000 apps use 2 or more Jetpack libraries, not including core libraries like AppCompat or Lifecycle. Our work over the past year has been about making the basics easy for Android developers, so that you can focus on the code you care about. We have released many updates to our existing libraries as well as new libraries to help make building high-quality apps easier.
      &lt;/p&gt;
      &lt;h2&gt;What to watch&lt;/h2&gt;
      &lt;p&gt;
      We have also been busy pushing out many updates over the past year!
      &lt;/p&gt;
      &lt;p&gt;
      For an overall look at what’s new in Jetpack, be sure to check out our talk from #Android11 Beta launch:
      &lt;/p&gt;
      &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/R3caBPj-6Sg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
      &lt;p&gt;
      It’s a quick fly-by introducing many of the updates to our libraries, with pointers on how to get started.
      &lt;/p&gt;
      &lt;p&gt;
      This week, we’ve also done deep dives into major releases like Hilt, including &lt;a href="https://medium.com/androiddevelopers/hilt-and-dagger-annotations-cheat-sheet-9adea070e495"&gt;cheat sheets&lt;/a&gt; to help you get started, and how we migrated our own samples to use Hilt for dependency injection. Less boilerplate = more fun.
      &lt;/p&gt;
      &lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/B56oV3IHMxg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;
      &lt;p&gt;
      Paging 3.0 is one of our first libraries written Kotlin-first and based on coroutines. The Paging library adds the features you asked for like better error handling, easier list transformations like map or filter, and support for common features like list separators, headers, and footers. We added RxJava, LiveData and ListenableFutures support and backwards compatibility with Paging 2, so it’s easier to migrate.
      &lt;/p&gt;
      &lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/1cwqGOku2a4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;
      &lt;p&gt;
      Using the Camera in your app? &lt;a href="https://www.youtube.com/watch?v=QYkTXJ2TuiA&amp;feature=emb_title"&gt;CameraX&lt;/a&gt; is in Beta and helps developers manage edge cases across different devices and OS versions, so that you don’t have to.
      &lt;/p&gt;
      &lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/LUw_LpTMTto" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;
      &lt;p&gt;
      This year, we've made several major improvements with the release of Navigation 2.3, which allows you to navigate between different screens of your app with ease while also allowing you to follow Android UI principles. Let us &lt;i&gt;navigate&lt;/i&gt; you through them all here:&lt;/p&gt;
      &lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/09qjn706ITA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;
      &lt;h2&gt;Spotlight on &lt;i&gt;Permissions&lt;/i&gt;&lt;/h2&gt;
      &lt;p&gt;
      In Android 11, we continued our work to give users even more control over sensitive permissions. At the same time, it's very important to us that we make it as easy as possible for you as developers to build for Android. With the changes in privacy over the past several releases, Android Jetpack is making it easier for your app to work with Permissions. Now there are type-safe contracts for common intents and more via new &lt;code&gt;&lt;a href="https://developer.android.com/training/basics/intents/result"&gt;ActivityResult&lt;/a&gt;&lt;/code&gt; APIs. These changes simplify how you request permissions, and we’ll continue to work on making permissions easier in the future. Find out more in this post.&lt;/p&gt;

      &lt;h2&gt;Learning path&lt;/h2&gt;
      &lt;p&gt;
      Take a look at our new  &lt;a href="https://developer.android.com/courses/pathways/android-week6-jetpack?linkId=94749714"&gt;Learning pathway&lt;/a&gt; for an easy way to go through all the highlights from this week. It’s an ordered tutorial which guides you through our new content, culminating in a quiz. Bonus: You earn a bright and shiny Jetpack badge to be saved to your &lt;a href="http://google.dev/u/me"&gt;Google Developer Profile&lt;/a&gt;. In addition to the learning pathway, we’ve also got a new &lt;a href="https://developer.android.com/jetpack/androidx/explorer"&gt;library explorer&lt;/a&gt; to make it simple to find more about Jetpack libraries you might be looking for and their latest updates.
      &lt;/p&gt;
      &lt;h2&gt;Key takeaways&lt;/h2&gt;
      &lt;p&gt;Best practices are baked into Jetpack libraries, giving opinionated guidance to make it easier for you to build a higher-quality Android app. We’ve released new features to Navigation and Workmanager, updates to increase the stability of CameraX, added robustness for Biometrics, and more. We’ve also launched new libraries, like our collaboration with Dagger for Hilt and a new library to help improve app startup. Your feedback is important to us; so give these libraries a shot, tell us what you think, and help us improve them!
      &lt;/p&gt;
      &lt;h2&gt;Resources&lt;/h2&gt;
      &lt;p&gt;
      &lt;em&gt;You can find the entire playlist of #11WeeksOfAndroid video content &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;here&lt;/a&gt;, and learn more about each week &lt;a href="http://d.android.com/android11"&gt;here&lt;/a&gt;. We’ll continue to spotlight new areas each week, so &lt;a href="https://android-developers.googleblog.com/"&gt;keep an eye out&lt;/a&gt; and follow us on &lt;a href="https://twitter.com/androiddev"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;YouTube&lt;/a&gt;. Thanks so much for letting us be a part of this experience with you! &lt;/em&gt;
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=BT1CjuA_DHg:3sM25AXqfe4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=BT1CjuA_DHg:3sM25AXqfe4:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=BT1CjuA_DHg:3sM25AXqfe4:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/BT1CjuA_DHg" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8623297583699424178" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8623297583699424178" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/BT1CjuA_DHg/11-weeks-of-android-jetpack.html" title="11 Weeks of Android: Jetpack" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-bVoOhOXrtJc/XxoUMnqaeBI/AAAAAAAAPUU/82DBnqY5nkQ_HblLRelQw_ZzjLjCUPW0wCLcBGAsYHQ/s72-c/week6updatedbanner.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/07/11-weeks-of-android-jetpack.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-2447554282780604373</id>
    <published>2020-07-23T16:20:00.000-07:00</published>
    <updated>2020-07-23T16:20:38.536-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android" />
    <category scheme="http://www.blogger.com/atom/ns#" term="App Startup" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Jetpack" />
    <title type="text">Decrease startup time with Jetpack App Startup</title>
    <content type="html">&lt;meta name="twitter:image" content="https://3.bp.blogspot.com/-nQZnpkNzvHg/Xxiu-grxEuI/AAAAAAAAPTY/SaDDpJtTY-ovG6kQqKRHEMJDJ3ivhVJRgCLcBGAsYHQ/s1600/Jetpack_Decrease_Starup_Time.png" imageanchor="1""&gt;
      &lt;img style="display:none" src="https://3.bp.blogspot.com/-nQZnpkNzvHg/Xxiu-grxEuI/AAAAAAAAPTY/SaDDpJtTY-ovG6kQqKRHEMJDJ3ivhVJRgCLcBGAsYHQ/s1600/Jetpack_Decrease_Starup_Time.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by &lt;a href="https://twitter.com/yrezgui"&gt;Yacine Rezgui&lt;/a&gt;, Developer Advocate and &lt;a href="https://twitter.com/tikurahul"&gt;Rahul Ravikumar&lt;/a&gt;, Software Engineer&lt;/em&gt;&lt;p&gt;

      &lt;center&gt; &lt;a href="https://3.bp.blogspot.com/-nQZnpkNzvHg/Xxiu-grxEuI/AAAAAAAAPTY/SaDDpJtTY-ovG6kQqKRHEMJDJ3ivhVJRgCLcBGAsYHQ/s1600/Jetpack_Decrease_Starup_Time.png" imageanchor="1" &gt;&lt;img style= "width:650px" border="0" src="https://3.bp.blogspot.com/-nQZnpkNzvHg/Xxiu-grxEuI/AAAAAAAAPTY/SaDDpJtTY-ovG6kQqKRHEMJDJ3ivhVJRgCLcBGAsYHQ/s1600/Jetpack_Decrease_Starup_Time.png" data-original-width="1600" data-original-height="476" alt= "Jetpack image"/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p&gt;
      Application startup time is a critical metric for any application. Users expect apps to be responsive and fast to load. When an application does not meet this expectation, it can be disappointing to users. This poor experience may cause a user to rate your app badly on the Play store, or even abandon your app altogether.
      &lt;/p&gt;
      &lt;p&gt;
      &lt;a href="https://developer.android.com/topic/libraries/app-startup"&gt;Jetpack App Startup&lt;/a&gt; is a library that provides a straightforward, performant way to initialize components at application startup. Both library developers and app developers can use App Startup to streamline startup sequences and explicitly set the order of initialization.
      &lt;/p&gt;
      &lt;p&gt;
      Apps and libraries often rely on having components (&lt;code&gt;WorkManager&lt;/code&gt;, &lt;code&gt;ProcessLifecycleObserver&lt;/code&gt;, &lt;code&gt;FirebaseApp&lt;/code&gt; etc.) initialized before &lt;code&gt;Application.onCreate()&lt;/code&gt;. This is usually achieved by using content providers to initialize each dependency. Instead of defining separate content providers for each component that needs to be initialized, App Startup lets you define initializers that share a single content provider. This significantly improves app startup time, usually by ~2ms per content provider. App Startup also helps you &lt;strong&gt;further improve startup performance&lt;/strong&gt; by making it really easy to &lt;a href="https://developer.android.com/topic/libraries/app-startup#disable-individual"&gt;initialize components lazily&lt;/a&gt;. When App Startup goes stable, we will be updating our libraries like `WorkManager` and `ProcessLifecycle` to benefit from this as well.
      &lt;/p&gt;
      &lt;p&gt;
      App Startup supports API level 14 and above.
      &lt;/p&gt;
      &lt;h2&gt;How to use it&lt;/h2&gt;


      &lt;b&gt;Gradle setup&lt;/b&gt;


      &lt;p&gt;
      To use App Startup in your library or app, add the following dependency to your gradle file:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;repositories {
      google()
      maven()
      }

      dependencies {
      implementation "androidx.startup:startup-runtime:1.0.0-alpha02"
      }
      &lt;/pre&gt;


      &lt;b&gt;Define an Initializer&lt;/b&gt;


      &lt;p&gt;
      To be able to use App Startup in your application, you need to define an&lt;a href="https://developer.android.com/topic/libraries/app-startup#implement-initializers"&gt; Initializer&lt;/a&gt;. This is where you define how to initialize and specify your dependencies. Here’s the interface you need to implement:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;interface Initializer&amp;lt;out T: Any&gt; {
      fun create(context: Context): T
      fun dependencies(): List&amp;lt;Class&amp;lt;out Initializer&amp;lt;*&gt;&gt;&gt;
      }&lt;/pre&gt;


      &lt;p&gt;
      As a practical example, here’s what an &lt;code&gt;Initializer&lt;/code&gt; that initializes &lt;strong&gt;WorkManager&lt;/strong&gt; might look like:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;class WorkManagerInitializer : Initializer&amp;lt;WorkManager&gt; {
      override fun create(context: Context): WorkManager {
      val configuration = Configuration.Builder()
      .setMinimumLoggingLevel(Log.DEBUG)
      .build()

      WorkManager.initialize(context, configuration)
      return WorkManager.getInstance(context)
      }

      // This component does not have any dependencies
      override fun dependencies() = emptyList&amp;lt;Class&amp;lt;out Initializer&amp;lt;*&gt;&gt;&gt;()
      }&lt;/pre&gt;


      &lt;p&gt;
      &lt;b&gt;Note: &lt;/b&gt; &lt;i&gt;This example is purely illustrative. This &lt;code&gt;Initializer&lt;/code&gt; should actually be defined by the WorkManager library.&lt;/i&gt; &lt;/p&gt;

      &lt;p&gt;
      Lastly, we need to add an entry for &lt;code&gt;WorkManagerInitializer&lt;/code&gt; in the &lt;code&gt;AndroidManifest.xml&lt;/code&gt;:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;&amp;lt;provider
      android:name="androidx.startup.InitializationProvider"
      android:authorities="${applicationId}.androidx-startup"
      android:exported="false"
      tools:node="merge"&gt;
      &amp;lt;!-- This entry makes WorkManagerInitializer discoverable. --&gt;
      &amp;lt;meta-data android:name="com.example.WorkManagerInitializer"
      android:value="androidx.startup" /&gt;
      &amp;lt;/provider&gt;&lt;/pre&gt;


      &lt;h2&gt;How it works&lt;/h2&gt;


      &lt;p&gt;
      App Startup uses a single content provider called &lt;code&gt;InitializationProvider&lt;/code&gt;. This content provider discovers initializers by introspecting the &lt;code&gt;&amp;lt;meta-data&gt;&lt;/code&gt; entries in the merged &lt;code&gt;AndroidManifest.xml&lt;/code&gt; file. This happens before &lt;code&gt;Application.onCreate()&lt;/code&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      After the discovery phase, it subsequently initializes a component after having initialized all its dependencies. Therefore, a component is &lt;strong&gt;only initialized after&lt;/strong&gt; all its dependencies have been initialized.
      &lt;/p&gt;
      &lt;h2&gt;Lazy initialization&lt;/h2&gt;


      &lt;p&gt;
      We highly recommend using lazy initialization to further improve startup performance. To make initialization of a component lazy, you need to do the following:
      &lt;/p&gt;
      &lt;p&gt;
      Add a &lt;code&gt;tools:node="remove"&lt;/code&gt; attribute to the &lt;code&gt;&amp;lt;meta-data&gt;&lt;/code&gt; entry for the &lt;code&gt;Initializer&lt;/code&gt;. This disables eager initialization.
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;&amp;lt;provider
      android:name="androidx.startup.InitializationProvider"
      android:authorities="${applicationId}.androidx-startup"
      android:exported="false"
      tools:node="merge"&gt;
      &amp;lt;!-- disables eager initialization --&gt;
      &amp;lt;meta-data android:name="com.example.WorkManagerInitializer"
      tools:node="remove" /&gt;
      &amp;lt;/provider&gt;&lt;/pre&gt;


      &lt;p&gt;
      To lazily initialize &lt;code&gt;WorkManagerInitializer&lt;/code&gt; you can then use:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;// This returns an instance of WorkManager
      AppInitializer.getInstance(context)
      .initializeComponent(WorkManagerInitializer.class);&lt;/pre&gt;


      &lt;p&gt;
      Your app now initializes the component lazily. For more information, please read our detailed documentation &lt;a href="https://developer.android.com/topic/libraries/app-startup#disable-individual"&gt;here&lt;/a&gt;.
      &lt;/p&gt;
      &lt;h2&gt;Final thoughts&lt;/h2&gt;


      &lt;p&gt;
      App Startup is currently in &lt;code&gt;alpha-02&lt;/code&gt;. Find out more about how to use it from our &lt;a href="https://developer.android.com/topic/libraries/app-startup"&gt;documentation&lt;/a&gt;. Once you try it out, help us make it better by giving us feedback on the &lt;a href="https://issuetracker.google.com/components/823348#basic"&gt;issue tracker&lt;/a&gt;.
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=C42xoR2gU4c:WDE0jF_quU8:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=C42xoR2gU4c:WDE0jF_quU8:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=C42xoR2gU4c:WDE0jF_quU8:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/C42xoR2gU4c" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/2447554282780604373" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/2447554282780604373" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/C42xoR2gU4c/decrease-startup-time-with-jetpack-app.html" title="Decrease startup time with Jetpack App Startup" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-nQZnpkNzvHg/Xxiu-grxEuI/AAAAAAAAPTY/SaDDpJtTY-ovG6kQqKRHEMJDJ3ivhVJRgCLcBGAsYHQ/s72-c/Jetpack_Decrease_Starup_Time.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/07/decrease-startup-time-with-jetpack-app.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-6276708799725895873</id>
    <published>2020-07-23T13:59:00.000-07:00</published>
    <updated>2020-07-29T16:04:16.827-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="ActivityResult" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Intent" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Jetpack" />
    <category scheme="http://www.blogger.com/atom/ns#" term="permissions" />
    <title type="text">Improving inter-activity communication with Jetpack ActivityResult</title>
    <content type="html">&lt;meta name="twitter:image" content="https://4.bp.blogspot.com/-3Y_7EfhyYGM/XxjIjIB5RkI/AAAAAAAAPTw/KGx1k9HSbuoKrEMBZMJGaN-bS6rkz-j7gCLcBGAsYHQ/s1600/Activity_Result.png"&gt;
      &lt;img style="display:none" src="https://4.bp.blogspot.com/-3Y_7EfhyYGM/XxjIjIB5RkI/AAAAAAAAPTw/KGx1k9HSbuoKrEMBZMJGaN-bS6rkz-j7gCLcBGAsYHQ/s1600/Activity_Result.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by &lt;a href="https://twitter.com/yrezgui"&gt;Yacine Rezgui&lt;/a&gt;, Developer Advocate&lt;/em&gt;&lt;/p&gt;
      &lt;a href="https://4.bp.blogspot.com/-3Y_7EfhyYGM/XxjIjIB5RkI/AAAAAAAAPTw/KGx1k9HSbuoKrEMBZMJGaN-bS6rkz-j7gCLcBGAsYHQ/s1600/Activity_Result.png" imageanchor="1" &gt;&lt;img style="width:100%" border="0" src="https://4.bp.blogspot.com/-3Y_7EfhyYGM/XxjIjIB5RkI/AAAAAAAAPTw/KGx1k9HSbuoKrEMBZMJGaN-bS6rkz-j7gCLcBGAsYHQ/s1600/Activity_Result.png" data-original-width="1600" data-original-height="480" /&gt;&lt;/a&gt;
      &lt;p&gt;
      Whether you're requesting a permission, selecting a file from the system file manager, or expecting data from a 3rd party app, passing data between activities is a core element in inter-process communication on Android. We’ve recently released the new &lt;code&gt;ActivityResult&lt;/code&gt; APIs to help handle these activity results.
      &lt;/p&gt;
      &lt;p&gt;
      Previously, to get results from started activities, apps needed to implement an &lt;code&gt;onActivityResult() &lt;/code&gt;method in their activities and fragments, check which &lt;code&gt;requestCode&lt;/code&gt; a result is referring to, verify that the &lt;code&gt;requestCode&lt;/code&gt; is OK, and finally inspect its result data or extended data.
      &lt;/p&gt;
      &lt;p&gt;
      This leads to complicated code, and it doesn’t provide a type-safe interface for expected arguments when sending or receiving data from an activity.
      &lt;/p&gt;
      &lt;h2&gt;What are the ActivityResult APIs?&lt;/h2&gt;
      &lt;p&gt;
      The &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/activity/result/package-summary"&gt;ActivityResult APIs&lt;/a&gt;&lt;/code&gt; were added to the Jetpack &lt;code&gt;&lt;a href="https://developer.android.com/jetpack/androidx/releases/activity"&gt;activity&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href="https://developer.android.com/jetpack/androidx/releases/fragment"&gt;fragment&lt;/a&gt;&lt;/code&gt; libraries, making it easier to get results from activities by providing type-safe contracts. These &lt;a href="https://developer.android.com/reference/kotlin/androidx/activity/result/contract/ActivityResultContracts"&gt;contracts&lt;/a&gt; define expected input and result types for common actions like taking a picture or requesting a permission, while also providing a way to &lt;a href="https://developer.android.com/training/basics/intents/result#custom"&gt;create your own contracts&lt;/a&gt;.

      &lt;p&gt;
      The &lt;code&gt;ActivityResult&lt;/code&gt; APIs provide components for registering for an activity result, launching a request, and handling its result once it is returned by the system. You can also receive the activity result in a separate class from where the activity is launched and still rely on the type-safe contracts.
      &lt;/p&gt;
      &lt;h2&gt;How to use it&lt;/h2&gt;
      &lt;p&gt;
      To demonstrate how to use the &lt;code&gt;ActivityResult&lt;/code&gt; APIs, let’s go over an example where we’re opening a document.
      &lt;/p&gt;
      &lt;p&gt;
      First, you need to add the following dependencies to your gradle file:
      &lt;/p&gt;
      &lt;pre class="prettyprint"&gt;repositories {
      google()
      maven()
      }

      dependencies {
      implementation "androidx.activity:activity:1.2.0-alpha02"
      implementation "androidx.fragment:fragment:1.3.0-alpha02"
      }&lt;/pre&gt;


      &lt;p&gt;
      You need to register a &lt;a href="https://developer.android.com/reference/kotlin/androidx/activity/result/ActivityResultCallback"&gt;callback&lt;/a&gt; along with the contract that defines its input and output types.
      &lt;/p&gt;
      &lt;p&gt;
      In this context, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/activity/result/contract/ActivityResultContracts.GetContent"&gt;GetContent()&lt;/a&gt;&lt;/code&gt; refers to the &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/content/Intent#ACTION_OPEN_DOCUMENT"&gt;ACTION_GET_DOCUMENT&lt;/a&gt;&lt;/code&gt; intent, and is one of the default contracts already defined in the Activity library. You can find the complete list of contracts &lt;a href="https://developer.android.com/reference/kotlin/androidx/activity/result/contract/ActivityResultContracts"&gt;here&lt;/a&gt;.




      &lt;pre class="prettyprint"&gt;val getContent = registerForActivityResult(GetContent()) { uri: Uri? -&gt;
      // Handle the returned Uri
      }&lt;/pre&gt;


      &lt;p&gt;
      Now we need to launch our activity using the returned launcher. As you can set a mime type filter when listing the selectable files, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/activity/result/contract/ActivityResultContracts.GetContent"&gt;GetContent.launch()&lt;/a&gt;&lt;/code&gt; will accept a string as a parameter:




      &lt;pre class="prettyprint"&gt;val getContent = registerForActivityResult(GetContent()) { uri: Uri? -&gt;
      // Handle the returned Uri
      }

      override fun onCreate(savedInstanceState: Bundle?) {
      // ...

      val selectButton = findViewById&amp;lt;Button&gt;(R.id.select_button)

      selectButton.setOnClickListener {
      // Pass in the mime type you'd like to allow the user to select
      // as the input
      getContent.launch("image/*")
      }
      }&lt;/pre&gt;


      &lt;p&gt;
      Once an image has been selected and you return to your activity, your registered callback will be executed with the expected results.&lt;code&gt; &lt;/code&gt;As you saw through the code snippets, ActivityResult brings an easier developer experience when dealing with results from activities.
      &lt;/p&gt;
      &lt;p&gt;
      Start using &lt;code&gt;Activity 1.2.0-alpha02&lt;/code&gt; and &lt;code&gt;Fragment 1.3.0-alpha02&lt;/code&gt; for a type-safe way to handle your intent results with the new &lt;code&gt;ActivityResult&lt;/code&gt; APIs.
      &lt;/p&gt;
      &lt;p&gt;
      Let us know what you think and how we can make it better by providing feedback on the &lt;a href="https://issuetracker.google.com/issues/new?component=527362&amp;template=1189829"&gt;issue tracker&lt;/a&gt;.
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=nNzLFWeLXNI:bzfk1Ospctc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=nNzLFWeLXNI:bzfk1Ospctc:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=nNzLFWeLXNI:bzfk1Ospctc:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/nNzLFWeLXNI" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6276708799725895873" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6276708799725895873" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/nNzLFWeLXNI/jetpack-activityresult.html" title="Improving inter-activity communication with Jetpack ActivityResult" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://4.bp.blogspot.com/-3Y_7EfhyYGM/XxjIjIB5RkI/AAAAAAAAPTw/KGx1k9HSbuoKrEMBZMJGaN-bS6rkz-j7gCLcBGAsYHQ/s72-c/Activity_Result.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/07/jetpack-activityresult.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-1773640779146062605</id>
    <published>2020-07-23T08:53:00.000-07:00</published>
    <updated>2020-07-23T08:53:25.616-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Fragment" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Jetpack" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Nav Editor" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Navigation" />
    <title type="text">What’s New in Navigation 2020</title>
    <content type="html">&lt;meta name="twitter:image" content="https://4.bp.blogspot.com/-igLPrJ5bA8M/Xxi0yzegEAI/AAAAAAAAPTk/si7V5QsW_18fr_RGOr3SH-xrPdWqTYc-wCLcBGAsYHQ/s1600/What%25E2%2580%2599s%2BNew%2Bin%2BNavigation%2B2020%2Bv02.png" imageanchor="1""&gt;
      &lt;img style="display:none" src=" "&gt;

      &lt;p&gt;&lt;em&gt;Posted by Jeremy Woods, Software Engineer, Android UI Toolkit &lt;/em&gt;&lt;p&gt;

      &lt;center&gt;  &lt;a href="https://4.bp.blogspot.com/-igLPrJ5bA8M/Xxi0yzegEAI/AAAAAAAAPTk/si7V5QsW_18fr_RGOr3SH-xrPdWqTYc-wCLcBGAsYHQ/s1600/What%25E2%2580%2599s%2BNew%2Bin%2BNavigation%2B2020%2Bv02.png" imageanchor="1" &gt;&lt;img style= "width: 600px" border="0" src="https://4.bp.blogspot.com/-igLPrJ5bA8M/Xxi0yzegEAI/AAAAAAAAPTk/si7V5QsW_18fr_RGOr3SH-xrPdWqTYc-wCLcBGAsYHQ/s1600/What%25E2%2580%2599s%2BNew%2Bin%2BNavigation%2B2020%2Bv02.png" data-original-width="1024" data-original-height="512" alt= "Navigation image"/&gt;&lt;/a&gt;&lt;/center&gt;

      &lt;p&gt;
      The latest versions of the Jetpack Navigation library (2.2.0 and 2.3.0) added a lot of requested features and functionality, including &lt;a href="https://developer.android.com/guide/navigation/navigation-dynamic"&gt;dynamic navigation&lt;/a&gt;, &lt;a href="https://developer.android.com/reference/androidx/navigation/NavBackStackEntry"&gt;navigation back stack entries&lt;/a&gt;, a library for &lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/testing/TestNavHostController"&gt;navigation testing&lt;/a&gt;, additional features for &lt;a href="https://developer.android.com/guide/navigation/navigation-navigate#uri"&gt;deep linking&lt;/a&gt;, and more. Let’s go over the most important changes, see what problems they solve, and learn how to use them!
      &lt;/p&gt;

      &lt;h2&gt;Dynamic Navigation&lt;/h2&gt;


      &lt;p&gt;
      We’ve updated Navigation to simplify adding dynamic feature modules for your application.
      &lt;/p&gt;
      &lt;p&gt;
      Previously, implementing navigation between destinations defined in dynamic feature modules required a lot of work. Before you could navigate to the first dynamic destination, you needed to add the Play Core library and the Split Install API to your app. You also needed to check for and download the dynamic module. Once downloaded, you could then finally navigate to the destination. On top of this, if you wanted to have an on-screen progress bar for the module being downloaded, you needed to implement a &lt;code&gt;SplitInstallManager&lt;/code&gt; listener.
      &lt;/p&gt;
      &lt;p&gt;
      To address this complexity, we created the Dynamic Navigator library. This library extends the functionality of the Jetpack Navigation library to provide seamless installation of on-demand dynamic feature modules when navigating. The library handles all Play Store interaction for you, and it even includes a progress screen that provides the download status of your dynamic module.

      &lt;center&gt; &lt;a href="https://3.bp.blogspot.com/-oO5hDxQNAJc/XxiUD9LVzhI/AAAAAAAAPSg/PiUNldhIeL0FipRFA2qsG76nHXqhKKF_ACLcBGAsYHQ/s1600/On%2BDemand%2BSample.png" imageanchor="1" &gt;&lt;img style="width:500px" border="0" src="https://3.bp.blogspot.com/-oO5hDxQNAJc/XxiUD9LVzhI/AAAAAAAAPSg/PiUNldhIeL0FipRFA2qsG76nHXqhKKF_ACLcBGAsYHQ/s1600/On%2BDemand%2BSample.png" data-original-width="1600" data-original-height="1487"alt="The default UI for showing a progress bar when a user navigates to a dynamic feature for the first time."/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;/p&gt;

      &lt;p id="imgCaption"&gt; The default UI for showing a progress bar when a user navigates to a dynamic feature for the first time. The app displays this screen as the corresponding module downloads &lt;/p id="imgCaption"&gt;
      &lt;p&gt;
      To use dynamic navigation, all you need to do is:
      &lt;/p&gt;
      &lt;ol&gt;

      &lt;li&gt;Change instances of &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/fragment/NavHostFragment.html"&gt;NavHostFragment&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/dynamicfeatures/fragment/DynamicNavHostFragment"&gt;DynamicNavHostFragment&lt;/a&gt;&lt;/code&gt;

      &lt;li&gt;Add an &lt;code&gt;app:moduleName&lt;/code&gt; attribute to the destinations associated with a &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/dynamicfeatures/fragment/DynamicNavHostFragment"&gt;DynamicNavHostFragment&lt;/a&gt;&lt;/code&gt;
      &lt;/li&gt;
      &lt;/ol&gt;
      &lt;p&gt;
      For more information on dynamic navigation, see &lt;a href="https://developer.android.com/guide/navigation/navigation-dynamic"&gt;Navigate with dynamic feature modules&lt;/a&gt; and &lt;a href="https://github.com/android/app-bundle-samples/tree/master/DynamicFeatureNavigation"&gt;check out the samples&lt;/a&gt;.
      &lt;/p&gt;

      &lt;h2&gt;NavBackStackEntry: Unlocked&lt;/h2&gt;


      &lt;p&gt;
      When you navigate from one destination to the next, the previous destination and its latest state is placed on the Navigation back stack. If you return to the previous destination by using &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/NavController#popBackStack(kotlin.Int,%20kotlin.Boolean)"&gt;navController.popBackBack()&lt;/a&gt;&lt;/code&gt;, the top back stack entry is removed from the back stack with its state still intact and the &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/NavDestination"&gt;NavDestination&lt;/a&gt;&lt;/code&gt; is restored.  The Navigation back stack contains all of the previous destinations that were needed to arrive at the current &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/NavDestination"&gt;NavDestination&lt;/a&gt;&lt;/code&gt;.

      &lt;p&gt;
      We manage the destinations on the Navigation back stack by encapsulating them into the &lt;code&gt;&lt;a href="https://developer.android.com/reference/androidx/navigation/NavBackStackEntry"&gt;NavBackStackEntry&lt;/a&gt;&lt;/code&gt; class. &lt;code&gt;NavBackStackEntry&lt;/code&gt; is now public. This means that users can go a level deeper than just &lt;code&gt;NavDestinations&lt;/code&gt; and gain access to navigation-specific &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/lifecycle/ViewModel"&gt;ViewModel&lt;/a&gt;&lt;/code&gt;s,  &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/lifecycle/Lifecycle"&gt;Lifecycle&lt;/a&gt;&lt;/code&gt;s, and &lt;a href="https://developer.android.com/reference/kotlin/androidx/savedstate/SavedStateRegistry"&gt;SavedStateRegistries&lt;/a&gt;. You can now properly scope data sharing or ensure it is destroyed at the appropriate time.

      &lt;p&gt;
      See &lt;a href="https://developer.android.com/guide/navigation/navigation-navigate#back-stack"&gt;Navigation and the back stack&lt;/a&gt; for more information.
      &lt;/p&gt;

      &lt;h2&gt;NavGraph ViewModels&lt;/h2&gt;


      &lt;p&gt;
      Since a &lt;code&gt;&lt;a href="https://developer.android.com/reference/androidx/navigation/NavBackStackEntry"&gt;NavBackStackEntry&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/lifecycle/ViewModelProvider"&gt;ViewModelProvider&lt;/a&gt;&lt;/code&gt;, you can create a &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/lifecycle/ViewModel"&gt;ViewModel&lt;/a&gt;&lt;/code&gt; to share data between destinations at the &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/NavGraph"&gt;NavGraph&lt;/a&gt;&lt;/code&gt; level. Each parent navigation graph of all &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/NavDestination"&gt;NavDestinations&lt;/a&gt;&lt;/code&gt; are on the back stack, so your view model can be scoped appropriately:




      &lt;pre class="prettyprint"&gt;val viewModel: MyViewModel by navGraphViewModels(R.id.my_graph)
      &lt;/pre&gt;


      &lt;p&gt;
      For more information on navGraph scoped view models, see &lt;a href="https://developer.android.com/guide/navigation/navigation-programmatic#share_ui-related_data_between_destinations_with_viewmodel"&gt;Share UI-related data between destinations with ViewModel&lt;/a&gt;
      &lt;/p&gt;

      &lt;h2&gt;Returning a Result from a destination&lt;/h2&gt;


      &lt;p&gt;
      By combining &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/lifecycle/ViewModel"&gt;ViewModel&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/lifecycle/Lifecycle"&gt;Lifecycle&lt;/a&gt;&lt;/code&gt;, you can share data between two specific destinations. To do this, &lt;code&gt;&lt;a href="https://developer.android.com/reference/androidx/navigation/NavBackStackEntry"&gt;NavBackStackEntry&lt;/a&gt;&lt;/code&gt; provides a &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/lifecycle/SavedStateHandle"&gt;SavedStateHandle&lt;/a&gt;&lt;/code&gt;, a key-value map that can be used to store and retrieve data, even across configuration changes. By using the given &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/lifecycle/SavedStateHandle"&gt;SavedStateHandle&lt;/a&gt;&lt;/code&gt;, you can access and pass data between destinations. For example to pass data from destination A to destination B:

      &lt;p&gt;
      In destination A:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
      val navController = findNavController();
      // We use a String here, but any type that can be put in a Bundle is supported
      navController.currentBackStackEntry?.savedStateHandle?.getLiveData&amp;lt;String&gt;("key")?.observe(
      viewLifecycleOwner) { result -&gt;
      // Do something with the result.
      }
      }
      &lt;/pre&gt;


      &lt;p&gt;
      And in destination B:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;navController.previousBackStackEntry?.savedStateHandle?.set("key", result)
      &lt;/pre&gt;


      &lt;p&gt;
      See &lt;a href="https://developer.android.com/guide/navigation/navigation-programmatic#returning_a_result"&gt;Returning a result to the previous Destination&lt;/a&gt; for more details.
      &lt;/p&gt;

      &lt;h2&gt;Testing your Navigation Flow&lt;/h2&gt;


      &lt;p&gt;
      Previously, the recommended testing solution for Navigation was Mockito. You would create a mock &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/NavController"&gt;NavController&lt;/a&gt;&lt;/code&gt; and verify that &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/NavController#navigate(kotlin.Int)"&gt;navigate()&lt;/a&gt;&lt;/code&gt; was called at the appropriate time with the correct parameters. Unfortunately, this solution was not enough to test certain areas of Navigation flow, such as &lt;code&gt;&lt;span style="text-decoration:underline;"&gt;ViewModel&lt;/span&gt;&lt;/code&gt; interaction or the Navigation back stack. The Navigation Library now offers a well-integrated solution for these areas with the Navigation Testing library.

      &lt;p&gt;
      The Navigation Testing library adds &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/testing/TestNavHostController"&gt;TestNavHostController&lt;/a&gt;&lt;/code&gt;, which gives access to the Navigation back stack in a test environment. This means that you can now verify the state of the entire back stack. When using the &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/testing/TestNavHostController"&gt;TestNavHostController&lt;/a&gt;&lt;/code&gt;, you can set your own &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/lifecycle/LifecycleOwner"&gt;LifecycleOwner&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/lifecycle/LifecycleOwner"&gt;ViewModelStoreOwner&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/activity/OnBackPressedDispatcher"&gt;OnBackPressDispatcher&lt;/a&gt;&lt;/code&gt; by using the APIs given by &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/NavHostController.html"&gt;NavHostController&lt;/a&gt;&lt;/code&gt;. By setting these components, you can test them in the context of navigation.

      &lt;p&gt;
      For example, here's how to test a destination that uses a nav graph-scoped &lt;code&gt;ViewModel&lt;/code&gt;:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;val navController = TestNavHostController(ApplicationProvider.getApplicationContext())

      // This allows fragments to use by navGraphViewModels()
      navController.setViewModelStore(ViewModelStore())
      navController.setGraph(R.navigation.main_nav)
      &lt;/pre&gt;


      &lt;p&gt;
      The &lt;code&gt;TestNavHostController&lt;/code&gt; also lets you set the current destination. You can move the test directly to the use case being tested without the need to set it up using &lt;code&gt;navigate()&lt;/code&gt; calls. This is extremely convenient for writing tests for different navigation scenarios.
      &lt;/p&gt;
      &lt;p&gt;
      When setting the current destination, you might do something like the following:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;val navController = TestNavHostController(ApplicationProvider.getApplicationContext())

      navController.setGraph(R.navigation.main_nav)
      navController.setCurrentDestination(R.id.destination_1)
      &lt;/pre&gt;


      &lt;p&gt;
      Remember that when setting the current destination, that destination must be part of your nav graph.
      &lt;/p&gt;
      &lt;p&gt;
      For more information about &lt;code&gt;TestNavHostController&lt;/code&gt;, see the &lt;a href="https://developer.android.com/guide/navigation/navigation-testing"&gt;Test Navigation docs&lt;/a&gt;.
      &lt;/p&gt;

      &lt;h2&gt;Nav Deep Linking&lt;/h2&gt;


      &lt;p&gt;
      Deep linking allows you to navigate directly to any destination no matter where you currently are in the &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/navigation/NavGraph"&gt;NavGraph&lt;/a&gt;&lt;/code&gt;. This can be very useful for launching your app to a specific destination or jumping between destinations that would otherwise be inaccessible to one another.

      &lt;p&gt;
      When navigating using a deep link, you can now provide deep link query parameters in any order and even leave them out altogether if they have been given a default value or have been made nullable. This means that if you have provided default values for all of the query parameters on a deep link, the deep link can match a URL pattern without including any query parameters.
      &lt;/p&gt;
      &lt;p&gt;
      For example,&lt;code&gt; &lt;strong&gt;www.example.com?arg1={arg1}&amp;arg2={arg2}&lt;/strong&gt;&lt;/code&gt; will now match with &lt;strong&gt;&lt;code&gt;www.example.com&lt;/code&gt;&lt;/strong&gt; as long as &lt;code&gt;arg1&lt;/code&gt; and &lt;code&gt;arg2&lt;/code&gt; have default values and/or are nullable.

      &lt;p&gt;
      Deep links can also be matched using intent actions and MIME types. Instead of requiring destinations to match by URI, you can provide the deep link with an action or MIME type and match with that instead. You can specify multiple match types for a single deep link, but note that &lt;code&gt;&lt;a href="https://developer.android.com/reference/java/net/URI?hl=en"&gt;URI&lt;/a&gt;&lt;/code&gt; argument matching is prioritized first, followed by &lt;code&gt;action&lt;/code&gt;, and then &lt;code&gt;mimeType&lt;/code&gt;.

      &lt;p&gt;
      You create a deep link by adding it to a destination in XML, using the &lt;a href="https://developer.android.com/guide/navigation/navigation-kotlin-dsl#deep"&gt;Kotlin DSL&lt;/a&gt;, or by using the Navigation Editor in Android Studio.
      &lt;/p&gt;
      &lt;p&gt;
      Here's how to add a deep link to a destination using XML:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;&amp;lt;fragment android:id="@+id/a"
      android:name="com.example.myapplication.FragmentA"
      tools:layout="@layout/a"&gt;
      &amp;lt;deeplink app:url="www.example.com"
      app:action="android.intent.action.MY_ACTION"
      app:mimeType="type/subtype"/&gt;
      &amp;lt;/fragment&gt;
      &lt;/pre&gt;


      &lt;p&gt;
      Here's how to add the same deep link using the Kotlin DSL:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;val baseUri = "http://www.example.com/"

      fragment&amp;lt;MyFragment&gt;(nav_graph.dest.a) {
      deepLink(navDeepLink {
      uriPattern = "${baseUri}"
      action = "android.intent.action.MY_ACTION"
      mimeType = "type/subtype"
      })
      }
      &lt;/pre&gt;


      &lt;p&gt;
      You can also add the same deep link using the Navigation Editor in Android Studio versions 4.1 and higher. Note that you must also be using the Navigation 2.3.0-alpha06 dependency or later.

      &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-pdWiqpW1gXw/XxiWRV0uTDI/AAAAAAAAPSs/yXRuANB1Jv4ylvxb3sez-dt44FXQRiVQACLcBGAsYHQ/s1600/Navigation%2B2020.png" imageanchor="1" &gt;&lt;img style="width:600px" border="0" src="https://1.bp.blogspot.com/-pdWiqpW1gXw/XxiWRV0uTDI/AAAAAAAAPSs/yXRuANB1Jv4ylvxb3sez-dt44FXQRiVQACLcBGAsYHQ/s1600/Navigation%2B2020.png" data-original-width="512" data-original-height="285" alt= "An open dialog in the Navigation Editor for adding a deep link to a destination. There are options to add an URI, a MIME type, and an action, along with a checkBox to Auto Verify"/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;/p&gt;

      &lt;p id="imgCaption"&gt; Adding a deep link to a destination in the Navigation Editor &lt;/p id="imgCaption"&gt;&lt;p&gt;

      &lt;p&gt;
      To navigate to a destination using a deep link, you must first build a &lt;code&gt;&lt;span style="text-decoration:underline;"&gt;NavDeepLinkRequest&lt;/span&gt;&lt;/code&gt; and then pass that deep link request into the Navigation controller's call to &lt;code&gt;&lt;span style="text-decoration:underline;"&gt;navigate()&lt;/span&gt;&lt;/code&gt;:




      &lt;pre class="prettyprint"&gt;val deepLinkRequest = NavDeepLinkRequest.Builder
      .fromUri(Uri.parse("http://www.example.com"))
      .setAction("android.intent.action.MY_ACTION")
      .setMimeType("type/subtype")
      .build()
      navController.navigate(deeplinkRequest)
      &lt;/pre&gt;


      &lt;p&gt;
      For more information on deep links, visit &lt;a href="https://developer.android.com/guide/navigation/navigation-deep-link"&gt;Create a deep link for a destination&lt;/a&gt;, as well as the deep linking sections in &lt;a href="https://developer.android.com/guide/navigation/navigation-navigate#uri"&gt;Navigate to a destination&lt;/a&gt; and &lt;a href="https://developer.android.com/guide/navigation/navigation-kotlin-dsl#deep"&gt;Kotlin DSL&lt;/a&gt;.
      &lt;/p&gt;

      &lt;h2&gt;Navigation Editor&lt;/h2&gt;


      &lt;p&gt;
      Android Studio 4.0 includes new features for the Navigation Editor. You can now edit your destinations using a split pane view. This means you can edit the XML or design and see the changes in real time.

      &lt;center&gt; &lt;a href="https://3.bp.blogspot.com/-OrKSwU1pDp4/XxiW3r7JExI/AAAAAAAAPS0/X6ilvTUqRvMhqJKKqI-DHyEMeKEZy6BMgCLcBGAsYHQ/s1600/split-mode-screenshot.png" imageanchor="1" &gt;&lt;img style= "width: 600px" border="0" src="https://3.bp.blogspot.com/-OrKSwU1pDp4/XxiW3r7JExI/AAAAAAAAPS0/X6ilvTUqRvMhqJKKqI-DHyEMeKEZy6BMgCLcBGAsYHQ/s1600/split-mode-screenshot.png" data-original-width="1600" data-original-height="890" alt= "The Navigation Editor opened in split pane mode with the navigation.xml file on the left and the corresponding nav graph on the right. The nav graph has 6 destination, and a nested graph" /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;/p&gt;

      &lt;p id="imgCaption"&gt; Viewing a navigation.xml file in split view mode &lt;/p id="imgCaption"&gt;&lt;p&gt;

      &lt;p&gt;
      In Android Studio 4.1, the Navigation Editor introduced the component tree. This allows you to traverse the entire nav graph, freely going in and out of nested graphs.

      &lt;center&gt; &lt;a href="https://4.bp.blogspot.com/-Vi4AOZ9oiGQ/XxiYmmZMvVI/AAAAAAAAPTA/9eJM-PBEoQ0PcKuY8337m9LXvmUJmcK9ACLcBGAsYHQ/s1600/new-component-tree.gif" imageanchor="1" &gt;&lt;img style= "width: 600px" border="0" src="https://4.bp.blogspot.com/-Vi4AOZ9oiGQ/XxiYmmZMvVI/AAAAAAAAPTA/9eJM-PBEoQ0PcKuY8337m9LXvmUJmcK9ACLcBGAsYHQ/s1600/new-component-tree.gif" data-original-width="1600" data-original-height="889"alt = "An open component tree of a nav graph in the Navigation Editor. It starts viewing the entire graph, then moves to the title screen before going into the nested profiles graph. After cycling through the destinations in the profiles graph, it goes back to fragments in the original graph"/&gt;&lt;/a&gt; &lt;/center&gt;
      &lt;/p&gt;
      &lt;p&gt;

      &lt;/p&gt;
      &lt;p id="imgCaption"&gt; Navigating through a graph in the Navigation Editor &lt;/p id="imgCaption"&gt;&lt;p&gt;

      &lt;h2&gt;Additional Changes&lt;/h2&gt;


      &lt;p&gt;
      &lt;code&gt;&lt;a href="https://developer.android.com/reference/androidx/navigation/ui/NavigationUI?hl=en"&gt;NavigationUI&lt;/a&gt;&lt;/code&gt; can now use any layout that uses the &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/customview/widget/Openable?hl=en"&gt;Openable&lt;/a&gt;&lt;/code&gt; interface. This means that it is no longer limited to &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/drawerlayout/widget/DrawerLayout?hl=en"&gt;DrawerLayout&lt;/a&gt;&lt;/code&gt; and allows for customization of the &lt;code&gt;&lt;a href="https://developer.android.com/reference/androidx/navigation/ui/AppBarConfiguration?hl=en"&gt;AppBarConfiguration&lt;/a&gt;&lt;/code&gt;. You can provide your &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/customview/widget/Openable?hl=en"&gt;Openable&lt;/a&gt;&lt;/code&gt; and use it as the layout instead.

      &lt;p&gt;
      Navigation also provides support for Kotlin DSL. Kotlin DSL can be used to create different destinations, actions, or deep links. For more information see the &lt;a href="https://developer.android.com/guide/navigation/navigation-kotlin-dsl"&gt;documentation for Kotlin DSL&lt;/a&gt;.
      &lt;/p&gt;

      &lt;h2&gt;Wrap up&lt;/h2&gt;


      &lt;p&gt;
      Navigation added lots of useful features over the past year. You can simplify your dynamic feature modules by taking advantage of the Dynamic Navigator library, use a &lt;code&gt;NavBackStackEntry&lt;/code&gt; to help correctly scope your data, easily test your navigation flow using the &lt;code&gt;TestNavHostController&lt;/code&gt;, or even match your deep link using intent actions and/or MIME types.
      &lt;/p&gt;
      &lt;p&gt;
      For more information about the Jetpack Navigation library, check out the documentation at &lt;a href="https://developer.android.com/guide/navigation"&gt;https://developer.android.com/guide/navigation&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;
      Please provide feedback (or file bugs) using the &lt;a href="http://www.issuetracker.google.com/issues?q=componentid:409828"&gt;Navigation issuetracker component&lt;/a&gt;.
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=FX5yH2GrOfU:EPlb0nJfe-s:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=FX5yH2GrOfU:EPlb0nJfe-s:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=FX5yH2GrOfU:EPlb0nJfe-s:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/FX5yH2GrOfU" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1773640779146062605" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1773640779146062605" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/FX5yH2GrOfU/whats-new-in-navigation-2020.html" title="What’s New in Navigation 2020" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://4.bp.blogspot.com/-igLPrJ5bA8M/Xxi0yzegEAI/AAAAAAAAPTk/si7V5QsW_18fr_RGOr3SH-xrPdWqTYc-wCLcBGAsYHQ/s72-c/What%25E2%2580%2599s%2BNew%2Bin%2BNavigation%2B2020%2Bv02.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/07/whats-new-in-navigation-2020.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-1520826385850712443</id>
    <published>2020-07-21T06:20:00.000-07:00</published>
    <updated>2020-07-21T09:56:42.736-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Architecture" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Architecture Components" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Jetpack" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Paging" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Architecture Components" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Jetpack" />
    <category scheme="http://www.blogger.com/atom/ns#" term="latest" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Paging" />
    <title type="text">Getting on the same page with Paging 3</title>
    <content type="html">&lt;meta name="twitter:image" content="https://3.bp.blogspot.com/-eGu7cn6d12k/XxIE85ezRwI/AAAAAAAAPQk/Pej7vTRjtRw-fAv6U-KwupNSV9FV92kTgCLcBGAsYHQ/s1600/Paging%2Bdata%2Bwith%2Bpaging%2B3.0%2Bv03.png"&gt;
      &lt;img style="display:none" src="https://3.bp.blogspot.com/-eGu7cn6d12k/XxIE85ezRwI/AAAAAAAAPQk/Pej7vTRjtRw-fAv6U-KwupNSV9FV92kTgCLcBGAsYHQ/s1600/Paging%2Bdata%2Bwith%2Bpaging%2B3.0%2Bv03.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by &lt;a href="https://twitter.com/FMuntenescu"&gt;Florina Muntenescu&lt;/a&gt;, Android Developer Advocate&lt;/em&gt;&lt;p&gt;

      &lt;a href="https://3.bp.blogspot.com/-eGu7cn6d12k/XxIE85ezRwI/AAAAAAAAPQk/Pej7vTRjtRw-fAv6U-KwupNSV9FV92kTgCLcBGAsYHQ/s1600/Paging%2Bdata%2Bwith%2Bpaging%2B3.0%2Bv03.png" imageanchor="1" &gt;&lt;img id="imgFull" style="width:100%;" border="0" src="https://3.bp.blogspot.com/-eGu7cn6d12k/XxIE85ezRwI/AAAAAAAAPQk/Pej7vTRjtRw-fAv6U-KwupNSV9FV92kTgCLcBGAsYHQ/s1600/Paging%2Bdata%2Bwith%2Bpaging%2B3.0%2Bv03.png" data-original-width="1024" data-original-height="512" alt="Android graphic"&gt;&lt;/a&gt;

      &lt;h1&gt;Getting on the same page with Paging 3&lt;/h1&gt;


      &lt;p&gt;
      The Paging library enables you to load large sets of data gradually and gracefully, reducing network usage and system resources. You told us that the Paging 2.0 API was not enough - that you wanted easier error handling, more flexibility to implement list transformations like &lt;code&gt;map&lt;/code&gt; or &lt;code&gt;filter&lt;/code&gt;, and support for list separators, headers, and footers. So we launched Paging 3.0 (now in alpha02), a complete rewrite of the library using Kotlin coroutines (still supporting Java users) and offering the features you asked for.
      &lt;/p&gt;
      &lt;h2&gt;Paging 3 highlights&lt;/h2&gt;


      &lt;p&gt;
      The Paging 3 API provides support for common functionality that you would otherwise need to implement yourself when loading data in pages:
      &lt;/p&gt;
      &lt;ul&gt;

      &lt;li&gt;Keeps track of the keys to be used for retrieving the next and previous page.

      &lt;li&gt;Automatically requests the correct next page when the user scrolls to the end of the loaded data.

      &lt;li&gt;Ensures that multiple requests aren’t triggered at the same time.

      &lt;li&gt;Tracks loading state and allows you to display it in a &lt;code&gt;RecyclerView&lt;/code&gt; list item or elsewhere in your UI, and provides easy retry functionality for failed loads.

      &lt;li&gt;Enables common operations like &lt;code&gt;map&lt;/code&gt; or &lt;code&gt;filter&lt;/code&gt; on the list to be displayed, independently of whether you’re using &lt;code&gt;Flow&lt;/code&gt;, &lt;code&gt;LiveData&lt;/code&gt;, or RxJava &lt;code&gt;Flowable&lt;/code&gt; or &lt;code&gt;Observable&lt;/code&gt;.

      &lt;li&gt;Provides an easy way of implementing list separators.

      &lt;li&gt;Simplifies data caching, ensuring that you’re not executing data transformations at every configuration change.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      We also made several Paging 3 components backwards compatible with Paging 2.0; so if you already use Paging in your app, you can &lt;a href="https://developer.android.com/topic/libraries/architecture/paging/v3-migration"&gt;migrate&lt;/a&gt; incrementally.
      &lt;/p&gt;
      &lt;h2&gt;Adopting Paging 3 in your app&lt;/h2&gt;


      &lt;p&gt;
      Let’s say that we’re implementing an app that displays all the good doggos. We get the doggos from a &lt;code&gt;GoodDoggos&lt;/code&gt; API that supports index-based pagination. Let’s go over the Paging components we need to implement and how they fit into your app architecture. The following examples will be in Kotlin, using coroutines. For examples in the Java programming language using LiveData/RxJava, check out the &lt;a href="https://developer.android.com/topic/libraries/architecture/paging/v3-overview"&gt;documentation&lt;/a&gt;.
      &lt;/p&gt;
      &lt;p&gt;
      The Paging library integrates directly into the recommended Android app architecture in each layer of your app:
      &lt;/p&gt;

      &lt;center&gt; &lt;a href="https://3.bp.blogspot.com/-WDij3mAUZEo/XxXYliprwbI/AAAAAAAAPRY/EaHnaoH0S60ydry-Q7ZPpw1L5FuPG_cnACLcBGAsYHQ/s1600/Screenshot%2B2020-07-01%2Bat%2B13.41.47.png" imageanchor="1" &gt;&lt;img style= width:600px border="0" src="https://3.bp.blogspot.com/-WDij3mAUZEo/XxXYliprwbI/AAAAAAAAPRY/EaHnaoH0S60ydry-Q7ZPpw1L5FuPG_cnACLcBGAsYHQ/s1600/Screenshot%2B2020-07-01%2Bat%2B13.41.47.png" data-original-width="1600" data-original-height="446" alt="Paging components"/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt; Paging components and their integration in the app architecture" &lt;/p id="imgCaption"&gt;


      &lt;h3&gt;Defining the data source&lt;/h3&gt;


      &lt;p&gt;
      Depending on where you’re loading data from, implement only a &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/PagingSource"&gt;PagingSource&lt;/a&gt;&lt;/code&gt; or a &lt;code&gt;PagingSource&lt;/code&gt; and a &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/RemoteMediator"&gt;RemoteMediator&lt;/a&gt;&lt;/code&gt;:

      &lt;ul&gt;

      &lt;li&gt;If you’re loading data from a &lt;strong&gt;single source&lt;/strong&gt;, like network, local database, a file, etc, implement the &lt;code&gt;PagingSource&lt;/code&gt; (if you’re using Room, it &lt;a href="https://developer.android.com/training/data-storage/room/accessing-data#paging-integration"&gt;implements&lt;/a&gt; the &lt;code&gt;PagingSource&lt;/code&gt; for you starting in Room 2.3.0-alpha).

      &lt;li&gt;If you’re loading data from a &lt;strong&gt;layered source&lt;/strong&gt;, like a network data source with a local database cache, implement the &lt;code&gt;RemoteMediator&lt;/code&gt; to merge the two sources and a &lt;code&gt;PagingSource&lt;/code&gt; for the local database cache.
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;PagingSource&lt;/h3&gt;


      &lt;p&gt;
      A &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/PagingSource"&gt;PagingSource&lt;/a&gt;&lt;/code&gt; defines the source of paging data and how to retrieve data from that single source. The &lt;code&gt;PagingSource&lt;/code&gt; should be part of the repository layer. Implement &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/PagingSource#load"&gt;load()&lt;/a&gt;&lt;/code&gt; to retrieve paged data from your data source and return the loaded data together with information about next and previous keys. This is a &lt;code&gt;suspend&lt;/code&gt; function, so you can call other &lt;code&gt;suspend&lt;/code&gt; functions here, such as the network call:




      &lt;pre class="prettyprint"&gt;class DoggosRemotePagingSource(
      val backend: GoodDoggosService
      ) : PagingSource&amp;lt;Int, Dog&gt;() {
      override suspend fun load(
      params: LoadParams&amp;lt;Int&gt;
      ): LoadResult&amp;lt;Int, Dog&gt; {
      try {
      // Load page 1 if undefined.
      val nextPageNumber = params.key ?: 1
      val response = backend.getDoggos(nextPageNumber)
      return LoadResult.Page(
      data = response.doggos,
      prevKey = null, // Only paging forward.
      nextKey = response.nextPageNumber + 1
      )
      } catch (e: Exception) {
      // Handle errors in this block
      return LoadResult.Error(exception)
      }
      }
      }&lt;/pre&gt;


      &lt;h3&gt;PagingData and Pager&lt;/h3&gt;


      &lt;p&gt;
      The container for paginated data is called &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/PagingData"&gt;PagingData&lt;/a&gt;&lt;/code&gt;. A new instance of &lt;code&gt;PagingData&lt;/code&gt; is created every time your data is refreshed. To build a stream of &lt;code&gt;PagingData&lt;/code&gt; create a &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/Pager"&gt;Pager&lt;/a&gt;&lt;/code&gt; instance, using a &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/PagingConfig"&gt;PagingConfig&lt;/a&gt;&lt;/code&gt; configuration object and a function that tells the &lt;code&gt;Pager&lt;/code&gt; how to get an instance of your &lt;code&gt;PagingSource&lt;/code&gt; implementation.

      &lt;p&gt;
      In your &lt;code&gt;ViewModel&lt;/code&gt; you construct the &lt;code&gt;Pager&lt;/code&gt; object and expose a &lt;code&gt;Flow&amp;lt;PagingData&gt;&lt;/code&gt; to the UI. &lt;code&gt;Flow&amp;lt;PagingData&gt;&lt;/code&gt; has a handy &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/package-summary#cachedin"&gt;cachedIn()&lt;/a&gt;&lt;/code&gt; method that makes the data stream shareable and allows you to cache the content of a &lt;code&gt;Flow&amp;lt;PagingData&gt;&lt;/code&gt; in a &lt;code&gt;CoroutineScope&lt;/code&gt;. That way if you implement any transformations on the data stream, they will not be triggered again each time you &lt;code&gt;collect&lt;/code&gt; the &lt;code&gt;flow&lt;/code&gt; after &lt;code&gt;Activity&lt;/code&gt; recreation. The caching should be done as close to the UI layer as possible, but not in the UI layer, as we want to make sure it persists beyond configuration change. The best place for this would be in a &lt;code&gt;ViewModel&lt;/code&gt;, using the &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/lifecycle/package-summary#viewmodelscope"&gt;viewModelScope&lt;/a&gt;&lt;/code&gt;:




      &lt;pre class="prettyprint"&gt;val doggosPagingFlow = Pager(PagingConfig(pageSize = 10)) {
      DogRemotePagingSource(goodDoggosService)
      }.flow.cachedIn(viewModelScope)&lt;/pre&gt;


      &lt;h3&gt;PagingDataAdapter&lt;/h3&gt;


      &lt;p&gt;
      To connect a &lt;code&gt;RecyclerView&lt;/code&gt; to the &lt;code&gt;PagingData&lt;/code&gt;, implement a &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/PagingDataAdapter"&gt;PagingDataAdapter&lt;/a&gt;&lt;/code&gt;:




      &lt;pre class="prettyprint"&gt;class DogAdapter(diffCallback: DiffUtil.ItemCallback&amp;lt;Dog&gt;) :
      PagingDataAdapter&amp;lt;Dog, DogViewHolder&gt;(diffCallback) {
      override fun onCreateViewHolder(
      parent: ViewGroup,
      viewType: Int
      ): DogViewHolder {
      return DogViewHolder(parent)
      }

      override fun onBindViewHolder(holder: DogViewHolder, position: Int) {
      val item = getItem(position)
      if(item == null) {
      holder.bindPlaceholder()
      } else {
      holder.bind(item)
      }
      }
      }&lt;/pre&gt;


      &lt;p&gt;
      Then, in your &lt;code&gt;Activity&lt;/code&gt;/&lt;code&gt;Fragment&lt;/code&gt; you’ll have to collect the &lt;code&gt;Flow&amp;lt;PagingData&gt;&lt;/code&gt; and submit it to the &lt;code&gt;PagingDataAdapter&lt;/code&gt;. This is what the implementation would look like in an &lt;code&gt;Activity onCreate()&lt;/code&gt;:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;val viewModel by viewModels&amp;lt;DoggosViewModel&gt;()

      val pagingAdapter = DogAdapter(DogComparator)
      val recyclerView = findViewById&amp;lt;RecyclerView&gt;(R.id.recycler_view)
      recyclerView.adapter = pagingAdapter

      lifecycleScope.launch {
      viewModel.doggosPagingFlow.collectLatest { pagingData -&gt;
      pagingAdapter.submitData(pagingData)
      }
      }&lt;/pre&gt;


      &lt;h2&gt;Paged data transformations&lt;/h2&gt;

      &lt;center&gt; &lt;a href="https://2.bp.blogspot.com/-97PVeeAEpNk/XxXah7PeWZI/AAAAAAAAPRs/TaNPCBrtBMkzlbxBJkdv6dJEsbCuwSQ5ACLcBGAsYHQ/s1600/Screenshot%2B2020-07-19%2Bat%2B12.31.10.png" imageanchor="1" &gt;&lt;img style= "width:300px" border="0" src="https://2.bp.blogspot.com/-97PVeeAEpNk/XxXah7PeWZI/AAAAAAAAPRs/TaNPCBrtBMkzlbxBJkdv6dJEsbCuwSQ5ACLcBGAsYHQ/s1600/Screenshot%2B2020-07-19%2Bat%2B12.31.10.png" data-original-width="668" data-original-height="1314"alt="A filtered list"/&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt; Displaying a filtered list &lt;/p id="imgCaption"&gt;

      &lt;p&gt;
      Transforming &lt;code&gt;PagingData&lt;/code&gt; streams is very similar to the way you would any other data stream. For example, if we only want to display playful doggos from our &lt;code&gt;Flow&amp;lt;PagingData&amp;lt;Dog&gt;&gt;&lt;/code&gt; we would need to map the &lt;code&gt;Flow&lt;/code&gt; object and then &lt;code&gt;filter&lt;/code&gt; the &lt;code&gt;PagingData&lt;/code&gt;:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;doggosPagingFlow.map { pagingData -&gt;
      pagingData.filter { dog -&gt; dog.isPlayful }
      }&lt;/pre&gt;

      &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-BhEPdp1l9P8/XxXbF-Z0F0I/AAAAAAAAPR4/KyDkrVZTmuMFMfRqhIuYf9ifj7x87KE9QCLcBGAsYHQ/s1600/Screenshot%2B2020-07-19%2Bat%2B12.23.26.png" imageanchor="1" &gt;&lt;img style= "width: 300px" border="0" src="https://1.bp.blogspot.com/-BhEPdp1l9P8/XxXbF-Z0F0I/AAAAAAAAPR4/KyDkrVZTmuMFMfRqhIuYf9ifj7x87KE9QCLcBGAsYHQ/s1600/Screenshot%2B2020-07-19%2Bat%2B12.23.26.png" data-original-width="668" data-original-height="1318" alt="list with separators" /&gt;&lt;/a&gt; &lt;/center&gt;

      &lt;p id="imgCaption"&gt; List with separators &lt;/p id="imgCaption"&gt;

      &lt;p&gt;
      Adding &lt;strong&gt;list separators&lt;/strong&gt; is also a paged data transformation where we transform the &lt;code&gt;PagingData&lt;/code&gt; to insert separator objects into the list. For example, we can insert letter separators for our doggos’ names. When using separators, you will need to implement your own UI model class that supports the new separator items. To modify your &lt;code&gt;PagingData&lt;/code&gt; to add separators, you will use the &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/PagingData#insertseparators"&gt;insertSeparators&lt;/a&gt;&lt;/code&gt; transformation:




      &lt;pre class="prettyprint"&gt;pager.flow.map { pagingData: PagingData&amp;lt;Dog&gt; -&gt;
      pagingData.map { doggo -&gt;
      // Convert items in stream to UiModel.DogModel.
      UiModel.DogModel(doggo)
      }
      .insertSeparators&amp;lt;UiModel.DogModel, UiModel&gt; { before: Dog, after: Dog -&gt;
      return if(after == null) {
      // we're at the end of the list
      null
      } else if (before == null || before.breed != after.breed) {
      // breed above and below different, show separator
      UiModel.SeparatorItem(after.breed)
      } else {
      // no separator
      null
      }
      }
      }
      }.cachedIn(viewModelScope)&lt;/pre&gt;


      &lt;p&gt;
      Just as before, we're using &lt;code&gt;cachedIn&lt;/code&gt; right before the UI layer. This ensures that loaded data and the results of any transformations can be cached and reused after a configuration change.
      &lt;/p&gt;
      &lt;h3&gt;Advanced Paging work with RemoteMediator&lt;/h3&gt;


      &lt;p&gt;
      If you’re paging data from a &lt;strong&gt;layered source&lt;/strong&gt;, you should implement a &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/RemoteMediator"&gt;RemoteMediator&lt;/a&gt;&lt;/code&gt;. For example, in the implementation of this class you need to request data from the network and save it in the database. The &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/RemoteMediator#load"&gt;load()&lt;/a&gt;&lt;/code&gt; method will be triggered whenever there is no more data in the database to be displayed. Based on the &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/PagingState"&gt;PagingState&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/paging/LoadType"&gt;LoadType&lt;/a&gt;&lt;/code&gt; we can construct the next page request.

      &lt;p&gt;
      It’s your responsibility to define how the previous and next remote page keys are constructed and retained as the Paging library doesn’t know what your API looks like. For example, you can associate remote keys to every item you receive from the network and save them in the database.
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;override suspend fun load(loadType: LoadType, state: PagingState&amp;lt;Int, Dog&gt;): MediatorResult {

      val page = ... // computed based on loadType and state

      try {
      val doggos = backend.getDoggos(page)
      doggosDatabase.doggosDao().insertAll(doggos)

      val endOfPaginationReached = emails.isEmpty()
      return MediatorResult.Success(endOfPaginationReached = endOfPaginationReached)
      } catch (exception: Exception) {
      return MediatorResult.Error(exception)
      }
      }&lt;/pre&gt;


      &lt;p&gt;
      When you’re loading data from the network and saving it to the database, the database is the source of truth for the data displayed on the screen. This means that the UI will be displaying data from your database, so you’ll have to implement a &lt;code&gt;PagingSource&lt;/code&gt; for your database. If you’re using Room, you’ll just need to add a new query in your DAO that returns a &lt;code&gt;PagingSource&lt;/code&gt;:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;@Query("SELECT * FROM doggos")
      fun getDoggos(): PagingSource&amp;lt;Int, Dog&gt;&lt;/pre&gt;


      &lt;p&gt;
      The &lt;code&gt;Pager&lt;/code&gt; implementation changes slightly in this case, as you need to pass the &lt;code&gt;RemoteMediator&lt;/code&gt; instance as well:
      &lt;/p&gt;



      &lt;pre class="prettyprint"&gt;val pagingSourceFactory = { database.doggosDao().getDoggos() }

      return Pager(
      config = PagingConfig(pageSize = NETWORK_PAGE_SIZE),
      remoteMediator = DoggosRemoteMediator(service, database),
      pagingSourceFactory = pagingSourceFactory
      ).flow&lt;/pre&gt;


      &lt;p&gt;
      Check out the &lt;a href="https://developer.android.com/topic/libraries/architecture/paging/v3-network-db"&gt;docs&lt;/a&gt; to find out more about working with RemoteMediator. For a complete implementation of &lt;code&gt;RemoteMediator&lt;/code&gt; in an app, check out step 15 of the &lt;a href="https://codelabs.developers.google.com/codelabs/android-paging/#14"&gt;Paging codelab&lt;/a&gt; and the &lt;a href="https://github.com/googlecodelabs/android-paging/blob/step13-19_network_and_database/app/src/main/java/com/example/android/codelabs/paging/data/GithubRemoteMediator.kt"&gt;accompanying code&lt;/a&gt;.
      &lt;/p&gt;


      &lt;br&gt;
      &lt;/br&gt;

      &lt;p&gt;
      We’ve designed the Paging 3 library to help you accommodate both simple and complex uses of Paging. It makes it easier to work with large sets of data whether it’s being loaded from the network, a database, in-memory cache, or some combination of these sources. The library is built on coroutines and &lt;code&gt;Flow&lt;/code&gt;, making it easy to call suspend functions and work with streams of data.
      &lt;/p&gt;
      &lt;p&gt;
      As Paging 3 is still in alpha, we need your help to make it better! To get started, find out more about Paging in our &lt;a href="https://developer.android.com/topic/libraries/architecture/paging/v3-overview"&gt;documentation&lt;/a&gt; and try it out by taking our &lt;a href="https://codelabs.developers.google.com/codelabs/android-paging/"&gt;codelab&lt;/a&gt; or checking out the &lt;a href="https://github.com/android/architecture-components-samples/tree/master/PagingWithNetworkSample"&gt;sample&lt;/a&gt;. Then, let us know how we can improve the library by creating issues on the &lt;a href="https://issuetracker.google.com/issues?q=componentid:413106%20status:openhttps://issuetracker.google.com/issues?q=componentid:413106%20status:open"&gt;Issue Tracker&lt;/a&gt;.
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=BK5IcZZce8c:EGCBoyG6j5g:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=BK5IcZZce8c:EGCBoyG6j5g:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=BK5IcZZce8c:EGCBoyG6j5g:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/BK5IcZZce8c" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1520826385850712443" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1520826385850712443" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/BK5IcZZce8c/getting-on-same-page-with-paging-3.html" title="Getting on the same page with Paging 3" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-eGu7cn6d12k/XxIE85ezRwI/AAAAAAAAPQk/Pej7vTRjtRw-fAv6U-KwupNSV9FV92kTgCLcBGAsYHQ/s72-c/Paging%2Bdata%2Bwith%2Bpaging%2B3.0%2Bv03.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/07/getting-on-same-page-with-paging-3.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-3986498600555531101</id>
    <published>2020-07-17T14:00:00.000-07:00</published>
    <updated>2020-07-17T14:00:14.060-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="#11WeeksOfAndroid" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Developer" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
    <category scheme="http://www.blogger.com/atom/ns#" term="Kotlin" />
    <category scheme="http://www.blogger.com/atom/ns#" term="latest" />
    <title type="text">11 Weeks of Android: Languages</title>
    <content type="html">&lt;meta name="twitter:image" content="https://2.bp.blogspot.com/-u-Ak7QxkniQ/XxEA6qopFCI/AAAAAAAAPQY/7KRjRBKd6PguitA7i4PvGnaC8cvLANXcQCLcBGAsYHQ/s1600/Week5.png"&gt;
      &lt;img style="display:none" src="https://2.bp.blogspot.com/-u-Ak7QxkniQ/XxEA6qopFCI/AAAAAAAAPQY/7KRjRBKd6PguitA7i4PvGnaC8cvLANXcQCLcBGAsYHQ/s1600/Week5.png"&gt;

      &lt;p&gt;&lt;em&gt;Posted by &lt;a href="https://twitter.com/davidjwiner?lang=en"&gt;David Winer&lt;/a&gt;, Product Manager&lt;/em&gt;&lt;p&gt;
      &lt;a href="https://2.bp.blogspot.com/-u-Ak7QxkniQ/XxEA6qopFCI/AAAAAAAAPQY/7KRjRBKd6PguitA7i4PvGnaC8cvLANXcQCLcBGAsYHQ/s1600/Week5.png" imageanchor="1" &gt;&lt;img id="imgFull" style="width:100%;" border="0" src="https://2.bp.blogspot.com/-u-Ak7QxkniQ/XxEA6qopFCI/AAAAAAAAPQY/7KRjRBKd6PguitA7i4PvGnaC8cvLANXcQCLcBGAsYHQ/s1600/Week5.png" data-original-width="1600" data-original-height="901" alt="11 Weeks of Android, Week 5: Languages" /&gt;&lt;/a&gt;


      &lt;p&gt;
      &lt;em&gt;This blog post is part of a weekly series for &lt;a href="http://d.android.com/11weeksofandroid"&gt;#11WeeksOfAndroid&lt;/a&gt;. Each week we’re diving into a key area of Android so you don’t miss anything. This week, we spotlighted &lt;strong&gt;languages&lt;/strong&gt;; here’s a look at what you should know.&lt;/em&gt;
      &lt;/p&gt;
      &lt;p&gt;
      Modern Android development starts with outstanding language support. Together, Kotlin, the Java programming language, and C++ form the foundation for Android’s APIs and the tools you use every day for app development. This week we dove into all of the latest news across Android’s three core languages: from Kotlin coroutines to Android 11’s new Java APIs to better tools for native development, there’s a lot packed into the latest release.
      &lt;/p&gt;
      &lt;iframe id=imgFull width="560" height="315" src="https://www.youtube.com/embed/AgPj1Q6D--c" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
      &lt;h2&gt;Kotlin and coroutines&lt;/h2&gt;


      &lt;p&gt;
      Kotlin is at the core of Android’s modern, opinionated APIs. We hear from Android developers around the world that they love Kotlin for how expressive it is, how it helps you write higher quality apps, and how easy it is to start using in your existing Java codebase. More than 70% of the top 1000 apps on the Play Store now use Kotlin, and &lt;a href="https://www.zdnet.com/article/programming-languages-javascript-now-used-by-12-million-developers-but-kotlin-rises-fastest/"&gt;SlashData&lt;/a&gt;&lt;sup&gt;TM&lt;/sup&gt; announced earlier this year that Kotlin has been the fastest growing language community in percentage terms over the past two years. With the Android 11 beta, we decided to further embrace Kotlin by officially recommending coroutines for asynchronous work on Android.
      &lt;/p&gt;
      &lt;iframe id=imgFull width="560" height="315" src="https://www.youtube.com/embed/6manrgTPzyA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
      &lt;p&gt;
      Coroutines make it easy to write, read, and understand async code. The coroutines library is stable and already has deep integration with many of the Jetpack libraries you may be using, including &lt;a href="https://developer.android.com/training/data-storage/room/referencing-data"&gt;Room&lt;/a&gt;, &lt;a href="https://medium.com/androiddevelopers/livedata-with-coroutines-and-flow-part-i-reactive-uis-b20f676d25d7"&gt;LiveData&lt;/a&gt;, and &lt;a href="https://developer.android.com/topic/libraries/architecture/workmanager"&gt;WorkManager&lt;/a&gt;. If you’re new to coroutines, check out &lt;a href="https://www.youtube.com/watch?v=6manrgTPzyA"&gt;Android ❤️ Coroutines: How to Manage Async Tasks in Kotlin&lt;/a&gt;, the latest &lt;a href="https://developer.android.com/courses/pathways/android-coroutines"&gt;coroutines learning pathway&lt;/a&gt;, and our new &lt;a href="https://developer.android.com/kotlin/coroutines"&gt;coroutines developer guide&lt;/a&gt;.
      &lt;/p&gt;
      &lt;h2&gt;Getting started with Kotlin&lt;/h2&gt;


      &lt;p&gt;
      From Kotlin-first libraries in Android Jetpack to deep integration with the tools in Android Studio, Android is deeply committed to Kotlin — and there’s never been a better time to start using it. We’ve heard from many of you, though, that convincing your team to adopt Kotlin is not always easy. Even though Kotlin is 100% interoperable with the Java programming language, your teammates might have concerns. Is it worth spending the time learning a new language? How should you prioritize Kotlin against our other product and technology priorities?
      &lt;/p&gt;
      &lt;p&gt;
      This week we released a &lt;a href="https://developer.android.com/stories/apps/google-home"&gt;new case study&lt;/a&gt; from the Google Home team to help answer some of these questions. Over the course of one year, the Google Home team moved all new feature development to Kotlin and found their null pointer exceptions dropped by 33% during the same period. This is consistent with what we’ve heard from Android teams all over the world — from &lt;a href="https://developer.android.com/stories/apps/duolingo-kotlin"&gt;Duolingo&lt;/a&gt; to &lt;a href="https://www.youtube.com/watch?v=ao9QvtpszOU&amp;vl=en"&gt;Zomato&lt;/a&gt; to &lt;a href="https://www.youtube.com/watch?v=roSp-SsBPp4"&gt;Cash App&lt;/a&gt; — Kotlin is delivering value both in the form of productivity and higher app quality for teams large and small. For all our latest case studies and data on Kotlin, check out our new &lt;a href="http://d.android.com/kotlin/stories"&gt;Kotlin case studies page&lt;/a&gt;.
      &lt;/p&gt;
      &lt;iframe id=imgFull width="560" height="315" src="https://www.youtube.com/embed/oSim9fBFy-E" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

      &lt;p&gt;
      For beginners, we announced the launch of our new &lt;a href="https://developer.android.com/courses/topics/android-basics-kotlin"&gt;Android Basics in Kotlin&lt;/a&gt; course. If you are just learning how to program, Android Basics teaches essential programming concepts like functions and variables and will take you from “Hello World” all the way up through building a whole collection of Android apps in Kotlin.
      &lt;/p&gt;
      &lt;h2&gt;The Java programming language and C++&lt;/h2&gt;


      &lt;p&gt;
      When we announced official support for Kotlin three years ago, we didn’t forget about the large number of Java and C++ Android developers. In the Android 11 release, we sought to keep improving our support for both of these languages. With the Android 11 beta, we upgraded our Java library support with a number of new APIs from OpenJDK 9, 10, and 11. We also unveiled Java library desugaring in Android Studio 4.0, making it easy to use many of these newer Java APIs even on older Android devices — for those of you who have asked for java.time support on older devices, we’ve heard you loud and clear, and it’s arrived. For all the latest information on how to make use of these newer APIs, check out Murat Yener’s talk &lt;a href="https://www.youtube.com/watch?v=heCvGfOGH0s&amp;feature=emb_title"&gt;Support for newer Java APIs&lt;/a&gt;. With Android 11, we also updated the Android runtime to make app startup even faster with &lt;a href="https://medium.com/androiddevelopers/improving-app-startup-with-i-o-prefetching-62fbdb9c9020"&gt;I/O prefetching&lt;/a&gt;.
      &lt;/p&gt;

      &lt;iframe id=imgFull width="560" height="315" src="https://www.youtube.com/embed/heCvGfOGH0s" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
      &lt;p&gt;
      The C++ developer experience continues to get better, too. Android 11 included updates across the native toolchain, including better tools for &lt;a href="https://medium.com/androiddevelopers/pgo-for-native-android-applications-1a48a99e95d0"&gt;profile-guided optimization (PGO)&lt;/a&gt; and &lt;a href="https://android-developers.googleblog.com/2020/02/native-dependencies-in-android-studio-40.html"&gt;improvements to native dependency management&lt;/a&gt; in Android Studio 4.0.
      &lt;/p&gt;
      &lt;h2&gt;Ever-improving toolchains&lt;/h2&gt;


      &lt;p&gt;
      Finally, we continue to focus on improvements to the D8 and R8 compilers in Android Studio. Android Studio comes with built-in support for the &lt;a href="https://developer.android.com/studio/build/shrink-code"&gt;R8 shrinker&lt;/a&gt;, which helps you keep your app’s memory footprint small, leading to higher installs and retention among your users. We also recently added support for shrinking Kotlin libraries and apps that use Kotlin reflection with R8. For more information, check out Mads Ager and Morten Krogh-Jespersen’s latest &lt;a href="https://medium.com/androiddevelopers/shrinking-kotlin-libraries-and-applications-using-kotlin-reflection-with-r8-6fe0a0e2d115"&gt;Medium post&lt;/a&gt;.
      &lt;/p&gt;
      &lt;h3&gt;Resources&lt;/h3&gt;


      &lt;p&gt;
      &lt;em&gt;You can find the entire playlist of #11WeeksOfAndroid video content &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;here&lt;/a&gt;, and learn more about each week &lt;a href="http://d.android.com/android11"&gt;here&lt;/a&gt;. We’ll continue to spotlight new areas each week, so &lt;a href="https://android-developers.googleblog.com/"&gt;keep an eye out&lt;/a&gt; and follow us on &lt;a href="https://twitter.com/androiddev"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.youtube.com/user/androiddevelopers"&gt;YouTube&lt;/a&gt;. Thanks so much for letting us be a part of this experience with you! &lt;/em&gt;
      &lt;/p&gt;&lt;div class="feedflare"&gt;
      &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=TAVenccN-sA:OMHIt6RkyU0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=TAVenccN-sA:OMHIt6RkyU0:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=TAVenccN-sA:OMHIt6RkyU0:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
      &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/TAVenccN-sA" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3986498600555531101" />
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3986498600555531101" />
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/TAVenccN-sA/11-weeks-of-android-languages.html" title="11 Weeks of Android: Languages" />
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" />
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-u-Ak7QxkniQ/XxEA6qopFCI/AAAAAAAAPQY/7KRjRBKd6PguitA7i4PvGnaC8cvLANXcQCLcBGAsYHQ/s72-c/Week5.png" height="72" width="72" />
    <feedburner:origLink>http://android-developers.googleblog.com/2020/07/11-weeks-of-android-languages.html</feedburner:origLink>
  </entry>
</feed>
